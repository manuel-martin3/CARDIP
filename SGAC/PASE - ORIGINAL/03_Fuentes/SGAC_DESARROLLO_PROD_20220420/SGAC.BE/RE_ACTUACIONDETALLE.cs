//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AL_MOVIMIENTODETALLE))]
    [KnownType(typeof(RE_ACTOMIGRATORIO))]
    [KnownType(typeof(RE_ACTUACION))]
    [KnownType(typeof(RE_ACTUACIONADJUNTO))]
    [KnownType(typeof(MA_ESTADO))]
    [KnownType(typeof(RE_ACTUACIONDETALLE))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_TARIFARIO))]
    [KnownType(typeof(RE_ACTUACIONINSUMODETALLE))]
    [KnownType(typeof(RE_ACTUACIONPARTICIPANTE))]
    [KnownType(typeof(RE_ACTUACIONANOTACION))]
    [KnownType(typeof(RE_PAGO))]
    [KnownType(typeof(RE_REGISTROMILITAR))]
    [KnownType(typeof(RE_REGISTROCIVIL))]
    [KnownType(typeof(RE_ACTOJUDICIALPARTICIPANTE))]
    public partial class RE_ACTUACIONDETALLE: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long acde_iActuacionDetalleId
        {
            get { return _acde_iActuacionDetalleId; }
            set
            {
                if (_acde_iActuacionDetalleId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'acde_iActuacionDetalleId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _acde_iActuacionDetalleId = value;
                    OnPropertyChanged("acde_iActuacionDetalleId");
                }
            }
        }
        private long _acde_iActuacionDetalleId;
    
        [DataMember]
        public long acde_iActuacionId
        {
            get { return _acde_iActuacionId; }
            set
            {
                if (_acde_iActuacionId != value)
                {
                    ChangeTracker.RecordOriginalValue("acde_iActuacionId", _acde_iActuacionId);
                    if (!IsDeserializing)
                    {
                        if (RE_ACTUACION != null && RE_ACTUACION.actu_iActuacionId != value)
                        {
                            RE_ACTUACION = null;
                        }
                    }
                    _acde_iActuacionId = value;
                    OnPropertyChanged("acde_iActuacionId");
                }
            }
        }
        private long _acde_iActuacionId;
    
        [DataMember]
        public short acde_sTarifarioId
        {
            get { return _acde_sTarifarioId; }
            set
            {
                if (_acde_sTarifarioId != value)
                {
                    ChangeTracker.RecordOriginalValue("acde_sTarifarioId", _acde_sTarifarioId);
                    if (!IsDeserializing)
                    {
                        if (SI_TARIFARIO != null && SI_TARIFARIO.tari_sTarifarioId != value)
                        {
                            SI_TARIFARIO = null;
                        }
                    }
                    _acde_sTarifarioId = value;
                    OnPropertyChanged("acde_sTarifarioId");
                }
            }
        }
        private short _acde_sTarifarioId;
    
        [DataMember]
        public short acde_sItem
        {
            get { return _acde_sItem; }
            set
            {
                if (_acde_sItem != value)
                {
                    _acde_sItem = value;
                    OnPropertyChanged("acde_sItem");
                }
            }
        }
        private short _acde_sItem;
    
        [DataMember]
        public System.DateTime acde_dFechaRegistro
        {
            get { return _acde_dFechaRegistro; }
            set
            {
                if (_acde_dFechaRegistro != value)
                {
                    _acde_dFechaRegistro = value;
                    OnPropertyChanged("acde_dFechaRegistro");
                }
            }
        }
        private System.DateTime _acde_dFechaRegistro;
    
        [DataMember]
        public bool acde_bRequisitosFlag
        {
            get { return _acde_bRequisitosFlag; }
            set
            {
                if (_acde_bRequisitosFlag != value)
                {
                    _acde_bRequisitosFlag = value;
                    OnPropertyChanged("acde_bRequisitosFlag");
                }
            }
        }
        private bool _acde_bRequisitosFlag;
    
        [DataMember]
        public int acde_ICorrelativoActuacion
        {
            get { return _acde_ICorrelativoActuacion; }
            set
            {
                if (_acde_ICorrelativoActuacion != value)
                {
                    _acde_ICorrelativoActuacion = value;
                    OnPropertyChanged("acde_ICorrelativoActuacion");
                }
            }
        }
        private int _acde_ICorrelativoActuacion;
    
        [DataMember]
        public int acde_ICorrelativoTarifario
        {
            get { return _acde_ICorrelativoTarifario; }
            set
            {
                if (_acde_ICorrelativoTarifario != value)
                {
                    _acde_ICorrelativoTarifario = value;
                    OnPropertyChanged("acde_ICorrelativoTarifario");
                }
            }
        }
        private int _acde_ICorrelativoTarifario;
    
        [DataMember]
        public Nullable<int> acde_IFuncionarioFirmanteId
        {
            get { return _acde_IFuncionarioFirmanteId; }
            set
            {
                if (_acde_IFuncionarioFirmanteId != value)
                {
                    _acde_IFuncionarioFirmanteId = value;
                    OnPropertyChanged("acde_IFuncionarioFirmanteId");
                }
            }
        }
        private Nullable<int> _acde_IFuncionarioFirmanteId;
    
        [DataMember]
        public Nullable<int> acde_IFuncionarioContactoId
        {
            get { return _acde_IFuncionarioContactoId; }
            set
            {
                if (_acde_IFuncionarioContactoId != value)
                {
                    _acde_IFuncionarioContactoId = value;
                    OnPropertyChanged("acde_IFuncionarioContactoId");
                }
            }
        }
        private Nullable<int> _acde_IFuncionarioContactoId;
    
        [DataMember]
        public Nullable<int> acde_IImpresionFuncionarioId
        {
            get { return _acde_IImpresionFuncionarioId; }
            set
            {
                if (_acde_IImpresionFuncionarioId != value)
                {
                    _acde_IImpresionFuncionarioId = value;
                    OnPropertyChanged("acde_IImpresionFuncionarioId");
                }
            }
        }
        private Nullable<int> _acde_IImpresionFuncionarioId;
    
        [DataMember]
        public string acde_vNotas
        {
            get { return _acde_vNotas; }
            set
            {
                if (_acde_vNotas != value)
                {
                    _acde_vNotas = value;
                    OnPropertyChanged("acde_vNotas");
                }
            }
        }
        private string _acde_vNotas;
    
        [DataMember]
        public Nullable<int> acde_IFuncionarioAnulaId
        {
            get { return _acde_IFuncionarioAnulaId; }
            set
            {
                if (_acde_IFuncionarioAnulaId != value)
                {
                    _acde_IFuncionarioAnulaId = value;
                    OnPropertyChanged("acde_IFuncionarioAnulaId");
                }
            }
        }
        private Nullable<int> _acde_IFuncionarioAnulaId;
    
        [DataMember]
        public string acde_vMotivoAnulacion
        {
            get { return _acde_vMotivoAnulacion; }
            set
            {
                if (_acde_vMotivoAnulacion != value)
                {
                    _acde_vMotivoAnulacion = value;
                    OnPropertyChanged("acde_vMotivoAnulacion");
                }
            }
        }
        private string _acde_vMotivoAnulacion;
    
        [DataMember]
        public Nullable<long> acde_iReferenciaId
        {
            get { return _acde_iReferenciaId; }
            set
            {
                if (_acde_iReferenciaId != value)
                {
                    ChangeTracker.RecordOriginalValue("acde_iReferenciaId", _acde_iReferenciaId);
                    if (!IsDeserializing)
                    {
                        if (RE_ACTUACIONDETALLE2 != null && RE_ACTUACIONDETALLE2.acde_iActuacionDetalleId != value)
                        {
                            RE_ACTUACIONDETALLE2 = null;
                        }
                    }
                    _acde_iReferenciaId = value;
                    OnPropertyChanged("acde_iReferenciaId");
                }
            }
        }
        private Nullable<long> _acde_iReferenciaId;
    
        [DataMember]
        public short acde_sEstadoId
        {
            get { return _acde_sEstadoId; }
            set
            {
                if (_acde_sEstadoId != value)
                {
                    ChangeTracker.RecordOriginalValue("acde_sEstadoId", _acde_sEstadoId);
                    if (!IsDeserializing)
                    {
                        if (MA_ESTADO != null && MA_ESTADO.esta_sEstadoId != value)
                        {
                            MA_ESTADO = null;
                        }
                    }
                    _acde_sEstadoId = value;
                    OnPropertyChanged("acde_sEstadoId");
                }
            }
        }
        private short _acde_sEstadoId;
    
        [DataMember]
        public short acde_sUsuarioCreacion
        {
            get { return _acde_sUsuarioCreacion; }
            set
            {
                if (_acde_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("acde_sUsuarioCreacion", _acde_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _acde_sUsuarioCreacion = value;
                    OnPropertyChanged("acde_sUsuarioCreacion");
                }
            }
        }
        private short _acde_sUsuarioCreacion;
    
        [DataMember]
        public string acde_vIPCreacion
        {
            get { return _acde_vIPCreacion; }
            set
            {
                if (_acde_vIPCreacion != value)
                {
                    _acde_vIPCreacion = value;
                    OnPropertyChanged("acde_vIPCreacion");
                }
            }
        }
        private string _acde_vIPCreacion;
    
        [DataMember]
        public System.DateTime acde_dFechaCreacion
        {
            get { return _acde_dFechaCreacion; }
            set
            {
                if (_acde_dFechaCreacion != value)
                {
                    _acde_dFechaCreacion = value;
                    OnPropertyChanged("acde_dFechaCreacion");
                }
            }
        }
        private System.DateTime _acde_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> acde_sUsuarioModificacion
        {
            get { return _acde_sUsuarioModificacion; }
            set
            {
                if (_acde_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("acde_sUsuarioModificacion", _acde_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _acde_sUsuarioModificacion = value;
                    OnPropertyChanged("acde_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _acde_sUsuarioModificacion;
    
        [DataMember]
        public string acde_vIPModificacion
        {
            get { return _acde_vIPModificacion; }
            set
            {
                if (_acde_vIPModificacion != value)
                {
                    _acde_vIPModificacion = value;
                    OnPropertyChanged("acde_vIPModificacion");
                }
            }
        }
        private string _acde_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> acde_dFechaModificacion
        {
            get { return _acde_dFechaModificacion; }
            set
            {
                if (_acde_dFechaModificacion != value)
                {
                    _acde_dFechaModificacion = value;
                    OnPropertyChanged("acde_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _acde_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTODETALLE> AL_MOVIMIENTODETALLE
        {
            get
            {
                if (_aL_MOVIMIENTODETALLE == null)
                {
                    _aL_MOVIMIENTODETALLE = new TrackableCollection<AL_MOVIMIENTODETALLE>();
                    _aL_MOVIMIENTODETALLE.CollectionChanged += FixupAL_MOVIMIENTODETALLE;
                }
                return _aL_MOVIMIENTODETALLE;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTODETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTODETALLE != null)
                    {
                        _aL_MOVIMIENTODETALLE.CollectionChanged -= FixupAL_MOVIMIENTODETALLE;
                    }
                    _aL_MOVIMIENTODETALLE = value;
                    if (_aL_MOVIMIENTODETALLE != null)
                    {
                        _aL_MOVIMIENTODETALLE.CollectionChanged += FixupAL_MOVIMIENTODETALLE;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTODETALLE");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTODETALLE> _aL_MOVIMIENTODETALLE;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIO> RE_ACTOMIGRATORIO
        {
            get
            {
                if (_rE_ACTOMIGRATORIO == null)
                {
                    _rE_ACTOMIGRATORIO = new TrackableCollection<RE_ACTOMIGRATORIO>();
                    _rE_ACTOMIGRATORIO.CollectionChanged += FixupRE_ACTOMIGRATORIO;
                }
                return _rE_ACTOMIGRATORIO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIO != null)
                    {
                        _rE_ACTOMIGRATORIO.CollectionChanged -= FixupRE_ACTOMIGRATORIO;
                    }
                    _rE_ACTOMIGRATORIO = value;
                    if (_rE_ACTOMIGRATORIO != null)
                    {
                        _rE_ACTOMIGRATORIO.CollectionChanged += FixupRE_ACTOMIGRATORIO;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIO");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIO> _rE_ACTOMIGRATORIO;
    
        [DataMember]
        public RE_ACTUACION RE_ACTUACION
        {
            get { return _rE_ACTUACION; }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACION, value))
                {
                    var previousValue = _rE_ACTUACION;
                    _rE_ACTUACION = value;
                    FixupRE_ACTUACION(previousValue);
                    OnNavigationPropertyChanged("RE_ACTUACION");
                }
            }
        }
        private RE_ACTUACION _rE_ACTUACION;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONADJUNTO> RE_ACTUACIONADJUNTO
        {
            get
            {
                if (_rE_ACTUACIONADJUNTO == null)
                {
                    _rE_ACTUACIONADJUNTO = new TrackableCollection<RE_ACTUACIONADJUNTO>();
                    _rE_ACTUACIONADJUNTO.CollectionChanged += FixupRE_ACTUACIONADJUNTO;
                }
                return _rE_ACTUACIONADJUNTO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONADJUNTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONADJUNTO != null)
                    {
                        _rE_ACTUACIONADJUNTO.CollectionChanged -= FixupRE_ACTUACIONADJUNTO;
                    }
                    _rE_ACTUACIONADJUNTO = value;
                    if (_rE_ACTUACIONADJUNTO != null)
                    {
                        _rE_ACTUACIONADJUNTO.CollectionChanged += FixupRE_ACTUACIONADJUNTO;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONADJUNTO");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONADJUNTO> _rE_ACTUACIONADJUNTO;
    
        [DataMember]
        public MA_ESTADO MA_ESTADO
        {
            get { return _mA_ESTADO; }
            set
            {
                if (!ReferenceEquals(_mA_ESTADO, value))
                {
                    var previousValue = _mA_ESTADO;
                    _mA_ESTADO = value;
                    FixupMA_ESTADO(previousValue);
                    OnNavigationPropertyChanged("MA_ESTADO");
                }
            }
        }
        private MA_ESTADO _mA_ESTADO;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONDETALLE> RE_ACTUACIONDETALLE1
        {
            get
            {
                if (_rE_ACTUACIONDETALLE1 == null)
                {
                    _rE_ACTUACIONDETALLE1 = new TrackableCollection<RE_ACTUACIONDETALLE>();
                    _rE_ACTUACIONDETALLE1.CollectionChanged += FixupRE_ACTUACIONDETALLE1;
                }
                return _rE_ACTUACIONDETALLE1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONDETALLE1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONDETALLE1 != null)
                    {
                        _rE_ACTUACIONDETALLE1.CollectionChanged -= FixupRE_ACTUACIONDETALLE1;
                    }
                    _rE_ACTUACIONDETALLE1 = value;
                    if (_rE_ACTUACIONDETALLE1 != null)
                    {
                        _rE_ACTUACIONDETALLE1.CollectionChanged += FixupRE_ACTUACIONDETALLE1;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONDETALLE1");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONDETALLE> _rE_ACTUACIONDETALLE1;
    
        [DataMember]
        public RE_ACTUACIONDETALLE RE_ACTUACIONDETALLE2
        {
            get { return _rE_ACTUACIONDETALLE2; }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONDETALLE2, value))
                {
                    var previousValue = _rE_ACTUACIONDETALLE2;
                    _rE_ACTUACIONDETALLE2 = value;
                    FixupRE_ACTUACIONDETALLE2(previousValue);
                    OnNavigationPropertyChanged("RE_ACTUACIONDETALLE2");
                }
            }
        }
        private RE_ACTUACIONDETALLE _rE_ACTUACIONDETALLE2;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_TARIFARIO SI_TARIFARIO
        {
            get { return _sI_TARIFARIO; }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIO, value))
                {
                    var previousValue = _sI_TARIFARIO;
                    _sI_TARIFARIO = value;
                    FixupSI_TARIFARIO(previousValue);
                    OnNavigationPropertyChanged("SI_TARIFARIO");
                }
            }
        }
        private SI_TARIFARIO _sI_TARIFARIO;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONINSUMODETALLE> RE_ACTUACIONINSUMODETALLE
        {
            get
            {
                if (_rE_ACTUACIONINSUMODETALLE == null)
                {
                    _rE_ACTUACIONINSUMODETALLE = new TrackableCollection<RE_ACTUACIONINSUMODETALLE>();
                    _rE_ACTUACIONINSUMODETALLE.CollectionChanged += FixupRE_ACTUACIONINSUMODETALLE;
                }
                return _rE_ACTUACIONINSUMODETALLE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONINSUMODETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONINSUMODETALLE != null)
                    {
                        _rE_ACTUACIONINSUMODETALLE.CollectionChanged -= FixupRE_ACTUACIONINSUMODETALLE;
                    }
                    _rE_ACTUACIONINSUMODETALLE = value;
                    if (_rE_ACTUACIONINSUMODETALLE != null)
                    {
                        _rE_ACTUACIONINSUMODETALLE.CollectionChanged += FixupRE_ACTUACIONINSUMODETALLE;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONINSUMODETALLE");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONINSUMODETALLE> _rE_ACTUACIONINSUMODETALLE;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONPARTICIPANTE> RE_ACTUACIONPARTICIPANTE
        {
            get
            {
                if (_rE_ACTUACIONPARTICIPANTE == null)
                {
                    _rE_ACTUACIONPARTICIPANTE = new TrackableCollection<RE_ACTUACIONPARTICIPANTE>();
                    _rE_ACTUACIONPARTICIPANTE.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE;
                }
                return _rE_ACTUACIONPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONPARTICIPANTE != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE.CollectionChanged -= FixupRE_ACTUACIONPARTICIPANTE;
                    }
                    _rE_ACTUACIONPARTICIPANTE = value;
                    if (_rE_ACTUACIONPARTICIPANTE != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONPARTICIPANTE> _rE_ACTUACIONPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONANOTACION> RE_ACTUACIONANOTACION
        {
            get
            {
                if (_rE_ACTUACIONANOTACION == null)
                {
                    _rE_ACTUACIONANOTACION = new TrackableCollection<RE_ACTUACIONANOTACION>();
                    _rE_ACTUACIONANOTACION.CollectionChanged += FixupRE_ACTUACIONANOTACION;
                }
                return _rE_ACTUACIONANOTACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONANOTACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONANOTACION != null)
                    {
                        _rE_ACTUACIONANOTACION.CollectionChanged -= FixupRE_ACTUACIONANOTACION;
                    }
                    _rE_ACTUACIONANOTACION = value;
                    if (_rE_ACTUACIONANOTACION != null)
                    {
                        _rE_ACTUACIONANOTACION.CollectionChanged += FixupRE_ACTUACIONANOTACION;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONANOTACION");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONANOTACION> _rE_ACTUACIONANOTACION;
    
        [DataMember]
        public TrackableCollection<RE_PAGO> RE_PAGO
        {
            get
            {
                if (_rE_PAGO == null)
                {
                    _rE_PAGO = new TrackableCollection<RE_PAGO>();
                    _rE_PAGO.CollectionChanged += FixupRE_PAGO;
                }
                return _rE_PAGO;
            }
            set
            {
                if (!ReferenceEquals(_rE_PAGO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PAGO != null)
                    {
                        _rE_PAGO.CollectionChanged -= FixupRE_PAGO;
                    }
                    _rE_PAGO = value;
                    if (_rE_PAGO != null)
                    {
                        _rE_PAGO.CollectionChanged += FixupRE_PAGO;
                    }
                    OnNavigationPropertyChanged("RE_PAGO");
                }
            }
        }
        private TrackableCollection<RE_PAGO> _rE_PAGO;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROMILITAR> RE_REGISTROMILITAR
        {
            get
            {
                if (_rE_REGISTROMILITAR == null)
                {
                    _rE_REGISTROMILITAR = new TrackableCollection<RE_REGISTROMILITAR>();
                    _rE_REGISTROMILITAR.CollectionChanged += FixupRE_REGISTROMILITAR;
                }
                return _rE_REGISTROMILITAR;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROMILITAR, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROMILITAR != null)
                    {
                        _rE_REGISTROMILITAR.CollectionChanged -= FixupRE_REGISTROMILITAR;
                    }
                    _rE_REGISTROMILITAR = value;
                    if (_rE_REGISTROMILITAR != null)
                    {
                        _rE_REGISTROMILITAR.CollectionChanged += FixupRE_REGISTROMILITAR;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROMILITAR");
                }
            }
        }
        private TrackableCollection<RE_REGISTROMILITAR> _rE_REGISTROMILITAR;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROCIVIL> RE_REGISTROCIVIL
        {
            get
            {
                if (_rE_REGISTROCIVIL == null)
                {
                    _rE_REGISTROCIVIL = new TrackableCollection<RE_REGISTROCIVIL>();
                    _rE_REGISTROCIVIL.CollectionChanged += FixupRE_REGISTROCIVIL;
                }
                return _rE_REGISTROCIVIL;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROCIVIL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROCIVIL != null)
                    {
                        _rE_REGISTROCIVIL.CollectionChanged -= FixupRE_REGISTROCIVIL;
                    }
                    _rE_REGISTROCIVIL = value;
                    if (_rE_REGISTROCIVIL != null)
                    {
                        _rE_REGISTROCIVIL.CollectionChanged += FixupRE_REGISTROCIVIL;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROCIVIL");
                }
            }
        }
        private TrackableCollection<RE_REGISTROCIVIL> _rE_REGISTROCIVIL;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> RE_ACTOJUDICIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTOJUDICIALPARTICIPANTE == null)
                {
                    _rE_ACTOJUDICIALPARTICIPANTE = new TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE>();
                    _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                }
                return _rE_ACTOJUDICIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    _rE_ACTOJUDICIALPARTICIPANTE = value;
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> _rE_ACTOJUDICIALPARTICIPANTE;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AL_MOVIMIENTODETALLE.Clear();
            RE_ACTOMIGRATORIO.Clear();
            RE_ACTUACION = null;
            RE_ACTUACIONADJUNTO.Clear();
            MA_ESTADO = null;
            RE_ACTUACIONDETALLE1.Clear();
            RE_ACTUACIONDETALLE2 = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_TARIFARIO = null;
            RE_ACTUACIONINSUMODETALLE.Clear();
            RE_ACTUACIONPARTICIPANTE.Clear();
            RE_ACTUACIONANOTACION.Clear();
            RE_PAGO.Clear();
            RE_REGISTROMILITAR.Clear();
            RE_REGISTROCIVIL.Clear();
            RE_ACTOJUDICIALPARTICIPANTE.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupRE_ACTUACION(RE_ACTUACION previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONDETALLE.Contains(this))
            {
                previousValue.RE_ACTUACIONDETALLE.Remove(this);
            }
    
            if (RE_ACTUACION != null)
            {
                if (!RE_ACTUACION.RE_ACTUACIONDETALLE.Contains(this))
                {
                    RE_ACTUACION.RE_ACTUACIONDETALLE.Add(this);
                }
    
                acde_iActuacionId = RE_ACTUACION.actu_iActuacionId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_ACTUACION")
                    && (ChangeTracker.OriginalValues["RE_ACTUACION"] == RE_ACTUACION))
                {
                    ChangeTracker.OriginalValues.Remove("RE_ACTUACION");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_ACTUACION", previousValue);
                }
                if (RE_ACTUACION != null && !RE_ACTUACION.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_ACTUACION.StartTracking();
                }
            }
        }
    
        private void FixupMA_ESTADO(MA_ESTADO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONDETALLE.Contains(this))
            {
                previousValue.RE_ACTUACIONDETALLE.Remove(this);
            }
    
            if (MA_ESTADO != null)
            {
                if (!MA_ESTADO.RE_ACTUACIONDETALLE.Contains(this))
                {
                    MA_ESTADO.RE_ACTUACIONDETALLE.Add(this);
                }
    
                acde_sEstadoId = MA_ESTADO.esta_sEstadoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_ESTADO")
                    && (ChangeTracker.OriginalValues["MA_ESTADO"] == MA_ESTADO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_ESTADO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_ESTADO", previousValue);
                }
                if (MA_ESTADO != null && !MA_ESTADO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_ESTADO.StartTracking();
                }
            }
        }
    
        private void FixupRE_ACTUACIONDETALLE2(RE_ACTUACIONDETALLE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONDETALLE1.Contains(this))
            {
                previousValue.RE_ACTUACIONDETALLE1.Remove(this);
            }
    
            if (RE_ACTUACIONDETALLE2 != null)
            {
                if (!RE_ACTUACIONDETALLE2.RE_ACTUACIONDETALLE1.Contains(this))
                {
                    RE_ACTUACIONDETALLE2.RE_ACTUACIONDETALLE1.Add(this);
                }
    
                acde_iReferenciaId = RE_ACTUACIONDETALLE2.acde_iActuacionDetalleId;
            }
            else if (!skipKeys)
            {
                acde_iReferenciaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_ACTUACIONDETALLE2")
                    && (ChangeTracker.OriginalValues["RE_ACTUACIONDETALLE2"] == RE_ACTUACIONDETALLE2))
                {
                    ChangeTracker.OriginalValues.Remove("RE_ACTUACIONDETALLE2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_ACTUACIONDETALLE2", previousValue);
                }
                if (RE_ACTUACIONDETALLE2 != null && !RE_ACTUACIONDETALLE2.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_ACTUACIONDETALLE2.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONDETALLE.Contains(this))
            {
                previousValue.RE_ACTUACIONDETALLE.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_ACTUACIONDETALLE.Contains(this))
                {
                    SE_USUARIO.RE_ACTUACIONDETALLE.Add(this);
                }
    
                acde_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONDETALLE1.Contains(this))
            {
                previousValue.RE_ACTUACIONDETALLE1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_ACTUACIONDETALLE1.Contains(this))
                {
                    SE_USUARIO1.RE_ACTUACIONDETALLE1.Add(this);
                }
    
                acde_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                acde_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_TARIFARIO(SI_TARIFARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONDETALLE.Contains(this))
            {
                previousValue.RE_ACTUACIONDETALLE.Remove(this);
            }
    
            if (SI_TARIFARIO != null)
            {
                if (!SI_TARIFARIO.RE_ACTUACIONDETALLE.Contains(this))
                {
                    SI_TARIFARIO.RE_ACTUACIONDETALLE.Add(this);
                }
    
                acde_sTarifarioId = SI_TARIFARIO.tari_sTarifarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_TARIFARIO")
                    && (ChangeTracker.OriginalValues["SI_TARIFARIO"] == SI_TARIFARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_TARIFARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_TARIFARIO", previousValue);
                }
                if (SI_TARIFARIO != null && !SI_TARIFARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_TARIFARIO.StartTracking();
                }
            }
        }
    
        private void FixupAL_MOVIMIENTODETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTODETALLE item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTODETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTODETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTODETALLE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONADJUNTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONADJUNTO item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONADJUNTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONADJUNTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONADJUNTO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONDETALLE1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONDETALLE item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONDETALLE1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONDETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE2, this))
                    {
                        item.RE_ACTUACIONDETALLE2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONDETALLE1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONINSUMODETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONINSUMODETALLE item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONINSUMODETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONINSUMODETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONINSUMODETALLE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONANOTACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONANOTACION item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONANOTACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONANOTACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONANOTACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_PAGO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PAGO item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PAGO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PAGO item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PAGO", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROMILITAR(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROMILITAR item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROMILITAR", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROMILITAR item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROMILITAR", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROCIVIL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROCIVIL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROCIVIL", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.NewItems)
                {
                    item.RE_ACTUACIONDETALLE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACIONDETALLE, this))
                    {
                        item.RE_ACTUACIONDETALLE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
        }

        #endregion
    }
}
