//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CO_REMESADETALLE))]
    [KnownType(typeof(RE_ACTUACIONDETALLE))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(MA_BASE_PERCEPCION))]
    [KnownType(typeof(MA_ESTADO))]
    [KnownType(typeof(MA_SECCION))]
    [KnownType(typeof(SI_TARIFARIO))]
    [KnownType(typeof(SI_TARIFARIOREQUISITO))]
    public partial class SI_TARIFARIO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short tari_sTarifarioId
        {
            get { return _tari_sTarifarioId; }
            set
            {
                if (_tari_sTarifarioId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'tari_sTarifarioId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _tari_sTarifarioId = value;
                    OnPropertyChanged("tari_sTarifarioId");
                }
            }
        }
        private short _tari_sTarifarioId;
    
        [DataMember]
        public short tari_sSeccionId
        {
            get { return _tari_sSeccionId; }
            set
            {
                if (_tari_sSeccionId != value)
                {
                    ChangeTracker.RecordOriginalValue("tari_sSeccionId", _tari_sSeccionId);
                    if (!IsDeserializing)
                    {
                        if (MA_SECCION != null && MA_SECCION.secc_sSeccionId != value)
                        {
                            MA_SECCION = null;
                        }
                    }
                    _tari_sSeccionId = value;
                    OnPropertyChanged("tari_sSeccionId");
                }
            }
        }
        private short _tari_sSeccionId;
    
        [DataMember]
        public short tari_sNumero
        {
            get { return _tari_sNumero; }
            set
            {
                if (_tari_sNumero != value)
                {
                    _tari_sNumero = value;
                    OnPropertyChanged("tari_sNumero");
                }
            }
        }
        private short _tari_sNumero;
    
        [DataMember]
        public string tari_vLetra
        {
            get { return _tari_vLetra; }
            set
            {
                if (_tari_vLetra != value)
                {
                    _tari_vLetra = value;
                    OnPropertyChanged("tari_vLetra");
                }
            }
        }
        private string _tari_vLetra;
    
        [DataMember]
        public string tari_vDescripcionCorta
        {
            get { return _tari_vDescripcionCorta; }
            set
            {
                if (_tari_vDescripcionCorta != value)
                {
                    _tari_vDescripcionCorta = value;
                    OnPropertyChanged("tari_vDescripcionCorta");
                }
            }
        }
        private string _tari_vDescripcionCorta;
    
        [DataMember]
        public string tari_vDescripcion
        {
            get { return _tari_vDescripcion; }
            set
            {
                if (_tari_vDescripcion != value)
                {
                    _tari_vDescripcion = value;
                    OnPropertyChanged("tari_vDescripcion");
                }
            }
        }
        private string _tari_vDescripcion;
    
        [DataMember]
        public Nullable<short> tari_sBasePercepcionId
        {
            get { return _tari_sBasePercepcionId; }
            set
            {
                if (_tari_sBasePercepcionId != value)
                {
                    ChangeTracker.RecordOriginalValue("tari_sBasePercepcionId", _tari_sBasePercepcionId);
                    if (!IsDeserializing)
                    {
                        if (MA_BASE_PERCEPCION != null && MA_BASE_PERCEPCION.bape_sBasePercepcionId != value)
                        {
                            MA_BASE_PERCEPCION = null;
                        }
                    }
                    _tari_sBasePercepcionId = value;
                    OnPropertyChanged("tari_sBasePercepcionId");
                }
            }
        }
        private Nullable<short> _tari_sBasePercepcionId;
    
        [DataMember]
        public Nullable<short> tari_sCalculoTipoId
        {
            get { return _tari_sCalculoTipoId; }
            set
            {
                if (_tari_sCalculoTipoId != value)
                {
                    ChangeTracker.RecordOriginalValue("tari_sCalculoTipoId", _tari_sCalculoTipoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _tari_sCalculoTipoId = value;
                    OnPropertyChanged("tari_sCalculoTipoId");
                }
            }
        }
        private Nullable<short> _tari_sCalculoTipoId;
    
        [DataMember]
        public string tari_vCalculoFormula
        {
            get { return _tari_vCalculoFormula; }
            set
            {
                if (_tari_vCalculoFormula != value)
                {
                    _tari_vCalculoFormula = value;
                    OnPropertyChanged("tari_vCalculoFormula");
                }
            }
        }
        private string _tari_vCalculoFormula;
    
        [DataMember]
        public Nullable<double> tari_FCosto
        {
            get { return _tari_FCosto; }
            set
            {
                if (_tari_FCosto != value)
                {
                    _tari_FCosto = value;
                    OnPropertyChanged("tari_FCosto");
                }
            }
        }
        private Nullable<double> _tari_FCosto;
    
        [DataMember]
        public Nullable<short> tari_sTopeUnidadId
        {
            get { return _tari_sTopeUnidadId; }
            set
            {
                if (_tari_sTopeUnidadId != value)
                {
                    ChangeTracker.RecordOriginalValue("tari_sTopeUnidadId", _tari_sTopeUnidadId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _tari_sTopeUnidadId = value;
                    OnPropertyChanged("tari_sTopeUnidadId");
                }
            }
        }
        private Nullable<short> _tari_sTopeUnidadId;
    
        [DataMember]
        public Nullable<int> tari_ITopeCantidad
        {
            get { return _tari_ITopeCantidad; }
            set
            {
                if (_tari_ITopeCantidad != value)
                {
                    _tari_ITopeCantidad = value;
                    OnPropertyChanged("tari_ITopeCantidad");
                }
            }
        }
        private Nullable<int> _tari_ITopeCantidad;
    
        [DataMember]
        public Nullable<double> tari_FMontoExceso
        {
            get { return _tari_FMontoExceso; }
            set
            {
                if (_tari_FMontoExceso != value)
                {
                    _tari_FMontoExceso = value;
                    OnPropertyChanged("tari_FMontoExceso");
                }
            }
        }
        private Nullable<double> _tari_FMontoExceso;
    
        [DataMember]
        public Nullable<bool> tari_bTarifarioDependienteFlag
        {
            get { return _tari_bTarifarioDependienteFlag; }
            set
            {
                if (_tari_bTarifarioDependienteFlag != value)
                {
                    _tari_bTarifarioDependienteFlag = value;
                    OnPropertyChanged("tari_bTarifarioDependienteFlag");
                }
            }
        }
        private Nullable<bool> _tari_bTarifarioDependienteFlag;
    
        [DataMember]
        public Nullable<System.DateTime> tari_dVigenciaInicio
        {
            get { return _tari_dVigenciaInicio; }
            set
            {
                if (_tari_dVigenciaInicio != value)
                {
                    _tari_dVigenciaInicio = value;
                    OnPropertyChanged("tari_dVigenciaInicio");
                }
            }
        }
        private Nullable<System.DateTime> _tari_dVigenciaInicio;
    
        [DataMember]
        public Nullable<System.DateTime> tari_dVigenciaFin
        {
            get { return _tari_dVigenciaFin; }
            set
            {
                if (_tari_dVigenciaFin != value)
                {
                    _tari_dVigenciaFin = value;
                    OnPropertyChanged("tari_dVigenciaFin");
                }
            }
        }
        private Nullable<System.DateTime> _tari_dVigenciaFin;
    
        [DataMember]
        public Nullable<bool> tari_bHabilitaCantidad
        {
            get { return _tari_bHabilitaCantidad; }
            set
            {
                if (_tari_bHabilitaCantidad != value)
                {
                    _tari_bHabilitaCantidad = value;
                    OnPropertyChanged("tari_bHabilitaCantidad");
                }
            }
        }
        private Nullable<bool> _tari_bHabilitaCantidad;
    
        [DataMember]
        public short tari_sEstadoId
        {
            get { return _tari_sEstadoId; }
            set
            {
                if (_tari_sEstadoId != value)
                {
                    ChangeTracker.RecordOriginalValue("tari_sEstadoId", _tari_sEstadoId);
                    if (!IsDeserializing)
                    {
                        if (MA_ESTADO != null && MA_ESTADO.esta_sEstadoId != value)
                        {
                            MA_ESTADO = null;
                        }
                    }
                    _tari_sEstadoId = value;
                    OnPropertyChanged("tari_sEstadoId");
                }
            }
        }
        private short _tari_sEstadoId;
    
        [DataMember]
        public short tari_sUsuarioCreacion
        {
            get { return _tari_sUsuarioCreacion; }
            set
            {
                if (_tari_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("tari_sUsuarioCreacion", _tari_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _tari_sUsuarioCreacion = value;
                    OnPropertyChanged("tari_sUsuarioCreacion");
                }
            }
        }
        private short _tari_sUsuarioCreacion;
    
        [DataMember]
        public string tari_vIPCreacion
        {
            get { return _tari_vIPCreacion; }
            set
            {
                if (_tari_vIPCreacion != value)
                {
                    _tari_vIPCreacion = value;
                    OnPropertyChanged("tari_vIPCreacion");
                }
            }
        }
        private string _tari_vIPCreacion;
    
        [DataMember]
        public System.DateTime tari_dFechaCreacion
        {
            get { return _tari_dFechaCreacion; }
            set
            {
                if (_tari_dFechaCreacion != value)
                {
                    _tari_dFechaCreacion = value;
                    OnPropertyChanged("tari_dFechaCreacion");
                }
            }
        }
        private System.DateTime _tari_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> tari_sUsuarioModificacion
        {
            get { return _tari_sUsuarioModificacion; }
            set
            {
                if (_tari_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("tari_sUsuarioModificacion", _tari_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SI_TARIFARIO2 != null && SI_TARIFARIO2.tari_sTarifarioId != value)
                        {
                            SI_TARIFARIO2 = null;
                        }
                    }
                    _tari_sUsuarioModificacion = value;
                    OnPropertyChanged("tari_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _tari_sUsuarioModificacion;
    
        [DataMember]
        public string tari_vIPModificacion
        {
            get { return _tari_vIPModificacion; }
            set
            {
                if (_tari_vIPModificacion != value)
                {
                    _tari_vIPModificacion = value;
                    OnPropertyChanged("tari_vIPModificacion");
                }
            }
        }
        private string _tari_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> tari_dFechaModificacion
        {
            get { return _tari_dFechaModificacion; }
            set
            {
                if (_tari_dFechaModificacion != value)
                {
                    _tari_dFechaModificacion = value;
                    OnPropertyChanged("tari_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _tari_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CO_REMESADETALLE> CO_REMESADETALLE
        {
            get
            {
                if (_cO_REMESADETALLE == null)
                {
                    _cO_REMESADETALLE = new TrackableCollection<CO_REMESADETALLE>();
                    _cO_REMESADETALLE.CollectionChanged += FixupCO_REMESADETALLE;
                }
                return _cO_REMESADETALLE;
            }
            set
            {
                if (!ReferenceEquals(_cO_REMESADETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_REMESADETALLE != null)
                    {
                        _cO_REMESADETALLE.CollectionChanged -= FixupCO_REMESADETALLE;
                    }
                    _cO_REMESADETALLE = value;
                    if (_cO_REMESADETALLE != null)
                    {
                        _cO_REMESADETALLE.CollectionChanged += FixupCO_REMESADETALLE;
                    }
                    OnNavigationPropertyChanged("CO_REMESADETALLE");
                }
            }
        }
        private TrackableCollection<CO_REMESADETALLE> _cO_REMESADETALLE;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONDETALLE> RE_ACTUACIONDETALLE
        {
            get
            {
                if (_rE_ACTUACIONDETALLE == null)
                {
                    _rE_ACTUACIONDETALLE = new TrackableCollection<RE_ACTUACIONDETALLE>();
                    _rE_ACTUACIONDETALLE.CollectionChanged += FixupRE_ACTUACIONDETALLE;
                }
                return _rE_ACTUACIONDETALLE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONDETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONDETALLE != null)
                    {
                        _rE_ACTUACIONDETALLE.CollectionChanged -= FixupRE_ACTUACIONDETALLE;
                    }
                    _rE_ACTUACIONDETALLE = value;
                    if (_rE_ACTUACIONDETALLE != null)
                    {
                        _rE_ACTUACIONDETALLE.CollectionChanged += FixupRE_ACTUACIONDETALLE;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONDETALLE");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONDETALLE> _rE_ACTUACIONDETALLE;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public MA_BASE_PERCEPCION MA_BASE_PERCEPCION
        {
            get { return _mA_BASE_PERCEPCION; }
            set
            {
                if (!ReferenceEquals(_mA_BASE_PERCEPCION, value))
                {
                    var previousValue = _mA_BASE_PERCEPCION;
                    _mA_BASE_PERCEPCION = value;
                    FixupMA_BASE_PERCEPCION(previousValue);
                    OnNavigationPropertyChanged("MA_BASE_PERCEPCION");
                }
            }
        }
        private MA_BASE_PERCEPCION _mA_BASE_PERCEPCION;
    
        [DataMember]
        public MA_ESTADO MA_ESTADO
        {
            get { return _mA_ESTADO; }
            set
            {
                if (!ReferenceEquals(_mA_ESTADO, value))
                {
                    var previousValue = _mA_ESTADO;
                    _mA_ESTADO = value;
                    FixupMA_ESTADO(previousValue);
                    OnNavigationPropertyChanged("MA_ESTADO");
                }
            }
        }
        private MA_ESTADO _mA_ESTADO;
    
        [DataMember]
        public MA_SECCION MA_SECCION
        {
            get { return _mA_SECCION; }
            set
            {
                if (!ReferenceEquals(_mA_SECCION, value))
                {
                    var previousValue = _mA_SECCION;
                    _mA_SECCION = value;
                    FixupMA_SECCION(previousValue);
                    OnNavigationPropertyChanged("MA_SECCION");
                }
            }
        }
        private MA_SECCION _mA_SECCION;
    
        [DataMember]
        public TrackableCollection<SI_TARIFARIO> SI_TARIFARIO1
        {
            get
            {
                if (_sI_TARIFARIO1 == null)
                {
                    _sI_TARIFARIO1 = new TrackableCollection<SI_TARIFARIO>();
                    _sI_TARIFARIO1.CollectionChanged += FixupSI_TARIFARIO1;
                }
                return _sI_TARIFARIO1;
            }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TARIFARIO1 != null)
                    {
                        _sI_TARIFARIO1.CollectionChanged -= FixupSI_TARIFARIO1;
                    }
                    _sI_TARIFARIO1 = value;
                    if (_sI_TARIFARIO1 != null)
                    {
                        _sI_TARIFARIO1.CollectionChanged += FixupSI_TARIFARIO1;
                    }
                    OnNavigationPropertyChanged("SI_TARIFARIO1");
                }
            }
        }
        private TrackableCollection<SI_TARIFARIO> _sI_TARIFARIO1;
    
        [DataMember]
        public SI_TARIFARIO SI_TARIFARIO2
        {
            get { return _sI_TARIFARIO2; }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIO2, value))
                {
                    var previousValue = _sI_TARIFARIO2;
                    _sI_TARIFARIO2 = value;
                    FixupSI_TARIFARIO2(previousValue);
                    OnNavigationPropertyChanged("SI_TARIFARIO2");
                }
            }
        }
        private SI_TARIFARIO _sI_TARIFARIO2;
    
        [DataMember]
        public TrackableCollection<SI_TARIFARIOREQUISITO> SI_TARIFARIOREQUISITO
        {
            get
            {
                if (_sI_TARIFARIOREQUISITO == null)
                {
                    _sI_TARIFARIOREQUISITO = new TrackableCollection<SI_TARIFARIOREQUISITO>();
                    _sI_TARIFARIOREQUISITO.CollectionChanged += FixupSI_TARIFARIOREQUISITO;
                }
                return _sI_TARIFARIOREQUISITO;
            }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIOREQUISITO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TARIFARIOREQUISITO != null)
                    {
                        _sI_TARIFARIOREQUISITO.CollectionChanged -= FixupSI_TARIFARIOREQUISITO;
                    }
                    _sI_TARIFARIOREQUISITO = value;
                    if (_sI_TARIFARIOREQUISITO != null)
                    {
                        _sI_TARIFARIOREQUISITO.CollectionChanged += FixupSI_TARIFARIOREQUISITO;
                    }
                    OnNavigationPropertyChanged("SI_TARIFARIOREQUISITO");
                }
            }
        }
        private TrackableCollection<SI_TARIFARIOREQUISITO> _sI_TARIFARIOREQUISITO;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CO_REMESADETALLE.Clear();
            RE_ACTUACIONDETALLE.Clear();
            SE_USUARIO = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            MA_BASE_PERCEPCION = null;
            MA_ESTADO = null;
            MA_SECCION = null;
            SI_TARIFARIO1.Clear();
            SI_TARIFARIO2 = null;
            SI_TARIFARIOREQUISITO.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_TARIFARIO.Contains(this))
            {
                previousValue.SI_TARIFARIO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.SI_TARIFARIO.Contains(this))
                {
                    SE_USUARIO.SI_TARIFARIO.Add(this);
                }
    
                tari_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_TARIFARIO.Contains(this))
            {
                previousValue.SI_TARIFARIO.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.SI_TARIFARIO.Contains(this))
                {
                    SI_PARAMETRO.SI_TARIFARIO.Add(this);
                }
    
                tari_sCalculoTipoId = SI_PARAMETRO.para_sParametroId;
            }
            else if (!skipKeys)
            {
                tari_sCalculoTipoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_TARIFARIO1.Contains(this))
            {
                previousValue.SI_TARIFARIO1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.SI_TARIFARIO1.Contains(this))
                {
                    SI_PARAMETRO1.SI_TARIFARIO1.Add(this);
                }
    
                tari_sTopeUnidadId = SI_PARAMETRO1.para_sParametroId;
            }
            else if (!skipKeys)
            {
                tari_sTopeUnidadId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupMA_BASE_PERCEPCION(MA_BASE_PERCEPCION previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_TARIFARIO.Contains(this))
            {
                previousValue.SI_TARIFARIO.Remove(this);
            }
    
            if (MA_BASE_PERCEPCION != null)
            {
                if (!MA_BASE_PERCEPCION.SI_TARIFARIO.Contains(this))
                {
                    MA_BASE_PERCEPCION.SI_TARIFARIO.Add(this);
                }
    
                tari_sBasePercepcionId = MA_BASE_PERCEPCION.bape_sBasePercepcionId;
            }
            else if (!skipKeys)
            {
                tari_sBasePercepcionId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_BASE_PERCEPCION")
                    && (ChangeTracker.OriginalValues["MA_BASE_PERCEPCION"] == MA_BASE_PERCEPCION))
                {
                    ChangeTracker.OriginalValues.Remove("MA_BASE_PERCEPCION");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_BASE_PERCEPCION", previousValue);
                }
                if (MA_BASE_PERCEPCION != null && !MA_BASE_PERCEPCION.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_BASE_PERCEPCION.StartTracking();
                }
            }
        }
    
        private void FixupMA_ESTADO(MA_ESTADO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_TARIFARIO.Contains(this))
            {
                previousValue.SI_TARIFARIO.Remove(this);
            }
    
            if (MA_ESTADO != null)
            {
                if (!MA_ESTADO.SI_TARIFARIO.Contains(this))
                {
                    MA_ESTADO.SI_TARIFARIO.Add(this);
                }
    
                tari_sEstadoId = MA_ESTADO.esta_sEstadoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_ESTADO")
                    && (ChangeTracker.OriginalValues["MA_ESTADO"] == MA_ESTADO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_ESTADO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_ESTADO", previousValue);
                }
                if (MA_ESTADO != null && !MA_ESTADO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_ESTADO.StartTracking();
                }
            }
        }
    
        private void FixupMA_SECCION(MA_SECCION previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_TARIFARIO.Contains(this))
            {
                previousValue.SI_TARIFARIO.Remove(this);
            }
    
            if (MA_SECCION != null)
            {
                if (!MA_SECCION.SI_TARIFARIO.Contains(this))
                {
                    MA_SECCION.SI_TARIFARIO.Add(this);
                }
    
                tari_sSeccionId = MA_SECCION.secc_sSeccionId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_SECCION")
                    && (ChangeTracker.OriginalValues["MA_SECCION"] == MA_SECCION))
                {
                    ChangeTracker.OriginalValues.Remove("MA_SECCION");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_SECCION", previousValue);
                }
                if (MA_SECCION != null && !MA_SECCION.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_SECCION.StartTracking();
                }
            }
        }
    
        private void FixupSI_TARIFARIO2(SI_TARIFARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_TARIFARIO1.Contains(this))
            {
                previousValue.SI_TARIFARIO1.Remove(this);
            }
    
            if (SI_TARIFARIO2 != null)
            {
                if (!SI_TARIFARIO2.SI_TARIFARIO1.Contains(this))
                {
                    SI_TARIFARIO2.SI_TARIFARIO1.Add(this);
                }
    
                tari_sUsuarioModificacion = SI_TARIFARIO2.tari_sTarifarioId;
            }
            else if (!skipKeys)
            {
                tari_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_TARIFARIO2")
                    && (ChangeTracker.OriginalValues["SI_TARIFARIO2"] == SI_TARIFARIO2))
                {
                    ChangeTracker.OriginalValues.Remove("SI_TARIFARIO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_TARIFARIO2", previousValue);
                }
                if (SI_TARIFARIO2 != null && !SI_TARIFARIO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_TARIFARIO2.StartTracking();
                }
            }
        }
    
        private void FixupCO_REMESADETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_REMESADETALLE item in e.NewItems)
                {
                    item.SI_TARIFARIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_REMESADETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_REMESADETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_TARIFARIO, this))
                    {
                        item.SI_TARIFARIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_REMESADETALLE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONDETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONDETALLE item in e.NewItems)
                {
                    item.SI_TARIFARIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONDETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONDETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_TARIFARIO, this))
                    {
                        item.SI_TARIFARIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONDETALLE", item);
                    }
                }
            }
        }
    
        private void FixupSI_TARIFARIO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TARIFARIO item in e.NewItems)
                {
                    item.SI_TARIFARIO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TARIFARIO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TARIFARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_TARIFARIO2, this))
                    {
                        item.SI_TARIFARIO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TARIFARIO1", item);
                    }
                }
            }
        }
    
        private void FixupSI_TARIFARIOREQUISITO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TARIFARIOREQUISITO item in e.NewItems)
                {
                    item.SI_TARIFARIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TARIFARIOREQUISITO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TARIFARIOREQUISITO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_TARIFARIO, this))
                    {
                        item.SI_TARIFARIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TARIFARIOREQUISITO", item);
                    }
                }
            }
        }

        #endregion
    }
}
