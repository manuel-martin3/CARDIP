//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AL_INSUMO))]
    [KnownType(typeof(RE_ACTUACIONDETALLE))]
    [KnownType(typeof(SE_USUARIO))]
    public partial class RE_ACTUACIONINSUMODETALLE: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long aide_iActuacionInsumoDetalleId
        {
            get { return _aide_iActuacionInsumoDetalleId; }
            set
            {
                if (_aide_iActuacionInsumoDetalleId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'aide_iActuacionInsumoDetalleId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _aide_iActuacionInsumoDetalleId = value;
                    OnPropertyChanged("aide_iActuacionInsumoDetalleId");
                }
            }
        }
        private long _aide_iActuacionInsumoDetalleId;
    
        [DataMember]
        public long aide_iActuacionDetalleId
        {
            get { return _aide_iActuacionDetalleId; }
            set
            {
                if (_aide_iActuacionDetalleId != value)
                {
                    ChangeTracker.RecordOriginalValue("aide_iActuacionDetalleId", _aide_iActuacionDetalleId);
                    if (!IsDeserializing)
                    {
                        if (RE_ACTUACIONDETALLE != null && RE_ACTUACIONDETALLE.acde_iActuacionDetalleId != value)
                        {
                            RE_ACTUACIONDETALLE = null;
                        }
                    }
                    _aide_iActuacionDetalleId = value;
                    OnPropertyChanged("aide_iActuacionDetalleId");
                }
            }
        }
        private long _aide_iActuacionDetalleId;
    
        [DataMember]
        public long aide_iInsumoId
        {
            get { return _aide_iInsumoId; }
            set
            {
                if (_aide_iInsumoId != value)
                {
                    ChangeTracker.RecordOriginalValue("aide_iInsumoId", _aide_iInsumoId);
                    if (!IsDeserializing)
                    {
                        if (AL_INSUMO != null && AL_INSUMO.insu_iInsumoId != value)
                        {
                            AL_INSUMO = null;
                        }
                    }
                    _aide_iInsumoId = value;
                    OnPropertyChanged("aide_iInsumoId");
                }
            }
        }
        private long _aide_iInsumoId;
    
        [DataMember]
        public System.DateTime aide_dFechaVinculacion
        {
            get { return _aide_dFechaVinculacion; }
            set
            {
                if (_aide_dFechaVinculacion != value)
                {
                    _aide_dFechaVinculacion = value;
                    OnPropertyChanged("aide_dFechaVinculacion");
                }
            }
        }
        private System.DateTime _aide_dFechaVinculacion;
    
        [DataMember]
        public short aide_sUsuarioVinculacionId
        {
            get { return _aide_sUsuarioVinculacionId; }
            set
            {
                if (_aide_sUsuarioVinculacionId != value)
                {
                    ChangeTracker.RecordOriginalValue("aide_sUsuarioVinculacionId", _aide_sUsuarioVinculacionId);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _aide_sUsuarioVinculacionId = value;
                    OnPropertyChanged("aide_sUsuarioVinculacionId");
                }
            }
        }
        private short _aide_sUsuarioVinculacionId;
    
        [DataMember]
        public bool aide_bFlagImpresion
        {
            get { return _aide_bFlagImpresion; }
            set
            {
                if (_aide_bFlagImpresion != value)
                {
                    _aide_bFlagImpresion = value;
                    OnPropertyChanged("aide_bFlagImpresion");
                }
            }
        }
        private bool _aide_bFlagImpresion;
    
        [DataMember]
        public Nullable<System.DateTime> aide_dFechaImpresion
        {
            get { return _aide_dFechaImpresion; }
            set
            {
                if (_aide_dFechaImpresion != value)
                {
                    _aide_dFechaImpresion = value;
                    OnPropertyChanged("aide_dFechaImpresion");
                }
            }
        }
        private Nullable<System.DateTime> _aide_dFechaImpresion;
    
        [DataMember]
        public string aide_cEstado
        {
            get { return _aide_cEstado; }
            set
            {
                if (_aide_cEstado != value)
                {
                    _aide_cEstado = value;
                    OnPropertyChanged("aide_cEstado");
                }
            }
        }
        private string _aide_cEstado;
    
        [DataMember]
        public short aide_sUsuarioCreacion
        {
            get { return _aide_sUsuarioCreacion; }
            set
            {
                if (_aide_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("aide_sUsuarioCreacion", _aide_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _aide_sUsuarioCreacion = value;
                    OnPropertyChanged("aide_sUsuarioCreacion");
                }
            }
        }
        private short _aide_sUsuarioCreacion;
    
        [DataMember]
        public string aide_vIPCreacion
        {
            get { return _aide_vIPCreacion; }
            set
            {
                if (_aide_vIPCreacion != value)
                {
                    _aide_vIPCreacion = value;
                    OnPropertyChanged("aide_vIPCreacion");
                }
            }
        }
        private string _aide_vIPCreacion;
    
        [DataMember]
        public System.DateTime aide_dFechaCreacion
        {
            get { return _aide_dFechaCreacion; }
            set
            {
                if (_aide_dFechaCreacion != value)
                {
                    _aide_dFechaCreacion = value;
                    OnPropertyChanged("aide_dFechaCreacion");
                }
            }
        }
        private System.DateTime _aide_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> aide_sUsuarioModificacion
        {
            get { return _aide_sUsuarioModificacion; }
            set
            {
                if (_aide_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("aide_sUsuarioModificacion", _aide_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO2 != null && SE_USUARIO2.usua_sUsuarioId != value)
                        {
                            SE_USUARIO2 = null;
                        }
                    }
                    _aide_sUsuarioModificacion = value;
                    OnPropertyChanged("aide_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _aide_sUsuarioModificacion;
    
        [DataMember]
        public string aide_vIPModificacion
        {
            get { return _aide_vIPModificacion; }
            set
            {
                if (_aide_vIPModificacion != value)
                {
                    _aide_vIPModificacion = value;
                    OnPropertyChanged("aide_vIPModificacion");
                }
            }
        }
        private string _aide_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> aide_dFechaModificacion
        {
            get { return _aide_dFechaModificacion; }
            set
            {
                if (_aide_dFechaModificacion != value)
                {
                    _aide_dFechaModificacion = value;
                    OnPropertyChanged("aide_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _aide_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public AL_INSUMO AL_INSUMO
        {
            get { return _aL_INSUMO; }
            set
            {
                if (!ReferenceEquals(_aL_INSUMO, value))
                {
                    var previousValue = _aL_INSUMO;
                    _aL_INSUMO = value;
                    FixupAL_INSUMO(previousValue);
                    OnNavigationPropertyChanged("AL_INSUMO");
                }
            }
        }
        private AL_INSUMO _aL_INSUMO;
    
        [DataMember]
        public RE_ACTUACIONDETALLE RE_ACTUACIONDETALLE
        {
            get { return _rE_ACTUACIONDETALLE; }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONDETALLE, value))
                {
                    var previousValue = _rE_ACTUACIONDETALLE;
                    _rE_ACTUACIONDETALLE = value;
                    FixupRE_ACTUACIONDETALLE(previousValue);
                    OnNavigationPropertyChanged("RE_ACTUACIONDETALLE");
                }
            }
        }
        private RE_ACTUACIONDETALLE _rE_ACTUACIONDETALLE;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO2
        {
            get { return _sE_USUARIO2; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO2, value))
                {
                    var previousValue = _sE_USUARIO2;
                    _sE_USUARIO2 = value;
                    FixupSE_USUARIO2(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO2");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO2;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AL_INSUMO = null;
            RE_ACTUACIONDETALLE = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SE_USUARIO2 = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupAL_INSUMO(AL_INSUMO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONINSUMODETALLE.Contains(this))
            {
                previousValue.RE_ACTUACIONINSUMODETALLE.Remove(this);
            }
    
            if (AL_INSUMO != null)
            {
                if (!AL_INSUMO.RE_ACTUACIONINSUMODETALLE.Contains(this))
                {
                    AL_INSUMO.RE_ACTUACIONINSUMODETALLE.Add(this);
                }
    
                aide_iInsumoId = AL_INSUMO.insu_iInsumoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("AL_INSUMO")
                    && (ChangeTracker.OriginalValues["AL_INSUMO"] == AL_INSUMO))
                {
                    ChangeTracker.OriginalValues.Remove("AL_INSUMO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("AL_INSUMO", previousValue);
                }
                if (AL_INSUMO != null && !AL_INSUMO.ChangeTracker.ChangeTrackingEnabled)
                {
                    AL_INSUMO.StartTracking();
                }
            }
        }
    
        private void FixupRE_ACTUACIONDETALLE(RE_ACTUACIONDETALLE previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONINSUMODETALLE.Contains(this))
            {
                previousValue.RE_ACTUACIONINSUMODETALLE.Remove(this);
            }
    
            if (RE_ACTUACIONDETALLE != null)
            {
                if (!RE_ACTUACIONDETALLE.RE_ACTUACIONINSUMODETALLE.Contains(this))
                {
                    RE_ACTUACIONDETALLE.RE_ACTUACIONINSUMODETALLE.Add(this);
                }
    
                aide_iActuacionDetalleId = RE_ACTUACIONDETALLE.acde_iActuacionDetalleId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_ACTUACIONDETALLE")
                    && (ChangeTracker.OriginalValues["RE_ACTUACIONDETALLE"] == RE_ACTUACIONDETALLE))
                {
                    ChangeTracker.OriginalValues.Remove("RE_ACTUACIONDETALLE");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_ACTUACIONDETALLE", previousValue);
                }
                if (RE_ACTUACIONDETALLE != null && !RE_ACTUACIONDETALLE.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_ACTUACIONDETALLE.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONINSUMODETALLE.Contains(this))
            {
                previousValue.RE_ACTUACIONINSUMODETALLE.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_ACTUACIONINSUMODETALLE.Contains(this))
                {
                    SE_USUARIO.RE_ACTUACIONINSUMODETALLE.Add(this);
                }
    
                aide_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONINSUMODETALLE1.Contains(this))
            {
                previousValue.RE_ACTUACIONINSUMODETALLE1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_ACTUACIONINSUMODETALLE1.Contains(this))
                {
                    SE_USUARIO1.RE_ACTUACIONINSUMODETALLE1.Add(this);
                }
    
                aide_sUsuarioVinculacionId = SE_USUARIO1.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO2(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONINSUMODETALLE2.Contains(this))
            {
                previousValue.RE_ACTUACIONINSUMODETALLE2.Remove(this);
            }
    
            if (SE_USUARIO2 != null)
            {
                if (!SE_USUARIO2.RE_ACTUACIONINSUMODETALLE2.Contains(this))
                {
                    SE_USUARIO2.RE_ACTUACIONINSUMODETALLE2.Add(this);
                }
    
                aide_sUsuarioModificacion = SE_USUARIO2.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                aide_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO2")
                    && (ChangeTracker.OriginalValues["SE_USUARIO2"] == SE_USUARIO2))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO2", previousValue);
                }
                if (SE_USUARIO2 != null && !SE_USUARIO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO2.StartTracking();
                }
            }
        }

        #endregion
    }
}
