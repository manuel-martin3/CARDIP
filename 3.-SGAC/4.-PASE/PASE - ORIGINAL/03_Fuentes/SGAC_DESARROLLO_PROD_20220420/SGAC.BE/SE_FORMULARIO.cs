//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(SE_FORMULARIO))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(SE_ROLOPCION))]
    [KnownType(typeof(SI_AUDITORIA))]
    public partial class SE_FORMULARIO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short form_sFormularioId
        {
            get { return _form_sFormularioId; }
            set
            {
                if (_form_sFormularioId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'form_sFormularioId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _form_sFormularioId = value;
                    OnPropertyChanged("form_sFormularioId");
                }
            }
        }
        private short _form_sFormularioId;
    
        [DataMember]
        public short form_sAplicacionId
        {
            get { return _form_sAplicacionId; }
            set
            {
                if (_form_sAplicacionId != value)
                {
                    _form_sAplicacionId = value;
                    OnPropertyChanged("form_sAplicacionId");
                }
            }
        }
        private short _form_sAplicacionId;
    
        [DataMember]
        public Nullable<short> form_sComponenteId
        {
            get { return _form_sComponenteId; }
            set
            {
                if (_form_sComponenteId != value)
                {
                    ChangeTracker.RecordOriginalValue("form_sComponenteId", _form_sComponenteId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _form_sComponenteId = value;
                    OnPropertyChanged("form_sComponenteId");
                }
            }
        }
        private Nullable<short> _form_sComponenteId;
    
        [DataMember]
        public string form_vNombre
        {
            get { return _form_vNombre; }
            set
            {
                if (_form_vNombre != value)
                {
                    _form_vNombre = value;
                    OnPropertyChanged("form_vNombre");
                }
            }
        }
        private string _form_vNombre;
    
        [DataMember]
        public Nullable<short> form_sReferenciaId
        {
            get { return _form_sReferenciaId; }
            set
            {
                if (_form_sReferenciaId != value)
                {
                    ChangeTracker.RecordOriginalValue("form_sReferenciaId", _form_sReferenciaId);
                    if (!IsDeserializing)
                    {
                        if (SE_FORMULARIO2 != null && SE_FORMULARIO2.form_sFormularioId != value)
                        {
                            SE_FORMULARIO2 = null;
                        }
                    }
                    _form_sReferenciaId = value;
                    OnPropertyChanged("form_sReferenciaId");
                }
            }
        }
        private Nullable<short> _form_sReferenciaId;
    
        [DataMember]
        public string form_vRuta
        {
            get { return _form_vRuta; }
            set
            {
                if (_form_vRuta != value)
                {
                    _form_vRuta = value;
                    OnPropertyChanged("form_vRuta");
                }
            }
        }
        private string _form_vRuta;
    
        [DataMember]
        public string form_vImagen
        {
            get { return _form_vImagen; }
            set
            {
                if (_form_vImagen != value)
                {
                    _form_vImagen = value;
                    OnPropertyChanged("form_vImagen");
                }
            }
        }
        private string _form_vImagen;
    
        [DataMember]
        public short form_sOrden
        {
            get { return _form_sOrden; }
            set
            {
                if (_form_sOrden != value)
                {
                    _form_sOrden = value;
                    OnPropertyChanged("form_sOrden");
                }
            }
        }
        private short _form_sOrden;
    
        [DataMember]
        public bool form_bVisible
        {
            get { return _form_bVisible; }
            set
            {
                if (_form_bVisible != value)
                {
                    _form_bVisible = value;
                    OnPropertyChanged("form_bVisible");
                }
            }
        }
        private bool _form_bVisible;
    
        [DataMember]
        public string form_cEstado
        {
            get { return _form_cEstado; }
            set
            {
                if (_form_cEstado != value)
                {
                    _form_cEstado = value;
                    OnPropertyChanged("form_cEstado");
                }
            }
        }
        private string _form_cEstado;
    
        [DataMember]
        public short form_sUsuarioCreacion
        {
            get { return _form_sUsuarioCreacion; }
            set
            {
                if (_form_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("form_sUsuarioCreacion", _form_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _form_sUsuarioCreacion = value;
                    OnPropertyChanged("form_sUsuarioCreacion");
                }
            }
        }
        private short _form_sUsuarioCreacion;
    
        [DataMember]
        public string form_vIPCreacion
        {
            get { return _form_vIPCreacion; }
            set
            {
                if (_form_vIPCreacion != value)
                {
                    _form_vIPCreacion = value;
                    OnPropertyChanged("form_vIPCreacion");
                }
            }
        }
        private string _form_vIPCreacion;
    
        [DataMember]
        public System.DateTime form_dFechaCreacion
        {
            get { return _form_dFechaCreacion; }
            set
            {
                if (_form_dFechaCreacion != value)
                {
                    _form_dFechaCreacion = value;
                    OnPropertyChanged("form_dFechaCreacion");
                }
            }
        }
        private System.DateTime _form_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> form_sUsuarioModificacion
        {
            get { return _form_sUsuarioModificacion; }
            set
            {
                if (_form_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("form_sUsuarioModificacion", _form_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _form_sUsuarioModificacion = value;
                    OnPropertyChanged("form_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _form_sUsuarioModificacion;
    
        [DataMember]
        public string form_vIPModificacion
        {
            get { return _form_vIPModificacion; }
            set
            {
                if (_form_vIPModificacion != value)
                {
                    _form_vIPModificacion = value;
                    OnPropertyChanged("form_vIPModificacion");
                }
            }
        }
        private string _form_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> form_dFechaModificacion
        {
            get { return _form_dFechaModificacion; }
            set
            {
                if (_form_dFechaModificacion != value)
                {
                    _form_dFechaModificacion = value;
                    OnPropertyChanged("form_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _form_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<SE_FORMULARIO> SE_FORMULARIO1
        {
            get
            {
                if (_sE_FORMULARIO1 == null)
                {
                    _sE_FORMULARIO1 = new TrackableCollection<SE_FORMULARIO>();
                    _sE_FORMULARIO1.CollectionChanged += FixupSE_FORMULARIO1;
                }
                return _sE_FORMULARIO1;
            }
            set
            {
                if (!ReferenceEquals(_sE_FORMULARIO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_FORMULARIO1 != null)
                    {
                        _sE_FORMULARIO1.CollectionChanged -= FixupSE_FORMULARIO1;
                    }
                    _sE_FORMULARIO1 = value;
                    if (_sE_FORMULARIO1 != null)
                    {
                        _sE_FORMULARIO1.CollectionChanged += FixupSE_FORMULARIO1;
                    }
                    OnNavigationPropertyChanged("SE_FORMULARIO1");
                }
            }
        }
        private TrackableCollection<SE_FORMULARIO> _sE_FORMULARIO1;
    
        [DataMember]
        public SE_FORMULARIO SE_FORMULARIO2
        {
            get { return _sE_FORMULARIO2; }
            set
            {
                if (!ReferenceEquals(_sE_FORMULARIO2, value))
                {
                    var previousValue = _sE_FORMULARIO2;
                    _sE_FORMULARIO2 = value;
                    FixupSE_FORMULARIO2(previousValue);
                    OnNavigationPropertyChanged("SE_FORMULARIO2");
                }
            }
        }
        private SE_FORMULARIO _sE_FORMULARIO2;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public TrackableCollection<SE_ROLOPCION> SE_ROLOPCION
        {
            get
            {
                if (_sE_ROLOPCION == null)
                {
                    _sE_ROLOPCION = new TrackableCollection<SE_ROLOPCION>();
                    _sE_ROLOPCION.CollectionChanged += FixupSE_ROLOPCION;
                }
                return _sE_ROLOPCION;
            }
            set
            {
                if (!ReferenceEquals(_sE_ROLOPCION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_ROLOPCION != null)
                    {
                        _sE_ROLOPCION.CollectionChanged -= FixupSE_ROLOPCION;
                    }
                    _sE_ROLOPCION = value;
                    if (_sE_ROLOPCION != null)
                    {
                        _sE_ROLOPCION.CollectionChanged += FixupSE_ROLOPCION;
                    }
                    OnNavigationPropertyChanged("SE_ROLOPCION");
                }
            }
        }
        private TrackableCollection<SE_ROLOPCION> _sE_ROLOPCION;
    
        [DataMember]
        public TrackableCollection<SI_AUDITORIA> SI_AUDITORIA
        {
            get
            {
                if (_sI_AUDITORIA == null)
                {
                    _sI_AUDITORIA = new TrackableCollection<SI_AUDITORIA>();
                    _sI_AUDITORIA.CollectionChanged += FixupSI_AUDITORIA;
                }
                return _sI_AUDITORIA;
            }
            set
            {
                if (!ReferenceEquals(_sI_AUDITORIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_AUDITORIA != null)
                    {
                        _sI_AUDITORIA.CollectionChanged -= FixupSI_AUDITORIA;
                    }
                    _sI_AUDITORIA = value;
                    if (_sI_AUDITORIA != null)
                    {
                        _sI_AUDITORIA.CollectionChanged += FixupSI_AUDITORIA;
                    }
                    OnNavigationPropertyChanged("SI_AUDITORIA");
                }
            }
        }
        private TrackableCollection<SI_AUDITORIA> _sI_AUDITORIA;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            SE_FORMULARIO1.Clear();
            SE_FORMULARIO2 = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            SE_ROLOPCION.Clear();
            SI_AUDITORIA.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_FORMULARIO2(SE_FORMULARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_FORMULARIO1.Contains(this))
            {
                previousValue.SE_FORMULARIO1.Remove(this);
            }
    
            if (SE_FORMULARIO2 != null)
            {
                if (!SE_FORMULARIO2.SE_FORMULARIO1.Contains(this))
                {
                    SE_FORMULARIO2.SE_FORMULARIO1.Add(this);
                }
    
                form_sReferenciaId = SE_FORMULARIO2.form_sFormularioId;
            }
            else if (!skipKeys)
            {
                form_sReferenciaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_FORMULARIO2")
                    && (ChangeTracker.OriginalValues["SE_FORMULARIO2"] == SE_FORMULARIO2))
                {
                    ChangeTracker.OriginalValues.Remove("SE_FORMULARIO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_FORMULARIO2", previousValue);
                }
                if (SE_FORMULARIO2 != null && !SE_FORMULARIO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_FORMULARIO2.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_FORMULARIO.Contains(this))
            {
                previousValue.SE_FORMULARIO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.SE_FORMULARIO.Contains(this))
                {
                    SE_USUARIO.SE_FORMULARIO.Add(this);
                }
    
                form_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_FORMULARIO1.Contains(this))
            {
                previousValue.SE_FORMULARIO1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.SE_FORMULARIO1.Contains(this))
                {
                    SE_USUARIO1.SE_FORMULARIO1.Add(this);
                }
    
                form_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                form_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_FORMULARIO.Contains(this))
            {
                previousValue.SE_FORMULARIO.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.SE_FORMULARIO.Contains(this))
                {
                    SI_PARAMETRO.SE_FORMULARIO.Add(this);
                }
    
                form_sComponenteId = SI_PARAMETRO.para_sParametroId;
            }
            else if (!skipKeys)
            {
                form_sComponenteId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSE_FORMULARIO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_FORMULARIO item in e.NewItems)
                {
                    item.SE_FORMULARIO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_FORMULARIO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_FORMULARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SE_FORMULARIO2, this))
                    {
                        item.SE_FORMULARIO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_FORMULARIO1", item);
                    }
                }
            }
        }
    
        private void FixupSE_ROLOPCION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_ROLOPCION item in e.NewItems)
                {
                    item.SE_FORMULARIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_ROLOPCION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_ROLOPCION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SE_FORMULARIO, this))
                    {
                        item.SE_FORMULARIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_ROLOPCION", item);
                    }
                }
            }
        }
    
        private void FixupSI_AUDITORIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_AUDITORIA item in e.NewItems)
                {
                    item.SE_FORMULARIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_AUDITORIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_AUDITORIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SE_FORMULARIO, this))
                    {
                        item.SE_FORMULARIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_AUDITORIA", item);
                    }
                }
            }
        }

        #endregion
    }
}
