//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(RE_PERSONA))]
    public partial class RE_PERSONAFILIACION: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long pefi_iPersonaFilacionId
        {
            get { return _pefi_iPersonaFilacionId; }
            set
            {
                if (_pefi_iPersonaFilacionId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'pefi_iPersonaFilacionId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _pefi_iPersonaFilacionId = value;
                    OnPropertyChanged("pefi_iPersonaFilacionId");
                }
            }
        }
        private long _pefi_iPersonaFilacionId;
    
        [DataMember]
        public long pefi_iPersonaId
        {
            get { return _pefi_iPersonaId; }
            set
            {
                if (_pefi_iPersonaId != value)
                {
                    ChangeTracker.RecordOriginalValue("pefi_iPersonaId", _pefi_iPersonaId);
                    if (!IsDeserializing)
                    {
                        if (RE_PERSONA != null && RE_PERSONA.pers_iPersonaId != value)
                        {
                            RE_PERSONA = null;
                        }
                    }
                    _pefi_iPersonaId = value;
                    OnPropertyChanged("pefi_iPersonaId");
                }
            }
        }
        private long _pefi_iPersonaId;
    
        [DataMember]
        public string pefi_vNombreFiliacion
        {
            get { return _pefi_vNombreFiliacion; }
            set
            {
                if (_pefi_vNombreFiliacion != value)
                {
                    _pefi_vNombreFiliacion = value;
                    OnPropertyChanged("pefi_vNombreFiliacion");
                }
            }
        }
        private string _pefi_vNombreFiliacion;
    
        [DataMember]
        public string pefi_vLugarNacimiento
        {
            get { return _pefi_vLugarNacimiento; }
            set
            {
                if (_pefi_vLugarNacimiento != value)
                {
                    _pefi_vLugarNacimiento = value;
                    OnPropertyChanged("pefi_vLugarNacimiento");
                }
            }
        }
        private string _pefi_vLugarNacimiento;
    
        [DataMember]
        public System.DateTime pefi_dFechaNacimiento
        {
            get { return _pefi_dFechaNacimiento; }
            set
            {
                if (_pefi_dFechaNacimiento != value)
                {
                    _pefi_dFechaNacimiento = value;
                    OnPropertyChanged("pefi_dFechaNacimiento");
                }
            }
        }
        private System.DateTime _pefi_dFechaNacimiento;
    
        [DataMember]
        public short pefi_sNacionalidad
        {
            get { return _pefi_sNacionalidad; }
            set
            {
                if (_pefi_sNacionalidad != value)
                {
                    ChangeTracker.RecordOriginalValue("pefi_sNacionalidad", _pefi_sNacionalidad);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _pefi_sNacionalidad = value;
                    OnPropertyChanged("pefi_sNacionalidad");
                }
            }
        }
        private short _pefi_sNacionalidad;
    
        [DataMember]
        public short pefi_sTipoFilacionId
        {
            get { return _pefi_sTipoFilacionId; }
            set
            {
                if (_pefi_sTipoFilacionId != value)
                {
                    ChangeTracker.RecordOriginalValue("pefi_sTipoFilacionId", _pefi_sTipoFilacionId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _pefi_sTipoFilacionId = value;
                    OnPropertyChanged("pefi_sTipoFilacionId");
                }
            }
        }
        private short _pefi_sTipoFilacionId;
    
        [DataMember]
        public string pefi_vNroDocumento
        {
            get { return _pefi_vNroDocumento; }
            set
            {
                if (_pefi_vNroDocumento != value)
                {
                    _pefi_vNroDocumento = value;
                    OnPropertyChanged("pefi_vNroDocumento");
                }
            }
        }
        private string _pefi_vNroDocumento;
    
        [DataMember]
        public string pefi_cEstado
        {
            get { return _pefi_cEstado; }
            set
            {
                if (_pefi_cEstado != value)
                {
                    _pefi_cEstado = value;
                    OnPropertyChanged("pefi_cEstado");
                }
            }
        }
        private string _pefi_cEstado;
    
        [DataMember]
        public short pefi_sUsuarioCreacion
        {
            get { return _pefi_sUsuarioCreacion; }
            set
            {
                if (_pefi_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("pefi_sUsuarioCreacion", _pefi_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _pefi_sUsuarioCreacion = value;
                    OnPropertyChanged("pefi_sUsuarioCreacion");
                }
            }
        }
        private short _pefi_sUsuarioCreacion;
    
        [DataMember]
        public string pefi_vIPCreacion
        {
            get { return _pefi_vIPCreacion; }
            set
            {
                if (_pefi_vIPCreacion != value)
                {
                    _pefi_vIPCreacion = value;
                    OnPropertyChanged("pefi_vIPCreacion");
                }
            }
        }
        private string _pefi_vIPCreacion;
    
        [DataMember]
        public System.DateTime pefi_dFechaCreacion
        {
            get { return _pefi_dFechaCreacion; }
            set
            {
                if (_pefi_dFechaCreacion != value)
                {
                    _pefi_dFechaCreacion = value;
                    OnPropertyChanged("pefi_dFechaCreacion");
                }
            }
        }
        private System.DateTime _pefi_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> pefi_sUsuarioModificacion
        {
            get { return _pefi_sUsuarioModificacion; }
            set
            {
                if (_pefi_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("pefi_sUsuarioModificacion", _pefi_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _pefi_sUsuarioModificacion = value;
                    OnPropertyChanged("pefi_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _pefi_sUsuarioModificacion;
    
        [DataMember]
        public string pefi_vIPModificacion
        {
            get { return _pefi_vIPModificacion; }
            set
            {
                if (_pefi_vIPModificacion != value)
                {
                    _pefi_vIPModificacion = value;
                    OnPropertyChanged("pefi_vIPModificacion");
                }
            }
        }
        private string _pefi_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> pefi_dFechaModificacion
        {
            get { return _pefi_dFechaModificacion; }
            set
            {
                if (_pefi_dFechaModificacion != value)
                {
                    _pefi_dFechaModificacion = value;
                    OnPropertyChanged("pefi_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _pefi_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public RE_PERSONA RE_PERSONA
        {
            get { return _rE_PERSONA; }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA, value))
                {
                    var previousValue = _rE_PERSONA;
                    _rE_PERSONA = value;
                    FixupRE_PERSONA(previousValue);
                    OnNavigationPropertyChanged("RE_PERSONA");
                }
            }
        }
        private RE_PERSONA _rE_PERSONA;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            RE_PERSONA = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONAFILIACION.Contains(this))
            {
                previousValue.RE_PERSONAFILIACION.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_PERSONAFILIACION.Contains(this))
                {
                    SE_USUARIO.RE_PERSONAFILIACION.Add(this);
                }
    
                pefi_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONAFILIACION1.Contains(this))
            {
                previousValue.RE_PERSONAFILIACION1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_PERSONAFILIACION1.Contains(this))
                {
                    SE_USUARIO1.RE_PERSONAFILIACION1.Add(this);
                }
    
                pefi_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                pefi_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONAFILIACION.Contains(this))
            {
                previousValue.RE_PERSONAFILIACION.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.RE_PERSONAFILIACION.Contains(this))
                {
                    SI_PARAMETRO.RE_PERSONAFILIACION.Add(this);
                }
    
                pefi_sNacionalidad = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONAFILIACION1.Contains(this))
            {
                previousValue.RE_PERSONAFILIACION1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.RE_PERSONAFILIACION1.Contains(this))
                {
                    SI_PARAMETRO1.RE_PERSONAFILIACION1.Add(this);
                }
    
                pefi_sTipoFilacionId = SI_PARAMETRO1.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupRE_PERSONA(RE_PERSONA previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONAFILIACION.Contains(this))
            {
                previousValue.RE_PERSONAFILIACION.Remove(this);
            }
    
            if (RE_PERSONA != null)
            {
                if (!RE_PERSONA.RE_PERSONAFILIACION.Contains(this))
                {
                    RE_PERSONA.RE_PERSONAFILIACION.Add(this);
                }
    
                pefi_iPersonaId = RE_PERSONA.pers_iPersonaId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_PERSONA")
                    && (ChangeTracker.OriginalValues["RE_PERSONA"] == RE_PERSONA))
                {
                    ChangeTracker.OriginalValues.Remove("RE_PERSONA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_PERSONA", previousValue);
                }
                if (RE_PERSONA != null && !RE_PERSONA.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_PERSONA.StartTracking();
                }
            }
        }

        #endregion
    }
}
