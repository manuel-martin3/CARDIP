//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(RE_RESIDENCIA))]
    [KnownType(typeof(SI_CENTROPOBLADO))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    [KnownType(typeof(RE_REGISTROCIVIL))]
    [KnownType(typeof(RE_PERSONA))]
    [KnownType(typeof(RE_ASISTENCIA))]
    [KnownType(typeof(RE_ACTONOTARIAL))]
    public partial class SI_UBICACIONGEOGRAFICA: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public string ubge_cCodigo
        {
            get { return _ubge_cCodigo; }
            set
            {
                if (_ubge_cCodigo != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ubge_cCodigo' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ubge_cCodigo = value;
                    OnPropertyChanged("ubge_cCodigo");
                }
            }
        }
        private string _ubge_cCodigo;
    
        [DataMember]
        public string ubge_cUbi01
        {
            get { return _ubge_cUbi01; }
            set
            {
                if (_ubge_cUbi01 != value)
                {
                    _ubge_cUbi01 = value;
                    OnPropertyChanged("ubge_cUbi01");
                }
            }
        }
        private string _ubge_cUbi01;
    
        [DataMember]
        public string ubge_cUbi02
        {
            get { return _ubge_cUbi02; }
            set
            {
                if (_ubge_cUbi02 != value)
                {
                    _ubge_cUbi02 = value;
                    OnPropertyChanged("ubge_cUbi02");
                }
            }
        }
        private string _ubge_cUbi02;
    
        [DataMember]
        public string ubge_cUbi03
        {
            get { return _ubge_cUbi03; }
            set
            {
                if (_ubge_cUbi03 != value)
                {
                    _ubge_cUbi03 = value;
                    OnPropertyChanged("ubge_cUbi03");
                }
            }
        }
        private string _ubge_cUbi03;
    
        [DataMember]
        public string ubge_vDepartamento
        {
            get { return _ubge_vDepartamento; }
            set
            {
                if (_ubge_vDepartamento != value)
                {
                    _ubge_vDepartamento = value;
                    OnPropertyChanged("ubge_vDepartamento");
                }
            }
        }
        private string _ubge_vDepartamento;
    
        [DataMember]
        public string ubge_vProvincia
        {
            get { return _ubge_vProvincia; }
            set
            {
                if (_ubge_vProvincia != value)
                {
                    _ubge_vProvincia = value;
                    OnPropertyChanged("ubge_vProvincia");
                }
            }
        }
        private string _ubge_vProvincia;
    
        [DataMember]
        public string ubge_vDistrito
        {
            get { return _ubge_vDistrito; }
            set
            {
                if (_ubge_vDistrito != value)
                {
                    _ubge_vDistrito = value;
                    OnPropertyChanged("ubge_vDistrito");
                }
            }
        }
        private string _ubge_vDistrito;
    
        [DataMember]
        public string ubge_cEstado
        {
            get { return _ubge_cEstado; }
            set
            {
                if (_ubge_cEstado != value)
                {
                    _ubge_cEstado = value;
                    OnPropertyChanged("ubge_cEstado");
                }
            }
        }
        private string _ubge_cEstado;
    
        [DataMember]
        public short ubge_sUsuarioCreacion
        {
            get { return _ubge_sUsuarioCreacion; }
            set
            {
                if (_ubge_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("ubge_sUsuarioCreacion", _ubge_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _ubge_sUsuarioCreacion = value;
                    OnPropertyChanged("ubge_sUsuarioCreacion");
                }
            }
        }
        private short _ubge_sUsuarioCreacion;
    
        [DataMember]
        public string ubge_vIPCreacion
        {
            get { return _ubge_vIPCreacion; }
            set
            {
                if (_ubge_vIPCreacion != value)
                {
                    _ubge_vIPCreacion = value;
                    OnPropertyChanged("ubge_vIPCreacion");
                }
            }
        }
        private string _ubge_vIPCreacion;
    
        [DataMember]
        public System.DateTime ubge_dFechaCreacion
        {
            get { return _ubge_dFechaCreacion; }
            set
            {
                if (_ubge_dFechaCreacion != value)
                {
                    _ubge_dFechaCreacion = value;
                    OnPropertyChanged("ubge_dFechaCreacion");
                }
            }
        }
        private System.DateTime _ubge_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> ubge_sUsuarioModificacion
        {
            get { return _ubge_sUsuarioModificacion; }
            set
            {
                if (_ubge_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("ubge_sUsuarioModificacion", _ubge_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _ubge_sUsuarioModificacion = value;
                    OnPropertyChanged("ubge_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _ubge_sUsuarioModificacion;
    
        [DataMember]
        public string ubge_vIPModificacion
        {
            get { return _ubge_vIPModificacion; }
            set
            {
                if (_ubge_vIPModificacion != value)
                {
                    _ubge_vIPModificacion = value;
                    OnPropertyChanged("ubge_vIPModificacion");
                }
            }
        }
        private string _ubge_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> ubge_dFechaModificacion
        {
            get { return _ubge_dFechaModificacion; }
            set
            {
                if (_ubge_dFechaModificacion != value)
                {
                    _ubge_dFechaModificacion = value;
                    OnPropertyChanged("ubge_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _ubge_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public TrackableCollection<RE_RESIDENCIA> RE_RESIDENCIA
        {
            get
            {
                if (_rE_RESIDENCIA == null)
                {
                    _rE_RESIDENCIA = new TrackableCollection<RE_RESIDENCIA>();
                    _rE_RESIDENCIA.CollectionChanged += FixupRE_RESIDENCIA;
                }
                return _rE_RESIDENCIA;
            }
            set
            {
                if (!ReferenceEquals(_rE_RESIDENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_RESIDENCIA != null)
                    {
                        _rE_RESIDENCIA.CollectionChanged -= FixupRE_RESIDENCIA;
                    }
                    _rE_RESIDENCIA = value;
                    if (_rE_RESIDENCIA != null)
                    {
                        _rE_RESIDENCIA.CollectionChanged += FixupRE_RESIDENCIA;
                    }
                    OnNavigationPropertyChanged("RE_RESIDENCIA");
                }
            }
        }
        private TrackableCollection<RE_RESIDENCIA> _rE_RESIDENCIA;
    
        [DataMember]
        public TrackableCollection<SI_CENTROPOBLADO> SI_CENTROPOBLADO
        {
            get
            {
                if (_sI_CENTROPOBLADO == null)
                {
                    _sI_CENTROPOBLADO = new TrackableCollection<SI_CENTROPOBLADO>();
                    _sI_CENTROPOBLADO.CollectionChanged += FixupSI_CENTROPOBLADO;
                }
                return _sI_CENTROPOBLADO;
            }
            set
            {
                if (!ReferenceEquals(_sI_CENTROPOBLADO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_CENTROPOBLADO != null)
                    {
                        _sI_CENTROPOBLADO.CollectionChanged -= FixupSI_CENTROPOBLADO;
                    }
                    _sI_CENTROPOBLADO = value;
                    if (_sI_CENTROPOBLADO != null)
                    {
                        _sI_CENTROPOBLADO.CollectionChanged += FixupSI_CENTROPOBLADO;
                    }
                    OnNavigationPropertyChanged("SI_CENTROPOBLADO");
                }
            }
        }
        private TrackableCollection<SI_CENTROPOBLADO> _sI_CENTROPOBLADO;
    
        [DataMember]
        public TrackableCollection<SI_OFICINACONSULAR> SI_OFICINACONSULAR
        {
            get
            {
                if (_sI_OFICINACONSULAR == null)
                {
                    _sI_OFICINACONSULAR = new TrackableCollection<SI_OFICINACONSULAR>();
                    _sI_OFICINACONSULAR.CollectionChanged += FixupSI_OFICINACONSULAR;
                }
                return _sI_OFICINACONSULAR;
            }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_OFICINACONSULAR != null)
                    {
                        _sI_OFICINACONSULAR.CollectionChanged -= FixupSI_OFICINACONSULAR;
                    }
                    _sI_OFICINACONSULAR = value;
                    if (_sI_OFICINACONSULAR != null)
                    {
                        _sI_OFICINACONSULAR.CollectionChanged += FixupSI_OFICINACONSULAR;
                    }
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private TrackableCollection<SI_OFICINACONSULAR> _sI_OFICINACONSULAR;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROCIVIL> RE_REGISTROCIVIL
        {
            get
            {
                if (_rE_REGISTROCIVIL == null)
                {
                    _rE_REGISTROCIVIL = new TrackableCollection<RE_REGISTROCIVIL>();
                    _rE_REGISTROCIVIL.CollectionChanged += FixupRE_REGISTROCIVIL;
                }
                return _rE_REGISTROCIVIL;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROCIVIL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROCIVIL != null)
                    {
                        _rE_REGISTROCIVIL.CollectionChanged -= FixupRE_REGISTROCIVIL;
                    }
                    _rE_REGISTROCIVIL = value;
                    if (_rE_REGISTROCIVIL != null)
                    {
                        _rE_REGISTROCIVIL.CollectionChanged += FixupRE_REGISTROCIVIL;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROCIVIL");
                }
            }
        }
        private TrackableCollection<RE_REGISTROCIVIL> _rE_REGISTROCIVIL;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROCIVIL> RE_REGISTROCIVIL1
        {
            get
            {
                if (_rE_REGISTROCIVIL1 == null)
                {
                    _rE_REGISTROCIVIL1 = new TrackableCollection<RE_REGISTROCIVIL>();
                    _rE_REGISTROCIVIL1.CollectionChanged += FixupRE_REGISTROCIVIL1;
                }
                return _rE_REGISTROCIVIL1;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROCIVIL1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROCIVIL1 != null)
                    {
                        _rE_REGISTROCIVIL1.CollectionChanged -= FixupRE_REGISTROCIVIL1;
                    }
                    _rE_REGISTROCIVIL1 = value;
                    if (_rE_REGISTROCIVIL1 != null)
                    {
                        _rE_REGISTROCIVIL1.CollectionChanged += FixupRE_REGISTROCIVIL1;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROCIVIL1");
                }
            }
        }
        private TrackableCollection<RE_REGISTROCIVIL> _rE_REGISTROCIVIL1;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA
        {
            get
            {
                if (_rE_PERSONA == null)
                {
                    _rE_PERSONA = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA.CollectionChanged += FixupRE_PERSONA;
                }
                return _rE_PERSONA;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA != null)
                    {
                        _rE_PERSONA.CollectionChanged -= FixupRE_PERSONA;
                    }
                    _rE_PERSONA = value;
                    if (_rE_PERSONA != null)
                    {
                        _rE_PERSONA.CollectionChanged += FixupRE_PERSONA;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA1
        {
            get
            {
                if (_rE_PERSONA1 == null)
                {
                    _rE_PERSONA1 = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA1.CollectionChanged += FixupRE_PERSONA1;
                }
                return _rE_PERSONA1;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA1 != null)
                    {
                        _rE_PERSONA1.CollectionChanged -= FixupRE_PERSONA1;
                    }
                    _rE_PERSONA1 = value;
                    if (_rE_PERSONA1 != null)
                    {
                        _rE_PERSONA1.CollectionChanged += FixupRE_PERSONA1;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA1");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA1;
    
        [DataMember]
        public TrackableCollection<RE_ASISTENCIA> RE_ASISTENCIA
        {
            get
            {
                if (_rE_ASISTENCIA == null)
                {
                    _rE_ASISTENCIA = new TrackableCollection<RE_ASISTENCIA>();
                    _rE_ASISTENCIA.CollectionChanged += FixupRE_ASISTENCIA;
                }
                return _rE_ASISTENCIA;
            }
            set
            {
                if (!ReferenceEquals(_rE_ASISTENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ASISTENCIA != null)
                    {
                        _rE_ASISTENCIA.CollectionChanged -= FixupRE_ASISTENCIA;
                    }
                    _rE_ASISTENCIA = value;
                    if (_rE_ASISTENCIA != null)
                    {
                        _rE_ASISTENCIA.CollectionChanged += FixupRE_ASISTENCIA;
                    }
                    OnNavigationPropertyChanged("RE_ASISTENCIA");
                }
            }
        }
        private TrackableCollection<RE_ASISTENCIA> _rE_ASISTENCIA;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIAL> RE_ACTONOTARIAL
        {
            get
            {
                if (_rE_ACTONOTARIAL == null)
                {
                    _rE_ACTONOTARIAL = new TrackableCollection<RE_ACTONOTARIAL>();
                    _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                }
                return _rE_ACTONOTARIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged -= FixupRE_ACTONOTARIAL;
                    }
                    _rE_ACTONOTARIAL = value;
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIAL> _rE_ACTONOTARIAL;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            RE_RESIDENCIA.Clear();
            SI_CENTROPOBLADO.Clear();
            SI_OFICINACONSULAR.Clear();
            RE_REGISTROCIVIL.Clear();
            RE_REGISTROCIVIL1.Clear();
            RE_PERSONA.Clear();
            RE_PERSONA1.Clear();
            RE_ASISTENCIA.Clear();
            RE_ACTONOTARIAL.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_UBICACIONGEOGRAFICA.Contains(this))
            {
                previousValue.SI_UBICACIONGEOGRAFICA.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.SI_UBICACIONGEOGRAFICA.Contains(this))
                {
                    SE_USUARIO.SI_UBICACIONGEOGRAFICA.Add(this);
                }
    
                ubge_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_UBICACIONGEOGRAFICA1.Contains(this))
            {
                previousValue.SI_UBICACIONGEOGRAFICA1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.SI_UBICACIONGEOGRAFICA1.Contains(this))
                {
                    SE_USUARIO1.SI_UBICACIONGEOGRAFICA1.Add(this);
                }
    
                ubge_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                ubge_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupRE_RESIDENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_RESIDENCIA item in e.NewItems)
                {
                    item.SI_UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_RESIDENCIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_RESIDENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_UBICACIONGEOGRAFICA, this))
                    {
                        item.SI_UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_RESIDENCIA", item);
                    }
                }
            }
        }
    
        private void FixupSI_CENTROPOBLADO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_CENTROPOBLADO item in e.NewItems)
                {
                    item.SI_UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_CENTROPOBLADO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_CENTROPOBLADO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_UBICACIONGEOGRAFICA, this))
                    {
                        item.SI_UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_CENTROPOBLADO", item);
                    }
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_OFICINACONSULAR item in e.NewItems)
                {
                    item.SI_UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_OFICINACONSULAR", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_OFICINACONSULAR item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_UBICACIONGEOGRAFICA, this))
                    {
                        item.SI_UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_OFICINACONSULAR", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROCIVIL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.NewItems)
                {
                    item.SI_UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROCIVIL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_UBICACIONGEOGRAFICA, this))
                    {
                        item.SI_UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROCIVIL", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROCIVIL1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.NewItems)
                {
                    item.SI_UBICACIONGEOGRAFICA1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROCIVIL1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_UBICACIONGEOGRAFICA1, this))
                    {
                        item.SI_UBICACIONGEOGRAFICA1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROCIVIL1", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_UBICACIONGEOGRAFICA, this))
                    {
                        item.SI_UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_UBICACIONGEOGRAFICA1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_UBICACIONGEOGRAFICA1, this))
                    {
                        item.SI_UBICACIONGEOGRAFICA1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ASISTENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ASISTENCIA item in e.NewItems)
                {
                    item.SI_UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ASISTENCIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ASISTENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_UBICACIONGEOGRAFICA, this))
                    {
                        item.SI_UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ASISTENCIA", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.NewItems)
                {
                    item.SI_UBICACIONGEOGRAFICA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_UBICACIONGEOGRAFICA, this))
                    {
                        item.SI_UBICACIONGEOGRAFICA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
        }

        #endregion
    }
}
