//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CO_CUENTACORRIENTE))]
    [KnownType(typeof(MA_ESTADO))]
    [KnownType(typeof(MA_MONEDA))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(CO_REMESADETALLE))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    public partial class CO_REMESA: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long reme_iRemesaId
        {
            get { return _reme_iRemesaId; }
            set
            {
                if (_reme_iRemesaId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'reme_iRemesaId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _reme_iRemesaId = value;
                    OnPropertyChanged("reme_iRemesaId");
                }
            }
        }
        private long _reme_iRemesaId;
    
        [DataMember]
        public Nullable<short> reme_sTipoId
        {
            get { return _reme_sTipoId; }
            set
            {
                if (_reme_sTipoId != value)
                {
                    ChangeTracker.RecordOriginalValue("reme_sTipoId", _reme_sTipoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _reme_sTipoId = value;
                    OnPropertyChanged("reme_sTipoId");
                }
            }
        }
        private Nullable<short> _reme_sTipoId;
    
        [DataMember]
        public short reme_sOficinaConsularOrigenId
        {
            get { return _reme_sOficinaConsularOrigenId; }
            set
            {
                if (_reme_sOficinaConsularOrigenId != value)
                {
                    ChangeTracker.RecordOriginalValue("reme_sOficinaConsularOrigenId", _reme_sOficinaConsularOrigenId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR1 != null && SI_OFICINACONSULAR1.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR1 = null;
                        }
                    }
                    _reme_sOficinaConsularOrigenId = value;
                    OnPropertyChanged("reme_sOficinaConsularOrigenId");
                }
            }
        }
        private short _reme_sOficinaConsularOrigenId;
    
        [DataMember]
        public Nullable<short> reme_sOficinaConsularDestinoId
        {
            get { return _reme_sOficinaConsularDestinoId; }
            set
            {
                if (_reme_sOficinaConsularDestinoId != value)
                {
                    ChangeTracker.RecordOriginalValue("reme_sOficinaConsularDestinoId", _reme_sOficinaConsularDestinoId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR != null && SI_OFICINACONSULAR.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR = null;
                        }
                    }
                    _reme_sOficinaConsularDestinoId = value;
                    OnPropertyChanged("reme_sOficinaConsularDestinoId");
                }
            }
        }
        private Nullable<short> _reme_sOficinaConsularDestinoId;
    
        [DataMember]
        public string reme_cPeriodo
        {
            get { return _reme_cPeriodo; }
            set
            {
                if (_reme_cPeriodo != value)
                {
                    _reme_cPeriodo = value;
                    OnPropertyChanged("reme_cPeriodo");
                }
            }
        }
        private string _reme_cPeriodo;
    
        [DataMember]
        public Nullable<short> reme_sCuentaCorrienteId
        {
            get { return _reme_sCuentaCorrienteId; }
            set
            {
                if (_reme_sCuentaCorrienteId != value)
                {
                    ChangeTracker.RecordOriginalValue("reme_sCuentaCorrienteId", _reme_sCuentaCorrienteId);
                    if (!IsDeserializing)
                    {
                        if (CO_CUENTACORRIENTE != null && CO_CUENTACORRIENTE.cuco_sCuentaCorrienteId != value)
                        {
                            CO_CUENTACORRIENTE = null;
                        }
                    }
                    _reme_sCuentaCorrienteId = value;
                    OnPropertyChanged("reme_sCuentaCorrienteId");
                }
            }
        }
        private Nullable<short> _reme_sCuentaCorrienteId;
    
        [DataMember]
        public string reme_vNumeroEnvio
        {
            get { return _reme_vNumeroEnvio; }
            set
            {
                if (_reme_vNumeroEnvio != value)
                {
                    _reme_vNumeroEnvio = value;
                    OnPropertyChanged("reme_vNumeroEnvio");
                }
            }
        }
        private string _reme_vNumeroEnvio;
    
        [DataMember]
        public Nullable<short> reme_sMonedaId
        {
            get { return _reme_sMonedaId; }
            set
            {
                if (_reme_sMonedaId != value)
                {
                    ChangeTracker.RecordOriginalValue("reme_sMonedaId", _reme_sMonedaId);
                    if (!IsDeserializing)
                    {
                        if (MA_MONEDA != null && MA_MONEDA.mone_sMonedaId != value)
                        {
                            MA_MONEDA = null;
                        }
                    }
                    _reme_sMonedaId = value;
                    OnPropertyChanged("reme_sMonedaId");
                }
            }
        }
        private Nullable<short> _reme_sMonedaId;
    
        [DataMember]
        public Nullable<double> reme_FMonto
        {
            get { return _reme_FMonto; }
            set
            {
                if (_reme_FMonto != value)
                {
                    _reme_FMonto = value;
                    OnPropertyChanged("reme_FMonto");
                }
            }
        }
        private Nullable<double> _reme_FMonto;
    
        [DataMember]
        public Nullable<System.DateTime> reme_dFechaEnvio
        {
            get { return _reme_dFechaEnvio; }
            set
            {
                if (_reme_dFechaEnvio != value)
                {
                    _reme_dFechaEnvio = value;
                    OnPropertyChanged("reme_dFechaEnvio");
                }
            }
        }
        private Nullable<System.DateTime> _reme_dFechaEnvio;
    
        [DataMember]
        public string reme_vResponsableEnvio
        {
            get { return _reme_vResponsableEnvio; }
            set
            {
                if (_reme_vResponsableEnvio != value)
                {
                    _reme_vResponsableEnvio = value;
                    OnPropertyChanged("reme_vResponsableEnvio");
                }
            }
        }
        private string _reme_vResponsableEnvio;
    
        [DataMember]
        public string reme_vObservacion
        {
            get { return _reme_vObservacion; }
            set
            {
                if (_reme_vObservacion != value)
                {
                    _reme_vObservacion = value;
                    OnPropertyChanged("reme_vObservacion");
                }
            }
        }
        private string _reme_vObservacion;
    
        [DataMember]
        public short reme_sEstadoId
        {
            get { return _reme_sEstadoId; }
            set
            {
                if (_reme_sEstadoId != value)
                {
                    ChangeTracker.RecordOriginalValue("reme_sEstadoId", _reme_sEstadoId);
                    if (!IsDeserializing)
                    {
                        if (MA_ESTADO != null && MA_ESTADO.esta_sEstadoId != value)
                        {
                            MA_ESTADO = null;
                        }
                    }
                    _reme_sEstadoId = value;
                    OnPropertyChanged("reme_sEstadoId");
                }
            }
        }
        private short _reme_sEstadoId;
    
        [DataMember]
        public short reme_sUsuarioCreacion
        {
            get { return _reme_sUsuarioCreacion; }
            set
            {
                if (_reme_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("reme_sUsuarioCreacion", _reme_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _reme_sUsuarioCreacion = value;
                    OnPropertyChanged("reme_sUsuarioCreacion");
                }
            }
        }
        private short _reme_sUsuarioCreacion;
    
        [DataMember]
        public string reme_vIPCreacion
        {
            get { return _reme_vIPCreacion; }
            set
            {
                if (_reme_vIPCreacion != value)
                {
                    _reme_vIPCreacion = value;
                    OnPropertyChanged("reme_vIPCreacion");
                }
            }
        }
        private string _reme_vIPCreacion;
    
        [DataMember]
        public System.DateTime reme_dFechaCreacion
        {
            get { return _reme_dFechaCreacion; }
            set
            {
                if (_reme_dFechaCreacion != value)
                {
                    _reme_dFechaCreacion = value;
                    OnPropertyChanged("reme_dFechaCreacion");
                }
            }
        }
        private System.DateTime _reme_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> reme_sUsuarioModificacion
        {
            get { return _reme_sUsuarioModificacion; }
            set
            {
                if (_reme_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("reme_sUsuarioModificacion", _reme_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _reme_sUsuarioModificacion = value;
                    OnPropertyChanged("reme_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _reme_sUsuarioModificacion;
    
        [DataMember]
        public string reme_vIPModificacion
        {
            get { return _reme_vIPModificacion; }
            set
            {
                if (_reme_vIPModificacion != value)
                {
                    _reme_vIPModificacion = value;
                    OnPropertyChanged("reme_vIPModificacion");
                }
            }
        }
        private string _reme_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> reme_dFechaModificacion
        {
            get { return _reme_dFechaModificacion; }
            set
            {
                if (_reme_dFechaModificacion != value)
                {
                    _reme_dFechaModificacion = value;
                    OnPropertyChanged("reme_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _reme_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public CO_CUENTACORRIENTE CO_CUENTACORRIENTE
        {
            get { return _cO_CUENTACORRIENTE; }
            set
            {
                if (!ReferenceEquals(_cO_CUENTACORRIENTE, value))
                {
                    var previousValue = _cO_CUENTACORRIENTE;
                    _cO_CUENTACORRIENTE = value;
                    FixupCO_CUENTACORRIENTE(previousValue);
                    OnNavigationPropertyChanged("CO_CUENTACORRIENTE");
                }
            }
        }
        private CO_CUENTACORRIENTE _cO_CUENTACORRIENTE;
    
        [DataMember]
        public MA_ESTADO MA_ESTADO
        {
            get { return _mA_ESTADO; }
            set
            {
                if (!ReferenceEquals(_mA_ESTADO, value))
                {
                    var previousValue = _mA_ESTADO;
                    _mA_ESTADO = value;
                    FixupMA_ESTADO(previousValue);
                    OnNavigationPropertyChanged("MA_ESTADO");
                }
            }
        }
        private MA_ESTADO _mA_ESTADO;
    
        [DataMember]
        public MA_MONEDA MA_MONEDA
        {
            get { return _mA_MONEDA; }
            set
            {
                if (!ReferenceEquals(_mA_MONEDA, value))
                {
                    var previousValue = _mA_MONEDA;
                    _mA_MONEDA = value;
                    FixupMA_MONEDA(previousValue);
                    OnNavigationPropertyChanged("MA_MONEDA");
                }
            }
        }
        private MA_MONEDA _mA_MONEDA;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public TrackableCollection<CO_REMESADETALLE> CO_REMESADETALLE
        {
            get
            {
                if (_cO_REMESADETALLE == null)
                {
                    _cO_REMESADETALLE = new TrackableCollection<CO_REMESADETALLE>();
                    _cO_REMESADETALLE.CollectionChanged += FixupCO_REMESADETALLE;
                }
                return _cO_REMESADETALLE;
            }
            set
            {
                if (!ReferenceEquals(_cO_REMESADETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_REMESADETALLE != null)
                    {
                        _cO_REMESADETALLE.CollectionChanged -= FixupCO_REMESADETALLE;
                    }
                    _cO_REMESADETALLE = value;
                    if (_cO_REMESADETALLE != null)
                    {
                        _cO_REMESADETALLE.CollectionChanged += FixupCO_REMESADETALLE;
                    }
                    OnNavigationPropertyChanged("CO_REMESADETALLE");
                }
            }
        }
        private TrackableCollection<CO_REMESADETALLE> _cO_REMESADETALLE;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR
        {
            get { return _sI_OFICINACONSULAR; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    var previousValue = _sI_OFICINACONSULAR;
                    _sI_OFICINACONSULAR = value;
                    FixupSI_OFICINACONSULAR(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR1
        {
            get { return _sI_OFICINACONSULAR1; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR1, value))
                {
                    var previousValue = _sI_OFICINACONSULAR1;
                    _sI_OFICINACONSULAR1 = value;
                    FixupSI_OFICINACONSULAR1(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR1");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR1;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CO_CUENTACORRIENTE = null;
            MA_ESTADO = null;
            MA_MONEDA = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            CO_REMESADETALLE.Clear();
            SI_OFICINACONSULAR = null;
            SI_OFICINACONSULAR1 = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupCO_CUENTACORRIENTE(CO_CUENTACORRIENTE previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_REMESA.Contains(this))
            {
                previousValue.CO_REMESA.Remove(this);
            }
    
            if (CO_CUENTACORRIENTE != null)
            {
                if (!CO_CUENTACORRIENTE.CO_REMESA.Contains(this))
                {
                    CO_CUENTACORRIENTE.CO_REMESA.Add(this);
                }
    
                reme_sCuentaCorrienteId = CO_CUENTACORRIENTE.cuco_sCuentaCorrienteId;
            }
            else if (!skipKeys)
            {
                reme_sCuentaCorrienteId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CO_CUENTACORRIENTE")
                    && (ChangeTracker.OriginalValues["CO_CUENTACORRIENTE"] == CO_CUENTACORRIENTE))
                {
                    ChangeTracker.OriginalValues.Remove("CO_CUENTACORRIENTE");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CO_CUENTACORRIENTE", previousValue);
                }
                if (CO_CUENTACORRIENTE != null && !CO_CUENTACORRIENTE.ChangeTracker.ChangeTrackingEnabled)
                {
                    CO_CUENTACORRIENTE.StartTracking();
                }
            }
        }
    
        private void FixupMA_ESTADO(MA_ESTADO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_REMESA.Contains(this))
            {
                previousValue.CO_REMESA.Remove(this);
            }
    
            if (MA_ESTADO != null)
            {
                if (!MA_ESTADO.CO_REMESA.Contains(this))
                {
                    MA_ESTADO.CO_REMESA.Add(this);
                }
    
                reme_sEstadoId = MA_ESTADO.esta_sEstadoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_ESTADO")
                    && (ChangeTracker.OriginalValues["MA_ESTADO"] == MA_ESTADO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_ESTADO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_ESTADO", previousValue);
                }
                if (MA_ESTADO != null && !MA_ESTADO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_ESTADO.StartTracking();
                }
            }
        }
    
        private void FixupMA_MONEDA(MA_MONEDA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_REMESA.Contains(this))
            {
                previousValue.CO_REMESA.Remove(this);
            }
    
            if (MA_MONEDA != null)
            {
                if (!MA_MONEDA.CO_REMESA.Contains(this))
                {
                    MA_MONEDA.CO_REMESA.Add(this);
                }
    
                reme_sMonedaId = MA_MONEDA.mone_sMonedaId;
            }
            else if (!skipKeys)
            {
                reme_sMonedaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_MONEDA")
                    && (ChangeTracker.OriginalValues["MA_MONEDA"] == MA_MONEDA))
                {
                    ChangeTracker.OriginalValues.Remove("MA_MONEDA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_MONEDA", previousValue);
                }
                if (MA_MONEDA != null && !MA_MONEDA.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_MONEDA.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_REMESA.Contains(this))
            {
                previousValue.CO_REMESA.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.CO_REMESA.Contains(this))
                {
                    SE_USUARIO.CO_REMESA.Add(this);
                }
    
                reme_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_REMESA1.Contains(this))
            {
                previousValue.CO_REMESA1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.CO_REMESA1.Contains(this))
                {
                    SE_USUARIO1.CO_REMESA1.Add(this);
                }
    
                reme_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                reme_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_REMESA.Contains(this))
            {
                previousValue.CO_REMESA.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.CO_REMESA.Contains(this))
                {
                    SI_PARAMETRO.CO_REMESA.Add(this);
                }
    
                reme_sTipoId = SI_PARAMETRO.para_sParametroId;
            }
            else if (!skipKeys)
            {
                reme_sTipoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(SI_OFICINACONSULAR previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_REMESA.Contains(this))
            {
                previousValue.CO_REMESA.Remove(this);
            }
    
            if (SI_OFICINACONSULAR != null)
            {
                if (!SI_OFICINACONSULAR.CO_REMESA.Contains(this))
                {
                    SI_OFICINACONSULAR.CO_REMESA.Add(this);
                }
    
                reme_sOficinaConsularDestinoId = SI_OFICINACONSULAR.ofco_sOficinaConsularId;
            }
            else if (!skipKeys)
            {
                reme_sOficinaConsularDestinoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR"] == SI_OFICINACONSULAR))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR", previousValue);
                }
                if (SI_OFICINACONSULAR != null && !SI_OFICINACONSULAR.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR1(SI_OFICINACONSULAR previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_REMESA1.Contains(this))
            {
                previousValue.CO_REMESA1.Remove(this);
            }
    
            if (SI_OFICINACONSULAR1 != null)
            {
                if (!SI_OFICINACONSULAR1.CO_REMESA1.Contains(this))
                {
                    SI_OFICINACONSULAR1.CO_REMESA1.Add(this);
                }
    
                reme_sOficinaConsularOrigenId = SI_OFICINACONSULAR1.ofco_sOficinaConsularId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR1")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR1"] == SI_OFICINACONSULAR1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR1", previousValue);
                }
                if (SI_OFICINACONSULAR1 != null && !SI_OFICINACONSULAR1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR1.StartTracking();
                }
            }
        }
    
        private void FixupCO_REMESADETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_REMESADETALLE item in e.NewItems)
                {
                    item.CO_REMESA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_REMESADETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_REMESADETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.CO_REMESA, this))
                    {
                        item.CO_REMESA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_REMESADETALLE", item);
                    }
                }
            }
        }

        #endregion
    }
}
