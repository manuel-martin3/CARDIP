//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AL_INSUMO))]
    [KnownType(typeof(MA_ESTADO))]
    [KnownType(typeof(SE_USUARIO))]
    public partial class AL_INSUMOHISTORICO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long inhi_iInsumoHistoricoId
        {
            get { return _inhi_iInsumoHistoricoId; }
            set
            {
                if (_inhi_iInsumoHistoricoId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'inhi_iInsumoHistoricoId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _inhi_iInsumoHistoricoId = value;
                    OnPropertyChanged("inhi_iInsumoHistoricoId");
                }
            }
        }
        private long _inhi_iInsumoHistoricoId;
    
        [DataMember]
        public long inhi_iInsumoId
        {
            get { return _inhi_iInsumoId; }
            set
            {
                if (_inhi_iInsumoId != value)
                {
                    ChangeTracker.RecordOriginalValue("inhi_iInsumoId", _inhi_iInsumoId);
                    if (!IsDeserializing)
                    {
                        if (AL_INSUMO != null && AL_INSUMO.insu_iInsumoId != value)
                        {
                            AL_INSUMO = null;
                        }
                    }
                    _inhi_iInsumoId = value;
                    OnPropertyChanged("inhi_iInsumoId");
                }
            }
        }
        private long _inhi_iInsumoId;
    
        [DataMember]
        public System.DateTime inhi_dFechaRegistro
        {
            get { return _inhi_dFechaRegistro; }
            set
            {
                if (_inhi_dFechaRegistro != value)
                {
                    _inhi_dFechaRegistro = value;
                    OnPropertyChanged("inhi_dFechaRegistro");
                }
            }
        }
        private System.DateTime _inhi_dFechaRegistro;
    
        [DataMember]
        public string inhi_vObservacion
        {
            get { return _inhi_vObservacion; }
            set
            {
                if (_inhi_vObservacion != value)
                {
                    _inhi_vObservacion = value;
                    OnPropertyChanged("inhi_vObservacion");
                }
            }
        }
        private string _inhi_vObservacion;
    
        [DataMember]
        public short inhi_sEstadoId
        {
            get { return _inhi_sEstadoId; }
            set
            {
                if (_inhi_sEstadoId != value)
                {
                    ChangeTracker.RecordOriginalValue("inhi_sEstadoId", _inhi_sEstadoId);
                    if (!IsDeserializing)
                    {
                        if (MA_ESTADO != null && MA_ESTADO.esta_sEstadoId != value)
                        {
                            MA_ESTADO = null;
                        }
                    }
                    _inhi_sEstadoId = value;
                    OnPropertyChanged("inhi_sEstadoId");
                }
            }
        }
        private short _inhi_sEstadoId;
    
        [DataMember]
        public short inhi_sUsuarioCreacion
        {
            get { return _inhi_sUsuarioCreacion; }
            set
            {
                if (_inhi_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("inhi_sUsuarioCreacion", _inhi_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _inhi_sUsuarioCreacion = value;
                    OnPropertyChanged("inhi_sUsuarioCreacion");
                }
            }
        }
        private short _inhi_sUsuarioCreacion;
    
        [DataMember]
        public string inhi_vIPCreacion
        {
            get { return _inhi_vIPCreacion; }
            set
            {
                if (_inhi_vIPCreacion != value)
                {
                    _inhi_vIPCreacion = value;
                    OnPropertyChanged("inhi_vIPCreacion");
                }
            }
        }
        private string _inhi_vIPCreacion;
    
        [DataMember]
        public System.DateTime inhi_dFechaCreacion
        {
            get { return _inhi_dFechaCreacion; }
            set
            {
                if (_inhi_dFechaCreacion != value)
                {
                    _inhi_dFechaCreacion = value;
                    OnPropertyChanged("inhi_dFechaCreacion");
                }
            }
        }
        private System.DateTime _inhi_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> inhi_sUsuarioModificacion
        {
            get { return _inhi_sUsuarioModificacion; }
            set
            {
                if (_inhi_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("inhi_sUsuarioModificacion", _inhi_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _inhi_sUsuarioModificacion = value;
                    OnPropertyChanged("inhi_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _inhi_sUsuarioModificacion;
    
        [DataMember]
        public string inhi_vIPModificacion
        {
            get { return _inhi_vIPModificacion; }
            set
            {
                if (_inhi_vIPModificacion != value)
                {
                    _inhi_vIPModificacion = value;
                    OnPropertyChanged("inhi_vIPModificacion");
                }
            }
        }
        private string _inhi_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> inhi_dFechaModificacion
        {
            get { return _inhi_dFechaModificacion; }
            set
            {
                if (_inhi_dFechaModificacion != value)
                {
                    _inhi_dFechaModificacion = value;
                    OnPropertyChanged("inhi_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _inhi_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public AL_INSUMO AL_INSUMO
        {
            get { return _aL_INSUMO; }
            set
            {
                if (!ReferenceEquals(_aL_INSUMO, value))
                {
                    var previousValue = _aL_INSUMO;
                    _aL_INSUMO = value;
                    FixupAL_INSUMO(previousValue);
                    OnNavigationPropertyChanged("AL_INSUMO");
                }
            }
        }
        private AL_INSUMO _aL_INSUMO;
    
        [DataMember]
        public MA_ESTADO MA_ESTADO
        {
            get { return _mA_ESTADO; }
            set
            {
                if (!ReferenceEquals(_mA_ESTADO, value))
                {
                    var previousValue = _mA_ESTADO;
                    _mA_ESTADO = value;
                    FixupMA_ESTADO(previousValue);
                    OnNavigationPropertyChanged("MA_ESTADO");
                }
            }
        }
        private MA_ESTADO _mA_ESTADO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AL_INSUMO = null;
            MA_ESTADO = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupAL_INSUMO(AL_INSUMO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_INSUMOHISTORICO.Contains(this))
            {
                previousValue.AL_INSUMOHISTORICO.Remove(this);
            }
    
            if (AL_INSUMO != null)
            {
                if (!AL_INSUMO.AL_INSUMOHISTORICO.Contains(this))
                {
                    AL_INSUMO.AL_INSUMOHISTORICO.Add(this);
                }
    
                inhi_iInsumoId = AL_INSUMO.insu_iInsumoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("AL_INSUMO")
                    && (ChangeTracker.OriginalValues["AL_INSUMO"] == AL_INSUMO))
                {
                    ChangeTracker.OriginalValues.Remove("AL_INSUMO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("AL_INSUMO", previousValue);
                }
                if (AL_INSUMO != null && !AL_INSUMO.ChangeTracker.ChangeTrackingEnabled)
                {
                    AL_INSUMO.StartTracking();
                }
            }
        }
    
        private void FixupMA_ESTADO(MA_ESTADO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_INSUMOHISTORICO.Contains(this))
            {
                previousValue.AL_INSUMOHISTORICO.Remove(this);
            }
    
            if (MA_ESTADO != null)
            {
                if (!MA_ESTADO.AL_INSUMOHISTORICO.Contains(this))
                {
                    MA_ESTADO.AL_INSUMOHISTORICO.Add(this);
                }
    
                inhi_sEstadoId = MA_ESTADO.esta_sEstadoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_ESTADO")
                    && (ChangeTracker.OriginalValues["MA_ESTADO"] == MA_ESTADO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_ESTADO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_ESTADO", previousValue);
                }
                if (MA_ESTADO != null && !MA_ESTADO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_ESTADO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_INSUMOHISTORICO.Contains(this))
            {
                previousValue.AL_INSUMOHISTORICO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.AL_INSUMOHISTORICO.Contains(this))
                {
                    SE_USUARIO.AL_INSUMOHISTORICO.Add(this);
                }
    
                inhi_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_INSUMOHISTORICO1.Contains(this))
            {
                previousValue.AL_INSUMOHISTORICO1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.AL_INSUMOHISTORICO1.Contains(this))
                {
                    SE_USUARIO1.AL_INSUMOHISTORICO1.Add(this);
                }
    
                inhi_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                inhi_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }

        #endregion
    }
}
