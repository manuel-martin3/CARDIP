//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(RE_ACTOMIGRATORIO))]
    [KnownType(typeof(RE_PERSONAIDENTIFICACION))]
    [KnownType(typeof(SE_USUARIO))]
    public partial class MA_DOCUMENTO_IDENTIDAD: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short doid_sTipoDocumentoIdentidadId
        {
            get { return _doid_sTipoDocumentoIdentidadId; }
            set
            {
                if (_doid_sTipoDocumentoIdentidadId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'doid_sTipoDocumentoIdentidadId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _doid_sTipoDocumentoIdentidadId = value;
                    OnPropertyChanged("doid_sTipoDocumentoIdentidadId");
                }
            }
        }
        private short _doid_sTipoDocumentoIdentidadId;
    
        [DataMember]
        public string doid_vDescripcionCorta
        {
            get { return _doid_vDescripcionCorta; }
            set
            {
                if (_doid_vDescripcionCorta != value)
                {
                    _doid_vDescripcionCorta = value;
                    OnPropertyChanged("doid_vDescripcionCorta");
                }
            }
        }
        private string _doid_vDescripcionCorta;
    
        [DataMember]
        public string doid_vDescripcionLarga
        {
            get { return _doid_vDescripcionLarga; }
            set
            {
                if (_doid_vDescripcionLarga != value)
                {
                    _doid_vDescripcionLarga = value;
                    OnPropertyChanged("doid_vDescripcionLarga");
                }
            }
        }
        private string _doid_vDescripcionLarga;
    
        [DataMember]
        public string doid_cEstado
        {
            get { return _doid_cEstado; }
            set
            {
                if (_doid_cEstado != value)
                {
                    _doid_cEstado = value;
                    OnPropertyChanged("doid_cEstado");
                }
            }
        }
        private string _doid_cEstado;
    
        [DataMember]
        public short doid_sUsuarioCreacion
        {
            get { return _doid_sUsuarioCreacion; }
            set
            {
                if (_doid_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("doid_sUsuarioCreacion", _doid_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _doid_sUsuarioCreacion = value;
                    OnPropertyChanged("doid_sUsuarioCreacion");
                }
            }
        }
        private short _doid_sUsuarioCreacion;
    
        [DataMember]
        public string doid_vIPCreacion
        {
            get { return _doid_vIPCreacion; }
            set
            {
                if (_doid_vIPCreacion != value)
                {
                    _doid_vIPCreacion = value;
                    OnPropertyChanged("doid_vIPCreacion");
                }
            }
        }
        private string _doid_vIPCreacion;
    
        [DataMember]
        public System.DateTime doid_dFechaCreacion
        {
            get { return _doid_dFechaCreacion; }
            set
            {
                if (_doid_dFechaCreacion != value)
                {
                    _doid_dFechaCreacion = value;
                    OnPropertyChanged("doid_dFechaCreacion");
                }
            }
        }
        private System.DateTime _doid_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> doid_sUsuarioModificacion
        {
            get { return _doid_sUsuarioModificacion; }
            set
            {
                if (_doid_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("doid_sUsuarioModificacion", _doid_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _doid_sUsuarioModificacion = value;
                    OnPropertyChanged("doid_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _doid_sUsuarioModificacion;
    
        [DataMember]
        public string doid_vIPModificacion
        {
            get { return _doid_vIPModificacion; }
            set
            {
                if (_doid_vIPModificacion != value)
                {
                    _doid_vIPModificacion = value;
                    OnPropertyChanged("doid_vIPModificacion");
                }
            }
        }
        private string _doid_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> doid_dFechaModificacion
        {
            get { return _doid_dFechaModificacion; }
            set
            {
                if (_doid_dFechaModificacion != value)
                {
                    _doid_dFechaModificacion = value;
                    OnPropertyChanged("doid_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _doid_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIO> RE_ACTOMIGRATORIO
        {
            get
            {
                if (_rE_ACTOMIGRATORIO == null)
                {
                    _rE_ACTOMIGRATORIO = new TrackableCollection<RE_ACTOMIGRATORIO>();
                    _rE_ACTOMIGRATORIO.CollectionChanged += FixupRE_ACTOMIGRATORIO;
                }
                return _rE_ACTOMIGRATORIO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIO != null)
                    {
                        _rE_ACTOMIGRATORIO.CollectionChanged -= FixupRE_ACTOMIGRATORIO;
                    }
                    _rE_ACTOMIGRATORIO = value;
                    if (_rE_ACTOMIGRATORIO != null)
                    {
                        _rE_ACTOMIGRATORIO.CollectionChanged += FixupRE_ACTOMIGRATORIO;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIO");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIO> _rE_ACTOMIGRATORIO;
    
        [DataMember]
        public TrackableCollection<RE_PERSONAIDENTIFICACION> RE_PERSONAIDENTIFICACION
        {
            get
            {
                if (_rE_PERSONAIDENTIFICACION == null)
                {
                    _rE_PERSONAIDENTIFICACION = new TrackableCollection<RE_PERSONAIDENTIFICACION>();
                    _rE_PERSONAIDENTIFICACION.CollectionChanged += FixupRE_PERSONAIDENTIFICACION;
                }
                return _rE_PERSONAIDENTIFICACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONAIDENTIFICACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONAIDENTIFICACION != null)
                    {
                        _rE_PERSONAIDENTIFICACION.CollectionChanged -= FixupRE_PERSONAIDENTIFICACION;
                    }
                    _rE_PERSONAIDENTIFICACION = value;
                    if (_rE_PERSONAIDENTIFICACION != null)
                    {
                        _rE_PERSONAIDENTIFICACION.CollectionChanged += FixupRE_PERSONAIDENTIFICACION;
                    }
                    OnNavigationPropertyChanged("RE_PERSONAIDENTIFICACION");
                }
            }
        }
        private TrackableCollection<RE_PERSONAIDENTIFICACION> _rE_PERSONAIDENTIFICACION;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public TrackableCollection<SE_USUARIO> SE_USUARIO2
        {
            get
            {
                if (_sE_USUARIO2 == null)
                {
                    _sE_USUARIO2 = new TrackableCollection<SE_USUARIO>();
                    _sE_USUARIO2.CollectionChanged += FixupSE_USUARIO2;
                }
                return _sE_USUARIO2;
            }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_USUARIO2 != null)
                    {
                        _sE_USUARIO2.CollectionChanged -= FixupSE_USUARIO2;
                    }
                    _sE_USUARIO2 = value;
                    if (_sE_USUARIO2 != null)
                    {
                        _sE_USUARIO2.CollectionChanged += FixupSE_USUARIO2;
                    }
                    OnNavigationPropertyChanged("SE_USUARIO2");
                }
            }
        }
        private TrackableCollection<SE_USUARIO> _sE_USUARIO2;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            RE_ACTOMIGRATORIO.Clear();
            RE_PERSONAIDENTIFICACION.Clear();
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SE_USUARIO2.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MA_DOCUMENTO_IDENTIDAD.Contains(this))
            {
                previousValue.MA_DOCUMENTO_IDENTIDAD.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.MA_DOCUMENTO_IDENTIDAD.Contains(this))
                {
                    SE_USUARIO.MA_DOCUMENTO_IDENTIDAD.Add(this);
                }
    
                doid_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MA_DOCUMENTO_IDENTIDAD1.Contains(this))
            {
                previousValue.MA_DOCUMENTO_IDENTIDAD1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.MA_DOCUMENTO_IDENTIDAD1.Contains(this))
                {
                    SE_USUARIO1.MA_DOCUMENTO_IDENTIDAD1.Add(this);
                }
    
                doid_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                doid_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.NewItems)
                {
                    item.MA_DOCUMENTO_IDENTIDAD = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_DOCUMENTO_IDENTIDAD, this))
                    {
                        item.MA_DOCUMENTO_IDENTIDAD = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIO", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONAIDENTIFICACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONAIDENTIFICACION item in e.NewItems)
                {
                    item.MA_DOCUMENTO_IDENTIDAD = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONAIDENTIFICACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONAIDENTIFICACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_DOCUMENTO_IDENTIDAD, this))
                    {
                        item.MA_DOCUMENTO_IDENTIDAD = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONAIDENTIFICACION", item);
                    }
                }
            }
        }
    
        private void FixupSE_USUARIO2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_USUARIO item in e.NewItems)
                {
                    item.MA_DOCUMENTO_IDENTIDAD2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_USUARIO2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_USUARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_DOCUMENTO_IDENTIDAD2, this))
                    {
                        item.MA_DOCUMENTO_IDENTIDAD2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_USUARIO2", item);
                    }
                }
            }
        }

        #endregion
    }
}
