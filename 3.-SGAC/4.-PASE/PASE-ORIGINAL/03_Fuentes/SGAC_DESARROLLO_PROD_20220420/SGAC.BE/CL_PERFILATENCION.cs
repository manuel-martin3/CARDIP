//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    public partial class CL_PERFILATENCION: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int peat_IPerfilId
        {
            get { return _peat_IPerfilId; }
            set
            {
                if (_peat_IPerfilId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'peat_IPerfilId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _peat_IPerfilId = value;
                    OnPropertyChanged("peat_IPerfilId");
                }
            }
        }
        private int _peat_IPerfilId;
    
        [DataMember]
        public Nullable<short> peat_sOficinaConsularId
        {
            get { return _peat_sOficinaConsularId; }
            set
            {
                if (_peat_sOficinaConsularId != value)
                {
                    ChangeTracker.RecordOriginalValue("peat_sOficinaConsularId", _peat_sOficinaConsularId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR != null && SI_OFICINACONSULAR.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR = null;
                        }
                    }
                    _peat_sOficinaConsularId = value;
                    OnPropertyChanged("peat_sOficinaConsularId");
                }
            }
        }
        private Nullable<short> _peat_sOficinaConsularId;
    
        [DataMember]
        public string peat_vDescripcion
        {
            get { return _peat_vDescripcion; }
            set
            {
                if (_peat_vDescripcion != value)
                {
                    _peat_vDescripcion = value;
                    OnPropertyChanged("peat_vDescripcion");
                }
            }
        }
        private string _peat_vDescripcion;
    
        [DataMember]
        public Nullable<int> peat_INumeroTicket
        {
            get { return _peat_INumeroTicket; }
            set
            {
                if (_peat_INumeroTicket != value)
                {
                    _peat_INumeroTicket = value;
                    OnPropertyChanged("peat_INumeroTicket");
                }
            }
        }
        private Nullable<int> _peat_INumeroTicket;
    
        [DataMember]
        public Nullable<System.TimeSpan> peat_ITiempoAtencion
        {
            get { return _peat_ITiempoAtencion; }
            set
            {
                if (_peat_ITiempoAtencion != value)
                {
                    _peat_ITiempoAtencion = value;
                    OnPropertyChanged("peat_ITiempoAtencion");
                }
            }
        }
        private Nullable<System.TimeSpan> _peat_ITiempoAtencion;
    
        [DataMember]
        public string peat_cEstado
        {
            get { return _peat_cEstado; }
            set
            {
                if (_peat_cEstado != value)
                {
                    _peat_cEstado = value;
                    OnPropertyChanged("peat_cEstado");
                }
            }
        }
        private string _peat_cEstado;
    
        [DataMember]
        public short peat_sUsuarioCreacion
        {
            get { return _peat_sUsuarioCreacion; }
            set
            {
                if (_peat_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("peat_sUsuarioCreacion", _peat_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _peat_sUsuarioCreacion = value;
                    OnPropertyChanged("peat_sUsuarioCreacion");
                }
            }
        }
        private short _peat_sUsuarioCreacion;
    
        [DataMember]
        public string peat_vIPCreacion
        {
            get { return _peat_vIPCreacion; }
            set
            {
                if (_peat_vIPCreacion != value)
                {
                    _peat_vIPCreacion = value;
                    OnPropertyChanged("peat_vIPCreacion");
                }
            }
        }
        private string _peat_vIPCreacion;
    
        [DataMember]
        public System.DateTime peat_dFechaCreacion
        {
            get { return _peat_dFechaCreacion; }
            set
            {
                if (_peat_dFechaCreacion != value)
                {
                    _peat_dFechaCreacion = value;
                    OnPropertyChanged("peat_dFechaCreacion");
                }
            }
        }
        private System.DateTime _peat_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> peat_sUsuarioModificacion
        {
            get { return _peat_sUsuarioModificacion; }
            set
            {
                if (_peat_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("peat_sUsuarioModificacion", _peat_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _peat_sUsuarioModificacion = value;
                    OnPropertyChanged("peat_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _peat_sUsuarioModificacion;
    
        [DataMember]
        public string peat_vIPModificacion
        {
            get { return _peat_vIPModificacion; }
            set
            {
                if (_peat_vIPModificacion != value)
                {
                    _peat_vIPModificacion = value;
                    OnPropertyChanged("peat_vIPModificacion");
                }
            }
        }
        private string _peat_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> peat_dFechaModificacion
        {
            get { return _peat_dFechaModificacion; }
            set
            {
                if (_peat_dFechaModificacion != value)
                {
                    _peat_dFechaModificacion = value;
                    OnPropertyChanged("peat_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _peat_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR
        {
            get { return _sI_OFICINACONSULAR; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    var previousValue = _sI_OFICINACONSULAR;
                    _sI_OFICINACONSULAR = value;
                    FixupSI_OFICINACONSULAR(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_OFICINACONSULAR = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_PERFILATENCION.Contains(this))
            {
                previousValue.CL_PERFILATENCION.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.CL_PERFILATENCION.Contains(this))
                {
                    SE_USUARIO.CL_PERFILATENCION.Add(this);
                }
    
                peat_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_PERFILATENCION1.Contains(this))
            {
                previousValue.CL_PERFILATENCION1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.CL_PERFILATENCION1.Contains(this))
                {
                    SE_USUARIO1.CL_PERFILATENCION1.Add(this);
                }
    
                peat_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                peat_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(SI_OFICINACONSULAR previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_PERFILATENCION.Contains(this))
            {
                previousValue.CL_PERFILATENCION.Remove(this);
            }
    
            if (SI_OFICINACONSULAR != null)
            {
                if (!SI_OFICINACONSULAR.CL_PERFILATENCION.Contains(this))
                {
                    SI_OFICINACONSULAR.CL_PERFILATENCION.Add(this);
                }
    
                peat_sOficinaConsularId = SI_OFICINACONSULAR.ofco_sOficinaConsularId;
            }
            else if (!skipKeys)
            {
                peat_sOficinaConsularId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR"] == SI_OFICINACONSULAR))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR", previousValue);
                }
                if (SI_OFICINACONSULAR != null && !SI_OFICINACONSULAR.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR.StartTracking();
                }
            }
        }

        #endregion
    }
}
