//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(RE_ACTONOTARIAL))]
    public partial class RE_ACTONOTARIALDOCUMENTO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long ando_iActoNotarialDocumentoId
        {
            get { return _ando_iActoNotarialDocumentoId; }
            set
            {
                if (_ando_iActoNotarialDocumentoId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ando_iActoNotarialDocumentoId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ando_iActoNotarialDocumentoId = value;
                    OnPropertyChanged("ando_iActoNotarialDocumentoId");
                }
            }
        }
        private long _ando_iActoNotarialDocumentoId;
    
        [DataMember]
        public long ando_iActoNotarialId
        {
            get { return _ando_iActoNotarialId; }
            set
            {
                if (_ando_iActoNotarialId != value)
                {
                    ChangeTracker.RecordOriginalValue("ando_iActoNotarialId", _ando_iActoNotarialId);
                    if (!IsDeserializing)
                    {
                        if (RE_ACTONOTARIAL != null && RE_ACTONOTARIAL.acno_iActoNotarialId != value)
                        {
                            RE_ACTONOTARIAL = null;
                        }
                    }
                    _ando_iActoNotarialId = value;
                    OnPropertyChanged("ando_iActoNotarialId");
                }
            }
        }
        private long _ando_iActoNotarialId;
    
        [DataMember]
        public short ando_sTipoDocumentoId
        {
            get { return _ando_sTipoDocumentoId; }
            set
            {
                if (_ando_sTipoDocumentoId != value)
                {
                    ChangeTracker.RecordOriginalValue("ando_sTipoDocumentoId", _ando_sTipoDocumentoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _ando_sTipoDocumentoId = value;
                    OnPropertyChanged("ando_sTipoDocumentoId");
                }
            }
        }
        private short _ando_sTipoDocumentoId;
    
        [DataMember]
        public Nullable<short> ando_sTipoInformacionId
        {
            get { return _ando_sTipoInformacionId; }
            set
            {
                if (_ando_sTipoInformacionId != value)
                {
                    ChangeTracker.RecordOriginalValue("ando_sTipoInformacionId", _ando_sTipoInformacionId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                        if (SI_PARAMETRO2 != null && SI_PARAMETRO2.para_sParametroId != value)
                        {
                            SI_PARAMETRO2 = null;
                        }
                    }
                    _ando_sTipoInformacionId = value;
                    OnPropertyChanged("ando_sTipoInformacionId");
                }
            }
        }
        private Nullable<short> _ando_sTipoInformacionId;
    
        [DataMember]
        public Nullable<short> ando_sSubTipoInformacionId
        {
            get { return _ando_sSubTipoInformacionId; }
            set
            {
                if (_ando_sSubTipoInformacionId != value)
                {
                    ChangeTracker.RecordOriginalValue("ando_sSubTipoInformacionId", _ando_sSubTipoInformacionId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO3 != null && SI_PARAMETRO3.para_sParametroId != value)
                        {
                            SI_PARAMETRO3 = null;
                        }
                    }
                    _ando_sSubTipoInformacionId = value;
                    OnPropertyChanged("ando_sSubTipoInformacionId");
                }
            }
        }
        private Nullable<short> _ando_sSubTipoInformacionId;
    
        [DataMember]
        public string ando_vDescripcion
        {
            get { return _ando_vDescripcion; }
            set
            {
                if (_ando_vDescripcion != value)
                {
                    _ando_vDescripcion = value;
                    OnPropertyChanged("ando_vDescripcion");
                }
            }
        }
        private string _ando_vDescripcion;
    
        [DataMember]
        public string ando_vDetalleDocumento
        {
            get { return _ando_vDetalleDocumento; }
            set
            {
                if (_ando_vDetalleDocumento != value)
                {
                    _ando_vDetalleDocumento = value;
                    OnPropertyChanged("ando_vDetalleDocumento");
                }
            }
        }
        private string _ando_vDetalleDocumento;
    
        [DataMember]
        public string ando_vRutaArchivo
        {
            get { return _ando_vRutaArchivo; }
            set
            {
                if (_ando_vRutaArchivo != value)
                {
                    _ando_vRutaArchivo = value;
                    OnPropertyChanged("ando_vRutaArchivo");
                }
            }
        }
        private string _ando_vRutaArchivo;
    
        [DataMember]
        public string ando_cEstado
        {
            get { return _ando_cEstado; }
            set
            {
                if (_ando_cEstado != value)
                {
                    _ando_cEstado = value;
                    OnPropertyChanged("ando_cEstado");
                }
            }
        }
        private string _ando_cEstado;
    
        [DataMember]
        public short ando_sUsuarioCreacion
        {
            get { return _ando_sUsuarioCreacion; }
            set
            {
                if (_ando_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("ando_sUsuarioCreacion", _ando_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _ando_sUsuarioCreacion = value;
                    OnPropertyChanged("ando_sUsuarioCreacion");
                }
            }
        }
        private short _ando_sUsuarioCreacion;
    
        [DataMember]
        public string ando_vIPCreacion
        {
            get { return _ando_vIPCreacion; }
            set
            {
                if (_ando_vIPCreacion != value)
                {
                    _ando_vIPCreacion = value;
                    OnPropertyChanged("ando_vIPCreacion");
                }
            }
        }
        private string _ando_vIPCreacion;
    
        [DataMember]
        public System.DateTime ando_dFechaCreacion
        {
            get { return _ando_dFechaCreacion; }
            set
            {
                if (_ando_dFechaCreacion != value)
                {
                    _ando_dFechaCreacion = value;
                    OnPropertyChanged("ando_dFechaCreacion");
                }
            }
        }
        private System.DateTime _ando_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> ando_sUsuarioModificacion
        {
            get { return _ando_sUsuarioModificacion; }
            set
            {
                if (_ando_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("ando_sUsuarioModificacion", _ando_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _ando_sUsuarioModificacion = value;
                    OnPropertyChanged("ando_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _ando_sUsuarioModificacion;
    
        [DataMember]
        public string ando_vIPModificacion
        {
            get { return _ando_vIPModificacion; }
            set
            {
                if (_ando_vIPModificacion != value)
                {
                    _ando_vIPModificacion = value;
                    OnPropertyChanged("ando_vIPModificacion");
                }
            }
        }
        private string _ando_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> ando_dFechaModificacion
        {
            get { return _ando_dFechaModificacion; }
            set
            {
                if (_ando_dFechaModificacion != value)
                {
                    _ando_dFechaModificacion = value;
                    OnPropertyChanged("ando_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _ando_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO2
        {
            get { return _sI_PARAMETRO2; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO2, value))
                {
                    var previousValue = _sI_PARAMETRO2;
                    _sI_PARAMETRO2 = value;
                    FixupSI_PARAMETRO2(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO2");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO2;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO3
        {
            get { return _sI_PARAMETRO3; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO3, value))
                {
                    var previousValue = _sI_PARAMETRO3;
                    _sI_PARAMETRO3 = value;
                    FixupSI_PARAMETRO3(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO3");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO3;
    
        [DataMember]
        public RE_ACTONOTARIAL RE_ACTONOTARIAL
        {
            get { return _rE_ACTONOTARIAL; }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIAL, value))
                {
                    var previousValue = _rE_ACTONOTARIAL;
                    _rE_ACTONOTARIAL = value;
                    FixupRE_ACTONOTARIAL(previousValue);
                    OnNavigationPropertyChanged("RE_ACTONOTARIAL");
                }
            }
        }
        private RE_ACTONOTARIAL _rE_ACTONOTARIAL;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            SI_PARAMETRO2 = null;
            SI_PARAMETRO3 = null;
            RE_ACTONOTARIAL = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIALDOCUMENTO.Contains(this))
            {
                previousValue.RE_ACTONOTARIALDOCUMENTO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_ACTONOTARIALDOCUMENTO.Contains(this))
                {
                    SE_USUARIO.RE_ACTONOTARIALDOCUMENTO.Add(this);
                }
    
                ando_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIALDOCUMENTO1.Contains(this))
            {
                previousValue.RE_ACTONOTARIALDOCUMENTO1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_ACTONOTARIALDOCUMENTO1.Contains(this))
                {
                    SE_USUARIO1.RE_ACTONOTARIALDOCUMENTO1.Add(this);
                }
    
                ando_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                ando_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIALDOCUMENTO.Contains(this))
            {
                previousValue.RE_ACTONOTARIALDOCUMENTO.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.RE_ACTONOTARIALDOCUMENTO.Contains(this))
                {
                    SI_PARAMETRO.RE_ACTONOTARIALDOCUMENTO.Add(this);
                }
    
                ando_sTipoDocumentoId = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIALDOCUMENTO1.Contains(this))
            {
                previousValue.RE_ACTONOTARIALDOCUMENTO1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.RE_ACTONOTARIALDOCUMENTO1.Contains(this))
                {
                    SI_PARAMETRO1.RE_ACTONOTARIALDOCUMENTO1.Add(this);
                }
    
                ando_sTipoInformacionId = SI_PARAMETRO1.para_sParametroId;
            }
            else if (!skipKeys)
            {
                ando_sTipoInformacionId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO2(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIALDOCUMENTO2.Contains(this))
            {
                previousValue.RE_ACTONOTARIALDOCUMENTO2.Remove(this);
            }
    
            if (SI_PARAMETRO2 != null)
            {
                if (!SI_PARAMETRO2.RE_ACTONOTARIALDOCUMENTO2.Contains(this))
                {
                    SI_PARAMETRO2.RE_ACTONOTARIALDOCUMENTO2.Add(this);
                }
    
                ando_sTipoInformacionId = SI_PARAMETRO2.para_sParametroId;
            }
            else if (!skipKeys)
            {
                ando_sTipoInformacionId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO2")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO2"] == SI_PARAMETRO2))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO2", previousValue);
                }
                if (SI_PARAMETRO2 != null && !SI_PARAMETRO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO2.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO3(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIALDOCUMENTO3.Contains(this))
            {
                previousValue.RE_ACTONOTARIALDOCUMENTO3.Remove(this);
            }
    
            if (SI_PARAMETRO3 != null)
            {
                if (!SI_PARAMETRO3.RE_ACTONOTARIALDOCUMENTO3.Contains(this))
                {
                    SI_PARAMETRO3.RE_ACTONOTARIALDOCUMENTO3.Add(this);
                }
    
                ando_sSubTipoInformacionId = SI_PARAMETRO3.para_sParametroId;
            }
            else if (!skipKeys)
            {
                ando_sSubTipoInformacionId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO3")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO3"] == SI_PARAMETRO3))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO3", previousValue);
                }
                if (SI_PARAMETRO3 != null && !SI_PARAMETRO3.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO3.StartTracking();
                }
            }
        }
    
        private void FixupRE_ACTONOTARIAL(RE_ACTONOTARIAL previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIALDOCUMENTO.Contains(this))
            {
                previousValue.RE_ACTONOTARIALDOCUMENTO.Remove(this);
            }
    
            if (RE_ACTONOTARIAL != null)
            {
                if (!RE_ACTONOTARIAL.RE_ACTONOTARIALDOCUMENTO.Contains(this))
                {
                    RE_ACTONOTARIAL.RE_ACTONOTARIALDOCUMENTO.Add(this);
                }
    
                ando_iActoNotarialId = RE_ACTONOTARIAL.acno_iActoNotarialId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_ACTONOTARIAL")
                    && (ChangeTracker.OriginalValues["RE_ACTONOTARIAL"] == RE_ACTONOTARIAL))
                {
                    ChangeTracker.OriginalValues.Remove("RE_ACTONOTARIAL");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_ACTONOTARIAL", previousValue);
                }
                if (RE_ACTONOTARIAL != null && !RE_ACTONOTARIAL.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_ACTONOTARIAL.StartTracking();
                }
            }
        }

        #endregion
    }
}
