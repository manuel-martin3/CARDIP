//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CL_SERVICIO))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(CL_TICKET))]
    [KnownType(typeof(CL_VENTANILLASERVICIO))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    public partial class CL_SERVICIO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short serv_sServicioId
        {
            get { return _serv_sServicioId; }
            set
            {
                if (_serv_sServicioId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'serv_sServicioId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _serv_sServicioId = value;
                    OnPropertyChanged("serv_sServicioId");
                }
            }
        }
        private short _serv_sServicioId;
    
        [DataMember]
        public Nullable<short> serv_sOficinaConsularId
        {
            get { return _serv_sOficinaConsularId; }
            set
            {
                if (_serv_sOficinaConsularId != value)
                {
                    ChangeTracker.RecordOriginalValue("serv_sOficinaConsularId", _serv_sOficinaConsularId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR != null && SI_OFICINACONSULAR.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR = null;
                        }
                    }
                    _serv_sOficinaConsularId = value;
                    OnPropertyChanged("serv_sOficinaConsularId");
                }
            }
        }
        private Nullable<short> _serv_sOficinaConsularId;
    
        [DataMember]
        public string serv_vDescripcion
        {
            get { return _serv_vDescripcion; }
            set
            {
                if (_serv_vDescripcion != value)
                {
                    _serv_vDescripcion = value;
                    OnPropertyChanged("serv_vDescripcion");
                }
            }
        }
        private string _serv_vDescripcion;
    
        [DataMember]
        public Nullable<int> serv_IOrden
        {
            get { return _serv_IOrden; }
            set
            {
                if (_serv_IOrden != value)
                {
                    _serv_IOrden = value;
                    OnPropertyChanged("serv_IOrden");
                }
            }
        }
        private Nullable<int> _serv_IOrden;
    
        [DataMember]
        public Nullable<short> serv_sServicioIdCab
        {
            get { return _serv_sServicioIdCab; }
            set
            {
                if (_serv_sServicioIdCab != value)
                {
                    ChangeTracker.RecordOriginalValue("serv_sServicioIdCab", _serv_sServicioIdCab);
                    if (!IsDeserializing)
                    {
                        if (CL_SERVICIO2 != null && CL_SERVICIO2.serv_sServicioId != value)
                        {
                            CL_SERVICIO2 = null;
                        }
                    }
                    _serv_sServicioIdCab = value;
                    OnPropertyChanged("serv_sServicioIdCab");
                }
            }
        }
        private Nullable<short> _serv_sServicioIdCab;
    
        [DataMember]
        public Nullable<short> serv_sTipo
        {
            get { return _serv_sTipo; }
            set
            {
                if (_serv_sTipo != value)
                {
                    ChangeTracker.RecordOriginalValue("serv_sTipo", _serv_sTipo);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _serv_sTipo = value;
                    OnPropertyChanged("serv_sTipo");
                }
            }
        }
        private Nullable<short> _serv_sTipo;
    
        [DataMember]
        public string serv_cEstado
        {
            get { return _serv_cEstado; }
            set
            {
                if (_serv_cEstado != value)
                {
                    _serv_cEstado = value;
                    OnPropertyChanged("serv_cEstado");
                }
            }
        }
        private string _serv_cEstado;
    
        [DataMember]
        public short serv_sUsuarioCreacion
        {
            get { return _serv_sUsuarioCreacion; }
            set
            {
                if (_serv_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("serv_sUsuarioCreacion", _serv_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _serv_sUsuarioCreacion = value;
                    OnPropertyChanged("serv_sUsuarioCreacion");
                }
            }
        }
        private short _serv_sUsuarioCreacion;
    
        [DataMember]
        public string serv_vIPCreacion
        {
            get { return _serv_vIPCreacion; }
            set
            {
                if (_serv_vIPCreacion != value)
                {
                    _serv_vIPCreacion = value;
                    OnPropertyChanged("serv_vIPCreacion");
                }
            }
        }
        private string _serv_vIPCreacion;
    
        [DataMember]
        public System.DateTime serv_dFechaCreacion
        {
            get { return _serv_dFechaCreacion; }
            set
            {
                if (_serv_dFechaCreacion != value)
                {
                    _serv_dFechaCreacion = value;
                    OnPropertyChanged("serv_dFechaCreacion");
                }
            }
        }
        private System.DateTime _serv_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> serv_sUsuarioModificacion
        {
            get { return _serv_sUsuarioModificacion; }
            set
            {
                if (_serv_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("serv_sUsuarioModificacion", _serv_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _serv_sUsuarioModificacion = value;
                    OnPropertyChanged("serv_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _serv_sUsuarioModificacion;
    
        [DataMember]
        public string serv_vIPModificacion
        {
            get { return _serv_vIPModificacion; }
            set
            {
                if (_serv_vIPModificacion != value)
                {
                    _serv_vIPModificacion = value;
                    OnPropertyChanged("serv_vIPModificacion");
                }
            }
        }
        private string _serv_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> serv_dFechaModificacion
        {
            get { return _serv_dFechaModificacion; }
            set
            {
                if (_serv_dFechaModificacion != value)
                {
                    _serv_dFechaModificacion = value;
                    OnPropertyChanged("serv_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _serv_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<CL_SERVICIO> CL_SERVICIO1
        {
            get
            {
                if (_cL_SERVICIO1 == null)
                {
                    _cL_SERVICIO1 = new TrackableCollection<CL_SERVICIO>();
                    _cL_SERVICIO1.CollectionChanged += FixupCL_SERVICIO1;
                }
                return _cL_SERVICIO1;
            }
            set
            {
                if (!ReferenceEquals(_cL_SERVICIO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_SERVICIO1 != null)
                    {
                        _cL_SERVICIO1.CollectionChanged -= FixupCL_SERVICIO1;
                    }
                    _cL_SERVICIO1 = value;
                    if (_cL_SERVICIO1 != null)
                    {
                        _cL_SERVICIO1.CollectionChanged += FixupCL_SERVICIO1;
                    }
                    OnNavigationPropertyChanged("CL_SERVICIO1");
                }
            }
        }
        private TrackableCollection<CL_SERVICIO> _cL_SERVICIO1;
    
        [DataMember]
        public CL_SERVICIO CL_SERVICIO2
        {
            get { return _cL_SERVICIO2; }
            set
            {
                if (!ReferenceEquals(_cL_SERVICIO2, value))
                {
                    var previousValue = _cL_SERVICIO2;
                    _cL_SERVICIO2 = value;
                    FixupCL_SERVICIO2(previousValue);
                    OnNavigationPropertyChanged("CL_SERVICIO2");
                }
            }
        }
        private CL_SERVICIO _cL_SERVICIO2;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public TrackableCollection<CL_TICKET> CL_TICKET
        {
            get
            {
                if (_cL_TICKET == null)
                {
                    _cL_TICKET = new TrackableCollection<CL_TICKET>();
                    _cL_TICKET.CollectionChanged += FixupCL_TICKET;
                }
                return _cL_TICKET;
            }
            set
            {
                if (!ReferenceEquals(_cL_TICKET, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_TICKET != null)
                    {
                        _cL_TICKET.CollectionChanged -= FixupCL_TICKET;
                    }
                    _cL_TICKET = value;
                    if (_cL_TICKET != null)
                    {
                        _cL_TICKET.CollectionChanged += FixupCL_TICKET;
                    }
                    OnNavigationPropertyChanged("CL_TICKET");
                }
            }
        }
        private TrackableCollection<CL_TICKET> _cL_TICKET;
    
        [DataMember]
        public TrackableCollection<CL_VENTANILLASERVICIO> CL_VENTANILLASERVICIO
        {
            get
            {
                if (_cL_VENTANILLASERVICIO == null)
                {
                    _cL_VENTANILLASERVICIO = new TrackableCollection<CL_VENTANILLASERVICIO>();
                    _cL_VENTANILLASERVICIO.CollectionChanged += FixupCL_VENTANILLASERVICIO;
                }
                return _cL_VENTANILLASERVICIO;
            }
            set
            {
                if (!ReferenceEquals(_cL_VENTANILLASERVICIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_VENTANILLASERVICIO != null)
                    {
                        _cL_VENTANILLASERVICIO.CollectionChanged -= FixupCL_VENTANILLASERVICIO;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (CL_VENTANILLASERVICIO item in _cL_VENTANILLASERVICIO)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _cL_VENTANILLASERVICIO = value;
                    if (_cL_VENTANILLASERVICIO != null)
                    {
                        _cL_VENTANILLASERVICIO.CollectionChanged += FixupCL_VENTANILLASERVICIO;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (CL_VENTANILLASERVICIO item in _cL_VENTANILLASERVICIO)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("CL_VENTANILLASERVICIO");
                }
            }
        }
        private TrackableCollection<CL_VENTANILLASERVICIO> _cL_VENTANILLASERVICIO;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR
        {
            get { return _sI_OFICINACONSULAR; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    var previousValue = _sI_OFICINACONSULAR;
                    _sI_OFICINACONSULAR = value;
                    FixupSI_OFICINACONSULAR(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CL_SERVICIO1.Clear();
            CL_SERVICIO2 = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            CL_TICKET.Clear();
            CL_VENTANILLASERVICIO.Clear();
            SI_OFICINACONSULAR = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupCL_SERVICIO2(CL_SERVICIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_SERVICIO1.Contains(this))
            {
                previousValue.CL_SERVICIO1.Remove(this);
            }
    
            if (CL_SERVICIO2 != null)
            {
                if (!CL_SERVICIO2.CL_SERVICIO1.Contains(this))
                {
                    CL_SERVICIO2.CL_SERVICIO1.Add(this);
                }
    
                serv_sServicioIdCab = CL_SERVICIO2.serv_sServicioId;
            }
            else if (!skipKeys)
            {
                serv_sServicioIdCab = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CL_SERVICIO2")
                    && (ChangeTracker.OriginalValues["CL_SERVICIO2"] == CL_SERVICIO2))
                {
                    ChangeTracker.OriginalValues.Remove("CL_SERVICIO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CL_SERVICIO2", previousValue);
                }
                if (CL_SERVICIO2 != null && !CL_SERVICIO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    CL_SERVICIO2.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_SERVICIO.Contains(this))
            {
                previousValue.CL_SERVICIO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.CL_SERVICIO.Contains(this))
                {
                    SE_USUARIO.CL_SERVICIO.Add(this);
                }
    
                serv_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_SERVICIO1.Contains(this))
            {
                previousValue.CL_SERVICIO1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.CL_SERVICIO1.Contains(this))
                {
                    SE_USUARIO1.CL_SERVICIO1.Add(this);
                }
    
                serv_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                serv_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_SERVICIO.Contains(this))
            {
                previousValue.CL_SERVICIO.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.CL_SERVICIO.Contains(this))
                {
                    SI_PARAMETRO.CL_SERVICIO.Add(this);
                }
    
                serv_sTipo = SI_PARAMETRO.para_sParametroId;
            }
            else if (!skipKeys)
            {
                serv_sTipo = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(SI_OFICINACONSULAR previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_SERVICIO.Contains(this))
            {
                previousValue.CL_SERVICIO.Remove(this);
            }
    
            if (SI_OFICINACONSULAR != null)
            {
                if (!SI_OFICINACONSULAR.CL_SERVICIO.Contains(this))
                {
                    SI_OFICINACONSULAR.CL_SERVICIO.Add(this);
                }
    
                serv_sOficinaConsularId = SI_OFICINACONSULAR.ofco_sOficinaConsularId;
            }
            else if (!skipKeys)
            {
                serv_sOficinaConsularId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR"] == SI_OFICINACONSULAR))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR", previousValue);
                }
                if (SI_OFICINACONSULAR != null && !SI_OFICINACONSULAR.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR.StartTracking();
                }
            }
        }
    
        private void FixupCL_SERVICIO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_SERVICIO item in e.NewItems)
                {
                    item.CL_SERVICIO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_SERVICIO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_SERVICIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.CL_SERVICIO2, this))
                    {
                        item.CL_SERVICIO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_SERVICIO1", item);
                    }
                }
            }
        }
    
        private void FixupCL_TICKET(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_TICKET item in e.NewItems)
                {
                    item.CL_SERVICIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_TICKET", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_TICKET item in e.OldItems)
                {
                    if (ReferenceEquals(item.CL_SERVICIO, this))
                    {
                        item.CL_SERVICIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_TICKET", item);
                    }
                }
            }
        }
    
        private void FixupCL_VENTANILLASERVICIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_VENTANILLASERVICIO item in e.NewItems)
                {
                    item.CL_SERVICIO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_VENTANILLASERVICIO", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_VENTANILLASERVICIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.CL_SERVICIO, this))
                    {
                        item.CL_SERVICIO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_VENTANILLASERVICIO", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }

        #endregion
    }
}
