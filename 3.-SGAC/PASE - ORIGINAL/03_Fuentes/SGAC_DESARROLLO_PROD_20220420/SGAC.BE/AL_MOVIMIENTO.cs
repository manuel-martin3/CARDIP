//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AL_INSUMO))]
    [KnownType(typeof(MA_ESTADO))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(AL_MOVIMIENTODETALLE))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    public partial class AL_MOVIMIENTO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long movi_iMovimientoId
        {
            get { return _movi_iMovimientoId; }
            set
            {
                if (_movi_iMovimientoId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'movi_iMovimientoId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _movi_iMovimientoId = value;
                    OnPropertyChanged("movi_iMovimientoId");
                }
            }
        }
        private long _movi_iMovimientoId;
    
        [DataMember]
        public short movi_sMovimientoTipoId
        {
            get { return _movi_sMovimientoTipoId; }
            set
            {
                if (_movi_sMovimientoTipoId != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sMovimientoTipoId", _movi_sMovimientoTipoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO4 != null && SI_PARAMETRO4.para_sParametroId != value)
                        {
                            SI_PARAMETRO4 = null;
                        }
                    }
                    _movi_sMovimientoTipoId = value;
                    OnPropertyChanged("movi_sMovimientoTipoId");
                }
            }
        }
        private short _movi_sMovimientoTipoId;
    
        [DataMember]
        public Nullable<short> movi_sMovimientoMotivoId
        {
            get { return _movi_sMovimientoMotivoId; }
            set
            {
                if (_movi_sMovimientoMotivoId != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sMovimientoMotivoId", _movi_sMovimientoMotivoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _movi_sMovimientoMotivoId = value;
                    OnPropertyChanged("movi_sMovimientoMotivoId");
                }
            }
        }
        private Nullable<short> _movi_sMovimientoMotivoId;
    
        [DataMember]
        public string movi_cMovimientoCodigo
        {
            get { return _movi_cMovimientoCodigo; }
            set
            {
                if (_movi_cMovimientoCodigo != value)
                {
                    _movi_cMovimientoCodigo = value;
                    OnPropertyChanged("movi_cMovimientoCodigo");
                }
            }
        }
        private string _movi_cMovimientoCodigo;
    
        [DataMember]
        public string movi_cPedidoCodigo
        {
            get { return _movi_cPedidoCodigo; }
            set
            {
                if (_movi_cPedidoCodigo != value)
                {
                    _movi_cPedidoCodigo = value;
                    OnPropertyChanged("movi_cPedidoCodigo");
                }
            }
        }
        private string _movi_cPedidoCodigo;
    
        [DataMember]
        public Nullable<System.DateTime> movi_dFechaValija
        {
            get { return _movi_dFechaValija; }
            set
            {
                if (_movi_dFechaValija != value)
                {
                    _movi_dFechaValija = value;
                    OnPropertyChanged("movi_dFechaValija");
                }
            }
        }
        private Nullable<System.DateTime> _movi_dFechaValija;
    
        [DataMember]
        public short movi_sOficinaConsularIdOrigen
        {
            get { return _movi_sOficinaConsularIdOrigen; }
            set
            {
                if (_movi_sOficinaConsularIdOrigen != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sOficinaConsularIdOrigen", _movi_sOficinaConsularIdOrigen);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR1 != null && SI_OFICINACONSULAR1.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR1 = null;
                        }
                    }
                    _movi_sOficinaConsularIdOrigen = value;
                    OnPropertyChanged("movi_sOficinaConsularIdOrigen");
                }
            }
        }
        private short _movi_sOficinaConsularIdOrigen;
    
        [DataMember]
        public short movi_sBovedaTipoIdOrigen
        {
            get { return _movi_sBovedaTipoIdOrigen; }
            set
            {
                if (_movi_sBovedaTipoIdOrigen != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sBovedaTipoIdOrigen", _movi_sBovedaTipoIdOrigen);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO3 != null && SI_PARAMETRO3.para_sParametroId != value)
                        {
                            SI_PARAMETRO3 = null;
                        }
                    }
                    _movi_sBovedaTipoIdOrigen = value;
                    OnPropertyChanged("movi_sBovedaTipoIdOrigen");
                }
            }
        }
        private short _movi_sBovedaTipoIdOrigen;
    
        [DataMember]
        public short movi_sBodegaOrigenId
        {
            get { return _movi_sBodegaOrigenId; }
            set
            {
                if (_movi_sBodegaOrigenId != value)
                {
                    _movi_sBodegaOrigenId = value;
                    OnPropertyChanged("movi_sBodegaOrigenId");
                }
            }
        }
        private short _movi_sBodegaOrigenId;
    
        [DataMember]
        public short movi_sOficinaConsularIdDestino
        {
            get { return _movi_sOficinaConsularIdDestino; }
            set
            {
                if (_movi_sOficinaConsularIdDestino != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sOficinaConsularIdDestino", _movi_sOficinaConsularIdDestino);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR != null && SI_OFICINACONSULAR.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR = null;
                        }
                    }
                    _movi_sOficinaConsularIdDestino = value;
                    OnPropertyChanged("movi_sOficinaConsularIdDestino");
                }
            }
        }
        private short _movi_sOficinaConsularIdDestino;
    
        [DataMember]
        public short movi_sBovedaTipoIdDestino
        {
            get { return _movi_sBovedaTipoIdDestino; }
            set
            {
                if (_movi_sBovedaTipoIdDestino != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sBovedaTipoIdDestino", _movi_sBovedaTipoIdDestino);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO2 != null && SI_PARAMETRO2.para_sParametroId != value)
                        {
                            SI_PARAMETRO2 = null;
                        }
                    }
                    _movi_sBovedaTipoIdDestino = value;
                    OnPropertyChanged("movi_sBovedaTipoIdDestino");
                }
            }
        }
        private short _movi_sBovedaTipoIdDestino;
    
        [DataMember]
        public short movi_sBodegaDestinoId
        {
            get { return _movi_sBodegaDestinoId; }
            set
            {
                if (_movi_sBodegaDestinoId != value)
                {
                    _movi_sBodegaDestinoId = value;
                    OnPropertyChanged("movi_sBodegaDestinoId");
                }
            }
        }
        private short _movi_sBodegaDestinoId;
    
        [DataMember]
        public short movi_sInsumoTipoId
        {
            get { return _movi_sInsumoTipoId; }
            set
            {
                if (_movi_sInsumoTipoId != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sInsumoTipoId", _movi_sInsumoTipoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _movi_sInsumoTipoId = value;
                    OnPropertyChanged("movi_sInsumoTipoId");
                }
            }
        }
        private short _movi_sInsumoTipoId;
    
        [DataMember]
        public System.DateTime movi_dFechaRegistro
        {
            get { return _movi_dFechaRegistro; }
            set
            {
                if (_movi_dFechaRegistro != value)
                {
                    _movi_dFechaRegistro = value;
                    OnPropertyChanged("movi_dFechaRegistro");
                }
            }
        }
        private System.DateTime _movi_dFechaRegistro;
    
        [DataMember]
        public string movi_vPrefijoNumeracion
        {
            get { return _movi_vPrefijoNumeracion; }
            set
            {
                if (_movi_vPrefijoNumeracion != value)
                {
                    _movi_vPrefijoNumeracion = value;
                    OnPropertyChanged("movi_vPrefijoNumeracion");
                }
            }
        }
        private string _movi_vPrefijoNumeracion;
    
        [DataMember]
        public string movi_vActaRemision
        {
            get { return _movi_vActaRemision; }
            set
            {
                if (_movi_vActaRemision != value)
                {
                    _movi_vActaRemision = value;
                    OnPropertyChanged("movi_vActaRemision");
                }
            }
        }
        private string _movi_vActaRemision;
    
        [DataMember]
        public short movi_sEstadoId
        {
            get { return _movi_sEstadoId; }
            set
            {
                if (_movi_sEstadoId != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sEstadoId", _movi_sEstadoId);
                    if (!IsDeserializing)
                    {
                        if (MA_ESTADO != null && MA_ESTADO.esta_sEstadoId != value)
                        {
                            MA_ESTADO = null;
                        }
                    }
                    _movi_sEstadoId = value;
                    OnPropertyChanged("movi_sEstadoId");
                }
            }
        }
        private short _movi_sEstadoId;
    
        [DataMember]
        public short movi_sUsuarioCreacion
        {
            get { return _movi_sUsuarioCreacion; }
            set
            {
                if (_movi_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sUsuarioCreacion", _movi_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _movi_sUsuarioCreacion = value;
                    OnPropertyChanged("movi_sUsuarioCreacion");
                }
            }
        }
        private short _movi_sUsuarioCreacion;
    
        [DataMember]
        public string movi_vIPCreacion
        {
            get { return _movi_vIPCreacion; }
            set
            {
                if (_movi_vIPCreacion != value)
                {
                    _movi_vIPCreacion = value;
                    OnPropertyChanged("movi_vIPCreacion");
                }
            }
        }
        private string _movi_vIPCreacion;
    
        [DataMember]
        public System.DateTime movi_dFechaCreacion
        {
            get { return _movi_dFechaCreacion; }
            set
            {
                if (_movi_dFechaCreacion != value)
                {
                    _movi_dFechaCreacion = value;
                    OnPropertyChanged("movi_dFechaCreacion");
                }
            }
        }
        private System.DateTime _movi_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> movi_sUsuarioModificacion
        {
            get { return _movi_sUsuarioModificacion; }
            set
            {
                if (_movi_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("movi_sUsuarioModificacion", _movi_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _movi_sUsuarioModificacion = value;
                    OnPropertyChanged("movi_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _movi_sUsuarioModificacion;
    
        [DataMember]
        public string movi_vIPModificacion
        {
            get { return _movi_vIPModificacion; }
            set
            {
                if (_movi_vIPModificacion != value)
                {
                    _movi_vIPModificacion = value;
                    OnPropertyChanged("movi_vIPModificacion");
                }
            }
        }
        private string _movi_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> movi_dFechaModificacion
        {
            get { return _movi_dFechaModificacion; }
            set
            {
                if (_movi_dFechaModificacion != value)
                {
                    _movi_dFechaModificacion = value;
                    OnPropertyChanged("movi_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _movi_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AL_INSUMO> AL_INSUMO
        {
            get
            {
                if (_aL_INSUMO == null)
                {
                    _aL_INSUMO = new TrackableCollection<AL_INSUMO>();
                    _aL_INSUMO.CollectionChanged += FixupAL_INSUMO;
                }
                return _aL_INSUMO;
            }
            set
            {
                if (!ReferenceEquals(_aL_INSUMO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_INSUMO != null)
                    {
                        _aL_INSUMO.CollectionChanged -= FixupAL_INSUMO;
                    }
                    _aL_INSUMO = value;
                    if (_aL_INSUMO != null)
                    {
                        _aL_INSUMO.CollectionChanged += FixupAL_INSUMO;
                    }
                    OnNavigationPropertyChanged("AL_INSUMO");
                }
            }
        }
        private TrackableCollection<AL_INSUMO> _aL_INSUMO;
    
        [DataMember]
        public MA_ESTADO MA_ESTADO
        {
            get { return _mA_ESTADO; }
            set
            {
                if (!ReferenceEquals(_mA_ESTADO, value))
                {
                    var previousValue = _mA_ESTADO;
                    _mA_ESTADO = value;
                    FixupMA_ESTADO(previousValue);
                    OnNavigationPropertyChanged("MA_ESTADO");
                }
            }
        }
        private MA_ESTADO _mA_ESTADO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO2
        {
            get { return _sI_PARAMETRO2; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO2, value))
                {
                    var previousValue = _sI_PARAMETRO2;
                    _sI_PARAMETRO2 = value;
                    FixupSI_PARAMETRO2(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO2");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO2;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO3
        {
            get { return _sI_PARAMETRO3; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO3, value))
                {
                    var previousValue = _sI_PARAMETRO3;
                    _sI_PARAMETRO3 = value;
                    FixupSI_PARAMETRO3(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO3");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO3;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO4
        {
            get { return _sI_PARAMETRO4; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO4, value))
                {
                    var previousValue = _sI_PARAMETRO4;
                    _sI_PARAMETRO4 = value;
                    FixupSI_PARAMETRO4(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO4");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO4;
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTODETALLE> AL_MOVIMIENTODETALLE
        {
            get
            {
                if (_aL_MOVIMIENTODETALLE == null)
                {
                    _aL_MOVIMIENTODETALLE = new TrackableCollection<AL_MOVIMIENTODETALLE>();
                    _aL_MOVIMIENTODETALLE.CollectionChanged += FixupAL_MOVIMIENTODETALLE;
                }
                return _aL_MOVIMIENTODETALLE;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTODETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTODETALLE != null)
                    {
                        _aL_MOVIMIENTODETALLE.CollectionChanged -= FixupAL_MOVIMIENTODETALLE;
                    }
                    _aL_MOVIMIENTODETALLE = value;
                    if (_aL_MOVIMIENTODETALLE != null)
                    {
                        _aL_MOVIMIENTODETALLE.CollectionChanged += FixupAL_MOVIMIENTODETALLE;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTODETALLE");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTODETALLE> _aL_MOVIMIENTODETALLE;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR
        {
            get { return _sI_OFICINACONSULAR; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    var previousValue = _sI_OFICINACONSULAR;
                    _sI_OFICINACONSULAR = value;
                    FixupSI_OFICINACONSULAR(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR1
        {
            get { return _sI_OFICINACONSULAR1; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR1, value))
                {
                    var previousValue = _sI_OFICINACONSULAR1;
                    _sI_OFICINACONSULAR1 = value;
                    FixupSI_OFICINACONSULAR1(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR1");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR1;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AL_INSUMO.Clear();
            MA_ESTADO = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            SI_PARAMETRO2 = null;
            SI_PARAMETRO3 = null;
            SI_PARAMETRO4 = null;
            AL_MOVIMIENTODETALLE.Clear();
            SI_OFICINACONSULAR = null;
            SI_OFICINACONSULAR1 = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupMA_ESTADO(MA_ESTADO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO.Contains(this))
            {
                previousValue.AL_MOVIMIENTO.Remove(this);
            }
    
            if (MA_ESTADO != null)
            {
                if (!MA_ESTADO.AL_MOVIMIENTO.Contains(this))
                {
                    MA_ESTADO.AL_MOVIMIENTO.Add(this);
                }
    
                movi_sEstadoId = MA_ESTADO.esta_sEstadoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_ESTADO")
                    && (ChangeTracker.OriginalValues["MA_ESTADO"] == MA_ESTADO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_ESTADO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_ESTADO", previousValue);
                }
                if (MA_ESTADO != null && !MA_ESTADO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_ESTADO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO.Contains(this))
            {
                previousValue.AL_MOVIMIENTO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.AL_MOVIMIENTO.Contains(this))
                {
                    SE_USUARIO.AL_MOVIMIENTO.Add(this);
                }
    
                movi_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO1.Contains(this))
            {
                previousValue.AL_MOVIMIENTO1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.AL_MOVIMIENTO1.Contains(this))
                {
                    SE_USUARIO1.AL_MOVIMIENTO1.Add(this);
                }
    
                movi_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                movi_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO.Contains(this))
            {
                previousValue.AL_MOVIMIENTO.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.AL_MOVIMIENTO.Contains(this))
                {
                    SI_PARAMETRO.AL_MOVIMIENTO.Add(this);
                }
    
                movi_sInsumoTipoId = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO1.Contains(this))
            {
                previousValue.AL_MOVIMIENTO1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.AL_MOVIMIENTO1.Contains(this))
                {
                    SI_PARAMETRO1.AL_MOVIMIENTO1.Add(this);
                }
    
                movi_sMovimientoMotivoId = SI_PARAMETRO1.para_sParametroId;
            }
            else if (!skipKeys)
            {
                movi_sMovimientoMotivoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO2(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO2.Contains(this))
            {
                previousValue.AL_MOVIMIENTO2.Remove(this);
            }
    
            if (SI_PARAMETRO2 != null)
            {
                if (!SI_PARAMETRO2.AL_MOVIMIENTO2.Contains(this))
                {
                    SI_PARAMETRO2.AL_MOVIMIENTO2.Add(this);
                }
    
                movi_sBovedaTipoIdDestino = SI_PARAMETRO2.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO2")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO2"] == SI_PARAMETRO2))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO2", previousValue);
                }
                if (SI_PARAMETRO2 != null && !SI_PARAMETRO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO2.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO3(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO3.Contains(this))
            {
                previousValue.AL_MOVIMIENTO3.Remove(this);
            }
    
            if (SI_PARAMETRO3 != null)
            {
                if (!SI_PARAMETRO3.AL_MOVIMIENTO3.Contains(this))
                {
                    SI_PARAMETRO3.AL_MOVIMIENTO3.Add(this);
                }
    
                movi_sBovedaTipoIdOrigen = SI_PARAMETRO3.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO3")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO3"] == SI_PARAMETRO3))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO3", previousValue);
                }
                if (SI_PARAMETRO3 != null && !SI_PARAMETRO3.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO3.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO4(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO4.Contains(this))
            {
                previousValue.AL_MOVIMIENTO4.Remove(this);
            }
    
            if (SI_PARAMETRO4 != null)
            {
                if (!SI_PARAMETRO4.AL_MOVIMIENTO4.Contains(this))
                {
                    SI_PARAMETRO4.AL_MOVIMIENTO4.Add(this);
                }
    
                movi_sMovimientoTipoId = SI_PARAMETRO4.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO4")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO4"] == SI_PARAMETRO4))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO4");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO4", previousValue);
                }
                if (SI_PARAMETRO4 != null && !SI_PARAMETRO4.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO4.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(SI_OFICINACONSULAR previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO.Contains(this))
            {
                previousValue.AL_MOVIMIENTO.Remove(this);
            }
    
            if (SI_OFICINACONSULAR != null)
            {
                if (!SI_OFICINACONSULAR.AL_MOVIMIENTO.Contains(this))
                {
                    SI_OFICINACONSULAR.AL_MOVIMIENTO.Add(this);
                }
    
                movi_sOficinaConsularIdDestino = SI_OFICINACONSULAR.ofco_sOficinaConsularId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR"] == SI_OFICINACONSULAR))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR", previousValue);
                }
                if (SI_OFICINACONSULAR != null && !SI_OFICINACONSULAR.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR1(SI_OFICINACONSULAR previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.AL_MOVIMIENTO1.Contains(this))
            {
                previousValue.AL_MOVIMIENTO1.Remove(this);
            }
    
            if (SI_OFICINACONSULAR1 != null)
            {
                if (!SI_OFICINACONSULAR1.AL_MOVIMIENTO1.Contains(this))
                {
                    SI_OFICINACONSULAR1.AL_MOVIMIENTO1.Add(this);
                }
    
                movi_sOficinaConsularIdOrigen = SI_OFICINACONSULAR1.ofco_sOficinaConsularId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR1")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR1"] == SI_OFICINACONSULAR1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR1", previousValue);
                }
                if (SI_OFICINACONSULAR1 != null && !SI_OFICINACONSULAR1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR1.StartTracking();
                }
            }
        }
    
        private void FixupAL_INSUMO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_INSUMO item in e.NewItems)
                {
                    item.AL_MOVIMIENTO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_INSUMO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_INSUMO item in e.OldItems)
                {
                    if (ReferenceEquals(item.AL_MOVIMIENTO, this))
                    {
                        item.AL_MOVIMIENTO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_INSUMO", item);
                    }
                }
            }
        }
    
        private void FixupAL_MOVIMIENTODETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTODETALLE item in e.NewItems)
                {
                    item.AL_MOVIMIENTO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTODETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTODETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.AL_MOVIMIENTO, this))
                    {
                        item.AL_MOVIMIENTO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTODETALLE", item);
                    }
                }
            }
        }

        #endregion
    }
}
