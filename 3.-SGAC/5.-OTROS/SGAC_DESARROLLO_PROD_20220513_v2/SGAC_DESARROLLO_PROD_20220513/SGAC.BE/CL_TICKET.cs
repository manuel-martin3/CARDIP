//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CL_SERVICIO))]
    [KnownType(typeof(CL_TICKETERA))]
    [KnownType(typeof(CL_VENTANILLA))]
    [KnownType(typeof(MA_ESTADO))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    public partial class CL_TICKET: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long tick_iTicketId
        {
            get { return _tick_iTicketId; }
            set
            {
                if (_tick_iTicketId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'tick_iTicketId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _tick_iTicketId = value;
                    OnPropertyChanged("tick_iTicketId");
                }
            }
        }
        private long _tick_iTicketId;
    
        [DataMember]
        public Nullable<short> tick_sTipoServicioId
        {
            get { return _tick_sTipoServicioId; }
            set
            {
                if (_tick_sTipoServicioId != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sTipoServicioId", _tick_sTipoServicioId);
                    if (!IsDeserializing)
                    {
                        if (CL_SERVICIO != null && CL_SERVICIO.serv_sServicioId != value)
                        {
                            CL_SERVICIO = null;
                        }
                    }
                    _tick_sTipoServicioId = value;
                    OnPropertyChanged("tick_sTipoServicioId");
                }
            }
        }
        private Nullable<short> _tick_sTipoServicioId;
    
        [DataMember]
        public Nullable<long> tick_iPersonalId
        {
            get { return _tick_iPersonalId; }
            set
            {
                if (_tick_iPersonalId != value)
                {
                    _tick_iPersonalId = value;
                    OnPropertyChanged("tick_iPersonalId");
                }
            }
        }
        private Nullable<long> _tick_iPersonalId;
    
        [DataMember]
        public Nullable<int> tick_iNumero
        {
            get { return _tick_iNumero; }
            set
            {
                if (_tick_iNumero != value)
                {
                    _tick_iNumero = value;
                    OnPropertyChanged("tick_iNumero");
                }
            }
        }
        private Nullable<int> _tick_iNumero;
    
        [DataMember]
        public Nullable<System.DateTime> tick_dFechaHoraGeneracion
        {
            get { return _tick_dFechaHoraGeneracion; }
            set
            {
                if (_tick_dFechaHoraGeneracion != value)
                {
                    _tick_dFechaHoraGeneracion = value;
                    OnPropertyChanged("tick_dFechaHoraGeneracion");
                }
            }
        }
        private Nullable<System.DateTime> _tick_dFechaHoraGeneracion;
    
        [DataMember]
        public Nullable<System.DateTime> tick_dAtencionInicio
        {
            get { return _tick_dAtencionInicio; }
            set
            {
                if (_tick_dAtencionInicio != value)
                {
                    _tick_dAtencionInicio = value;
                    OnPropertyChanged("tick_dAtencionInicio");
                }
            }
        }
        private Nullable<System.DateTime> _tick_dAtencionInicio;
    
        [DataMember]
        public Nullable<System.DateTime> tick_dAtencionFinal
        {
            get { return _tick_dAtencionFinal; }
            set
            {
                if (_tick_dAtencionFinal != value)
                {
                    _tick_dAtencionFinal = value;
                    OnPropertyChanged("tick_dAtencionFinal");
                }
            }
        }
        private Nullable<System.DateTime> _tick_dAtencionFinal;
    
        [DataMember]
        public Nullable<short> tick_sPrioridadId
        {
            get { return _tick_sPrioridadId; }
            set
            {
                if (_tick_sPrioridadId != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sPrioridadId", _tick_sPrioridadId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _tick_sPrioridadId = value;
                    OnPropertyChanged("tick_sPrioridadId");
                }
            }
        }
        private Nullable<short> _tick_sPrioridadId;
    
        [DataMember]
        public Nullable<short> tick_sTipoCliente
        {
            get { return _tick_sTipoCliente; }
            set
            {
                if (_tick_sTipoCliente != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sTipoCliente", _tick_sTipoCliente);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO2 != null && SI_PARAMETRO2.para_sParametroId != value)
                        {
                            SI_PARAMETRO2 = null;
                        }
                    }
                    _tick_sTipoCliente = value;
                    OnPropertyChanged("tick_sTipoCliente");
                }
            }
        }
        private Nullable<short> _tick_sTipoCliente;
    
        [DataMember]
        public Nullable<short> tick_sTamanoTicket
        {
            get { return _tick_sTamanoTicket; }
            set
            {
                if (_tick_sTamanoTicket != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sTamanoTicket", _tick_sTamanoTicket);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _tick_sTamanoTicket = value;
                    OnPropertyChanged("tick_sTamanoTicket");
                }
            }
        }
        private Nullable<short> _tick_sTamanoTicket;
    
        [DataMember]
        public Nullable<short> tick_sTipoEstado
        {
            get { return _tick_sTipoEstado; }
            set
            {
                if (_tick_sTipoEstado != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sTipoEstado", _tick_sTipoEstado);
                    if (!IsDeserializing)
                    {
                        if (MA_ESTADO != null && MA_ESTADO.esta_sEstadoId != value)
                        {
                            MA_ESTADO = null;
                        }
                    }
                    _tick_sTipoEstado = value;
                    OnPropertyChanged("tick_sTipoEstado");
                }
            }
        }
        private Nullable<short> _tick_sTipoEstado;
    
        [DataMember]
        public Nullable<short> tick_sTicketeraId
        {
            get { return _tick_sTicketeraId; }
            set
            {
                if (_tick_sTicketeraId != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sTicketeraId", _tick_sTicketeraId);
                    if (!IsDeserializing)
                    {
                        if (CL_TICKETERA != null && CL_TICKETERA.tira_sTicketeraId != value)
                        {
                            CL_TICKETERA = null;
                        }
                    }
                    _tick_sTicketeraId = value;
                    OnPropertyChanged("tick_sTicketeraId");
                }
            }
        }
        private Nullable<short> _tick_sTicketeraId;
    
        [DataMember]
        public string tick_vLLamada
        {
            get { return _tick_vLLamada; }
            set
            {
                if (_tick_vLLamada != value)
                {
                    _tick_vLLamada = value;
                    OnPropertyChanged("tick_vLLamada");
                }
            }
        }
        private string _tick_vLLamada;
    
        [DataMember]
        public Nullable<short> tick_sUsuarioAtendio
        {
            get { return _tick_sUsuarioAtendio; }
            set
            {
                if (_tick_sUsuarioAtendio != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sUsuarioAtendio", _tick_sUsuarioAtendio);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _tick_sUsuarioAtendio = value;
                    OnPropertyChanged("tick_sUsuarioAtendio");
                }
            }
        }
        private Nullable<short> _tick_sUsuarioAtendio;
    
        [DataMember]
        public string tick_cEstado
        {
            get { return _tick_cEstado; }
            set
            {
                if (_tick_cEstado != value)
                {
                    _tick_cEstado = value;
                    OnPropertyChanged("tick_cEstado");
                }
            }
        }
        private string _tick_cEstado;
    
        [DataMember]
        public short tick_sUsuarioCreacion
        {
            get { return _tick_sUsuarioCreacion; }
            set
            {
                if (_tick_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sUsuarioCreacion", _tick_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _tick_sUsuarioCreacion = value;
                    OnPropertyChanged("tick_sUsuarioCreacion");
                }
            }
        }
        private short _tick_sUsuarioCreacion;
    
        [DataMember]
        public string tick_vIPCreacion
        {
            get { return _tick_vIPCreacion; }
            set
            {
                if (_tick_vIPCreacion != value)
                {
                    _tick_vIPCreacion = value;
                    OnPropertyChanged("tick_vIPCreacion");
                }
            }
        }
        private string _tick_vIPCreacion;
    
        [DataMember]
        public System.DateTime tick_dFechaCreacion
        {
            get { return _tick_dFechaCreacion; }
            set
            {
                if (_tick_dFechaCreacion != value)
                {
                    _tick_dFechaCreacion = value;
                    OnPropertyChanged("tick_dFechaCreacion");
                }
            }
        }
        private System.DateTime _tick_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> tick_sUsuarioModificacion
        {
            get { return _tick_sUsuarioModificacion; }
            set
            {
                if (_tick_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sUsuarioModificacion", _tick_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO2 != null && SE_USUARIO2.usua_sUsuarioId != value)
                        {
                            SE_USUARIO2 = null;
                        }
                    }
                    _tick_sUsuarioModificacion = value;
                    OnPropertyChanged("tick_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _tick_sUsuarioModificacion;
    
        [DataMember]
        public string tick_vIPModificacion
        {
            get { return _tick_vIPModificacion; }
            set
            {
                if (_tick_vIPModificacion != value)
                {
                    _tick_vIPModificacion = value;
                    OnPropertyChanged("tick_vIPModificacion");
                }
            }
        }
        private string _tick_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> tick_dFechaModificacion
        {
            get { return _tick_dFechaModificacion; }
            set
            {
                if (_tick_dFechaModificacion != value)
                {
                    _tick_dFechaModificacion = value;
                    OnPropertyChanged("tick_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _tick_dFechaModificacion;
    
        [DataMember]
        public Nullable<short> tick_sVentanillaId
        {
            get { return _tick_sVentanillaId; }
            set
            {
                if (_tick_sVentanillaId != value)
                {
                    ChangeTracker.RecordOriginalValue("tick_sVentanillaId", _tick_sVentanillaId);
                    if (!IsDeserializing)
                    {
                        if (CL_VENTANILLA != null && CL_VENTANILLA.vent_sVentanillaId != value)
                        {
                            CL_VENTANILLA = null;
                        }
                    }
                    _tick_sVentanillaId = value;
                    OnPropertyChanged("tick_sVentanillaId");
                }
            }
        }
        private Nullable<short> _tick_sVentanillaId;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public CL_SERVICIO CL_SERVICIO
        {
            get { return _cL_SERVICIO; }
            set
            {
                if (!ReferenceEquals(_cL_SERVICIO, value))
                {
                    var previousValue = _cL_SERVICIO;
                    _cL_SERVICIO = value;
                    FixupCL_SERVICIO(previousValue);
                    OnNavigationPropertyChanged("CL_SERVICIO");
                }
            }
        }
        private CL_SERVICIO _cL_SERVICIO;
    
        [DataMember]
        public CL_TICKETERA CL_TICKETERA
        {
            get { return _cL_TICKETERA; }
            set
            {
                if (!ReferenceEquals(_cL_TICKETERA, value))
                {
                    var previousValue = _cL_TICKETERA;
                    _cL_TICKETERA = value;
                    FixupCL_TICKETERA(previousValue);
                    OnNavigationPropertyChanged("CL_TICKETERA");
                }
            }
        }
        private CL_TICKETERA _cL_TICKETERA;
    
        [DataMember]
        public CL_VENTANILLA CL_VENTANILLA
        {
            get { return _cL_VENTANILLA; }
            set
            {
                if (!ReferenceEquals(_cL_VENTANILLA, value))
                {
                    var previousValue = _cL_VENTANILLA;
                    _cL_VENTANILLA = value;
                    FixupCL_VENTANILLA(previousValue);
                    OnNavigationPropertyChanged("CL_VENTANILLA");
                }
            }
        }
        private CL_VENTANILLA _cL_VENTANILLA;
    
        [DataMember]
        public MA_ESTADO MA_ESTADO
        {
            get { return _mA_ESTADO; }
            set
            {
                if (!ReferenceEquals(_mA_ESTADO, value))
                {
                    var previousValue = _mA_ESTADO;
                    _mA_ESTADO = value;
                    FixupMA_ESTADO(previousValue);
                    OnNavigationPropertyChanged("MA_ESTADO");
                }
            }
        }
        private MA_ESTADO _mA_ESTADO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO2
        {
            get { return _sE_USUARIO2; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO2, value))
                {
                    var previousValue = _sE_USUARIO2;
                    _sE_USUARIO2 = value;
                    FixupSE_USUARIO2(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO2");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO2;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO2
        {
            get { return _sI_PARAMETRO2; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO2, value))
                {
                    var previousValue = _sI_PARAMETRO2;
                    _sI_PARAMETRO2 = value;
                    FixupSI_PARAMETRO2(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO2");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO2;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CL_SERVICIO = null;
            CL_TICKETERA = null;
            CL_VENTANILLA = null;
            MA_ESTADO = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SE_USUARIO2 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            SI_PARAMETRO2 = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupCL_SERVICIO(CL_SERVICIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET.Contains(this))
            {
                previousValue.CL_TICKET.Remove(this);
            }
    
            if (CL_SERVICIO != null)
            {
                if (!CL_SERVICIO.CL_TICKET.Contains(this))
                {
                    CL_SERVICIO.CL_TICKET.Add(this);
                }
    
                tick_sTipoServicioId = CL_SERVICIO.serv_sServicioId;
            }
            else if (!skipKeys)
            {
                tick_sTipoServicioId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CL_SERVICIO")
                    && (ChangeTracker.OriginalValues["CL_SERVICIO"] == CL_SERVICIO))
                {
                    ChangeTracker.OriginalValues.Remove("CL_SERVICIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CL_SERVICIO", previousValue);
                }
                if (CL_SERVICIO != null && !CL_SERVICIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    CL_SERVICIO.StartTracking();
                }
            }
        }
    
        private void FixupCL_TICKETERA(CL_TICKETERA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET.Contains(this))
            {
                previousValue.CL_TICKET.Remove(this);
            }
    
            if (CL_TICKETERA != null)
            {
                if (!CL_TICKETERA.CL_TICKET.Contains(this))
                {
                    CL_TICKETERA.CL_TICKET.Add(this);
                }
    
                tick_sTicketeraId = CL_TICKETERA.tira_sTicketeraId;
            }
            else if (!skipKeys)
            {
                tick_sTicketeraId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CL_TICKETERA")
                    && (ChangeTracker.OriginalValues["CL_TICKETERA"] == CL_TICKETERA))
                {
                    ChangeTracker.OriginalValues.Remove("CL_TICKETERA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CL_TICKETERA", previousValue);
                }
                if (CL_TICKETERA != null && !CL_TICKETERA.ChangeTracker.ChangeTrackingEnabled)
                {
                    CL_TICKETERA.StartTracking();
                }
            }
        }
    
        private void FixupCL_VENTANILLA(CL_VENTANILLA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET.Contains(this))
            {
                previousValue.CL_TICKET.Remove(this);
            }
    
            if (CL_VENTANILLA != null)
            {
                if (!CL_VENTANILLA.CL_TICKET.Contains(this))
                {
                    CL_VENTANILLA.CL_TICKET.Add(this);
                }
    
                tick_sVentanillaId = CL_VENTANILLA.vent_sVentanillaId;
            }
            else if (!skipKeys)
            {
                tick_sVentanillaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CL_VENTANILLA")
                    && (ChangeTracker.OriginalValues["CL_VENTANILLA"] == CL_VENTANILLA))
                {
                    ChangeTracker.OriginalValues.Remove("CL_VENTANILLA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CL_VENTANILLA", previousValue);
                }
                if (CL_VENTANILLA != null && !CL_VENTANILLA.ChangeTracker.ChangeTrackingEnabled)
                {
                    CL_VENTANILLA.StartTracking();
                }
            }
        }
    
        private void FixupMA_ESTADO(MA_ESTADO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET.Contains(this))
            {
                previousValue.CL_TICKET.Remove(this);
            }
    
            if (MA_ESTADO != null)
            {
                if (!MA_ESTADO.CL_TICKET.Contains(this))
                {
                    MA_ESTADO.CL_TICKET.Add(this);
                }
    
                tick_sTipoEstado = MA_ESTADO.esta_sEstadoId;
            }
            else if (!skipKeys)
            {
                tick_sTipoEstado = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_ESTADO")
                    && (ChangeTracker.OriginalValues["MA_ESTADO"] == MA_ESTADO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_ESTADO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_ESTADO", previousValue);
                }
                if (MA_ESTADO != null && !MA_ESTADO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_ESTADO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET.Contains(this))
            {
                previousValue.CL_TICKET.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.CL_TICKET.Contains(this))
                {
                    SE_USUARIO.CL_TICKET.Add(this);
                }
    
                tick_sUsuarioAtendio = SE_USUARIO.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                tick_sUsuarioAtendio = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET1.Contains(this))
            {
                previousValue.CL_TICKET1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.CL_TICKET1.Contains(this))
                {
                    SE_USUARIO1.CL_TICKET1.Add(this);
                }
    
                tick_sUsuarioCreacion = SE_USUARIO1.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO2(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET2.Contains(this))
            {
                previousValue.CL_TICKET2.Remove(this);
            }
    
            if (SE_USUARIO2 != null)
            {
                if (!SE_USUARIO2.CL_TICKET2.Contains(this))
                {
                    SE_USUARIO2.CL_TICKET2.Add(this);
                }
    
                tick_sUsuarioModificacion = SE_USUARIO2.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                tick_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO2")
                    && (ChangeTracker.OriginalValues["SE_USUARIO2"] == SE_USUARIO2))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO2", previousValue);
                }
                if (SE_USUARIO2 != null && !SE_USUARIO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO2.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET.Contains(this))
            {
                previousValue.CL_TICKET.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.CL_TICKET.Contains(this))
                {
                    SI_PARAMETRO.CL_TICKET.Add(this);
                }
    
                tick_sPrioridadId = SI_PARAMETRO.para_sParametroId;
            }
            else if (!skipKeys)
            {
                tick_sPrioridadId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET1.Contains(this))
            {
                previousValue.CL_TICKET1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.CL_TICKET1.Contains(this))
                {
                    SI_PARAMETRO1.CL_TICKET1.Add(this);
                }
    
                tick_sTamanoTicket = SI_PARAMETRO1.para_sParametroId;
            }
            else if (!skipKeys)
            {
                tick_sTamanoTicket = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO2(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CL_TICKET2.Contains(this))
            {
                previousValue.CL_TICKET2.Remove(this);
            }
    
            if (SI_PARAMETRO2 != null)
            {
                if (!SI_PARAMETRO2.CL_TICKET2.Contains(this))
                {
                    SI_PARAMETRO2.CL_TICKET2.Add(this);
                }
    
                tick_sTipoCliente = SI_PARAMETRO2.para_sParametroId;
            }
            else if (!skipKeys)
            {
                tick_sTipoCliente = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO2")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO2"] == SI_PARAMETRO2))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO2", previousValue);
                }
                if (SI_PARAMETRO2 != null && !SI_PARAMETRO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO2.StartTracking();
                }
            }
        }

        #endregion
    }
}
