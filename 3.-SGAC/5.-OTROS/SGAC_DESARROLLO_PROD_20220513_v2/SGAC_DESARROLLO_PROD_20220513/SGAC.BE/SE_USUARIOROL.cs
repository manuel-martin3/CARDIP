//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(SE_ROLCONFIGURACION))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    public partial class SE_USUARIOROL: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short usro_sUsuarioRolId
        {
            get { return _usro_sUsuarioRolId; }
            set
            {
                if (_usro_sUsuarioRolId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'usro_sUsuarioRolId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _usro_sUsuarioRolId = value;
                    OnPropertyChanged("usro_sUsuarioRolId");
                }
            }
        }
        private short _usro_sUsuarioRolId;
    
        [DataMember]
        public short usro_sUsuarioId
        {
            get { return _usro_sUsuarioId; }
            set
            {
                if (_usro_sUsuarioId != value)
                {
                    ChangeTracker.RecordOriginalValue("usro_sUsuarioId", _usro_sUsuarioId);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _usro_sUsuarioId = value;
                    OnPropertyChanged("usro_sUsuarioId");
                }
            }
        }
        private short _usro_sUsuarioId;
    
        [DataMember]
        public Nullable<short> usro_sGrupoId
        {
            get { return _usro_sGrupoId; }
            set
            {
                if (_usro_sGrupoId != value)
                {
                    ChangeTracker.RecordOriginalValue("usro_sGrupoId", _usro_sGrupoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _usro_sGrupoId = value;
                    OnPropertyChanged("usro_sGrupoId");
                }
            }
        }
        private Nullable<short> _usro_sGrupoId;
    
        [DataMember]
        public Nullable<short> usro_sRolConfiguracionId
        {
            get { return _usro_sRolConfiguracionId; }
            set
            {
                if (_usro_sRolConfiguracionId != value)
                {
                    ChangeTracker.RecordOriginalValue("usro_sRolConfiguracionId", _usro_sRolConfiguracionId);
                    if (!IsDeserializing)
                    {
                        if (SE_ROLCONFIGURACION != null && SE_ROLCONFIGURACION.roco_sRolConfiguracionId != value)
                        {
                            SE_ROLCONFIGURACION = null;
                        }
                    }
                    _usro_sRolConfiguracionId = value;
                    OnPropertyChanged("usro_sRolConfiguracionId");
                }
            }
        }
        private Nullable<short> _usro_sRolConfiguracionId;
    
        [DataMember]
        public short usro_sOficinaConsularId
        {
            get { return _usro_sOficinaConsularId; }
            set
            {
                if (_usro_sOficinaConsularId != value)
                {
                    ChangeTracker.RecordOriginalValue("usro_sOficinaConsularId", _usro_sOficinaConsularId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR != null && SI_OFICINACONSULAR.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR = null;
                        }
                    }
                    _usro_sOficinaConsularId = value;
                    OnPropertyChanged("usro_sOficinaConsularId");
                }
            }
        }
        private short _usro_sOficinaConsularId;
    
        [DataMember]
        public short usro_sAcceso
        {
            get { return _usro_sAcceso; }
            set
            {
                if (_usro_sAcceso != value)
                {
                    ChangeTracker.RecordOriginalValue("usro_sAcceso", _usro_sAcceso);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _usro_sAcceso = value;
                    OnPropertyChanged("usro_sAcceso");
                }
            }
        }
        private short _usro_sAcceso;
    
        [DataMember]
        public string usro_cEstado
        {
            get { return _usro_cEstado; }
            set
            {
                if (_usro_cEstado != value)
                {
                    _usro_cEstado = value;
                    OnPropertyChanged("usro_cEstado");
                }
            }
        }
        private string _usro_cEstado;
    
        [DataMember]
        public short usro_sUsuarioCreacion
        {
            get { return _usro_sUsuarioCreacion; }
            set
            {
                if (_usro_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("usro_sUsuarioCreacion", _usro_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _usro_sUsuarioCreacion = value;
                    OnPropertyChanged("usro_sUsuarioCreacion");
                }
            }
        }
        private short _usro_sUsuarioCreacion;
    
        [DataMember]
        public string usro_vIPCreacion
        {
            get { return _usro_vIPCreacion; }
            set
            {
                if (_usro_vIPCreacion != value)
                {
                    _usro_vIPCreacion = value;
                    OnPropertyChanged("usro_vIPCreacion");
                }
            }
        }
        private string _usro_vIPCreacion;
    
        [DataMember]
        public System.DateTime usro_dFechaCreacion
        {
            get { return _usro_dFechaCreacion; }
            set
            {
                if (_usro_dFechaCreacion != value)
                {
                    _usro_dFechaCreacion = value;
                    OnPropertyChanged("usro_dFechaCreacion");
                }
            }
        }
        private System.DateTime _usro_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> usro_sUsuarioModificacion
        {
            get { return _usro_sUsuarioModificacion; }
            set
            {
                if (_usro_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("usro_sUsuarioModificacion", _usro_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO2 != null && SE_USUARIO2.usua_sUsuarioId != value)
                        {
                            SE_USUARIO2 = null;
                        }
                    }
                    _usro_sUsuarioModificacion = value;
                    OnPropertyChanged("usro_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _usro_sUsuarioModificacion;
    
        [DataMember]
        public string usro_vIPModificacion
        {
            get { return _usro_vIPModificacion; }
            set
            {
                if (_usro_vIPModificacion != value)
                {
                    _usro_vIPModificacion = value;
                    OnPropertyChanged("usro_vIPModificacion");
                }
            }
        }
        private string _usro_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> usro_dFechaModificacion
        {
            get { return _usro_dFechaModificacion; }
            set
            {
                if (_usro_dFechaModificacion != value)
                {
                    _usro_dFechaModificacion = value;
                    OnPropertyChanged("usro_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _usro_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public SE_ROLCONFIGURACION SE_ROLCONFIGURACION
        {
            get { return _sE_ROLCONFIGURACION; }
            set
            {
                if (!ReferenceEquals(_sE_ROLCONFIGURACION, value))
                {
                    var previousValue = _sE_ROLCONFIGURACION;
                    _sE_ROLCONFIGURACION = value;
                    FixupSE_ROLCONFIGURACION(previousValue);
                    OnNavigationPropertyChanged("SE_ROLCONFIGURACION");
                }
            }
        }
        private SE_ROLCONFIGURACION _sE_ROLCONFIGURACION;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO2
        {
            get { return _sE_USUARIO2; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO2, value))
                {
                    var previousValue = _sE_USUARIO2;
                    _sE_USUARIO2 = value;
                    FixupSE_USUARIO2(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO2");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO2;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR
        {
            get { return _sI_OFICINACONSULAR; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    var previousValue = _sI_OFICINACONSULAR;
                    _sI_OFICINACONSULAR = value;
                    FixupSI_OFICINACONSULAR(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            SE_ROLCONFIGURACION = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SE_USUARIO2 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            SI_OFICINACONSULAR = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_ROLCONFIGURACION(SE_ROLCONFIGURACION previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_USUARIOROL.Contains(this))
            {
                previousValue.SE_USUARIOROL.Remove(this);
            }
    
            if (SE_ROLCONFIGURACION != null)
            {
                if (!SE_ROLCONFIGURACION.SE_USUARIOROL.Contains(this))
                {
                    SE_ROLCONFIGURACION.SE_USUARIOROL.Add(this);
                }
    
                usro_sRolConfiguracionId = SE_ROLCONFIGURACION.roco_sRolConfiguracionId;
            }
            else if (!skipKeys)
            {
                usro_sRolConfiguracionId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_ROLCONFIGURACION")
                    && (ChangeTracker.OriginalValues["SE_ROLCONFIGURACION"] == SE_ROLCONFIGURACION))
                {
                    ChangeTracker.OriginalValues.Remove("SE_ROLCONFIGURACION");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_ROLCONFIGURACION", previousValue);
                }
                if (SE_ROLCONFIGURACION != null && !SE_ROLCONFIGURACION.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_ROLCONFIGURACION.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_USUARIOROL.Contains(this))
            {
                previousValue.SE_USUARIOROL.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.SE_USUARIOROL.Contains(this))
                {
                    SE_USUARIO.SE_USUARIOROL.Add(this);
                }
    
                usro_sUsuarioId = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_USUARIOROL1.Contains(this))
            {
                previousValue.SE_USUARIOROL1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.SE_USUARIOROL1.Contains(this))
                {
                    SE_USUARIO1.SE_USUARIOROL1.Add(this);
                }
    
                usro_sUsuarioCreacion = SE_USUARIO1.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO2(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_USUARIOROL2.Contains(this))
            {
                previousValue.SE_USUARIOROL2.Remove(this);
            }
    
            if (SE_USUARIO2 != null)
            {
                if (!SE_USUARIO2.SE_USUARIOROL2.Contains(this))
                {
                    SE_USUARIO2.SE_USUARIOROL2.Add(this);
                }
    
                usro_sUsuarioModificacion = SE_USUARIO2.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                usro_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO2")
                    && (ChangeTracker.OriginalValues["SE_USUARIO2"] == SE_USUARIO2))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO2", previousValue);
                }
                if (SE_USUARIO2 != null && !SE_USUARIO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO2.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_USUARIOROL.Contains(this))
            {
                previousValue.SE_USUARIOROL.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.SE_USUARIOROL.Contains(this))
                {
                    SI_PARAMETRO.SE_USUARIOROL.Add(this);
                }
    
                usro_sAcceso = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_USUARIOROL1.Contains(this))
            {
                previousValue.SE_USUARIOROL1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.SE_USUARIOROL1.Contains(this))
                {
                    SI_PARAMETRO1.SE_USUARIOROL1.Add(this);
                }
    
                usro_sGrupoId = SI_PARAMETRO1.para_sParametroId;
            }
            else if (!skipKeys)
            {
                usro_sGrupoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(SI_OFICINACONSULAR previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SE_USUARIOROL.Contains(this))
            {
                previousValue.SE_USUARIOROL.Remove(this);
            }
    
            if (SI_OFICINACONSULAR != null)
            {
                if (!SI_OFICINACONSULAR.SE_USUARIOROL.Contains(this))
                {
                    SI_OFICINACONSULAR.SE_USUARIOROL.Add(this);
                }
    
                usro_sOficinaConsularId = SI_OFICINACONSULAR.ofco_sOficinaConsularId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR"] == SI_OFICINACONSULAR))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR", previousValue);
                }
                if (SI_OFICINACONSULAR != null && !SI_OFICINACONSULAR.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR.StartTracking();
                }
            }
        }

        #endregion
    }
}
