//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(SE_FORMULARIO))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    public partial class SI_AUDITORIA: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long audi_iAuditoriaId
        {
            get { return _audi_iAuditoriaId; }
            set
            {
                if (_audi_iAuditoriaId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'audi_iAuditoriaId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _audi_iAuditoriaId = value;
                    OnPropertyChanged("audi_iAuditoriaId");
                }
            }
        }
        private long _audi_iAuditoriaId;
    
        [DataMember]
        public Nullable<short> audi_sFormularioId
        {
            get { return _audi_sFormularioId; }
            set
            {
                if (_audi_sFormularioId != value)
                {
                    ChangeTracker.RecordOriginalValue("audi_sFormularioId", _audi_sFormularioId);
                    if (!IsDeserializing)
                    {
                        if (SE_FORMULARIO != null && SE_FORMULARIO.form_sFormularioId != value)
                        {
                            SE_FORMULARIO = null;
                        }
                    }
                    _audi_sFormularioId = value;
                    OnPropertyChanged("audi_sFormularioId");
                }
            }
        }
        private Nullable<short> _audi_sFormularioId;
    
        [DataMember]
        public Nullable<short> audi_sOperacionTipoId
        {
            get { return _audi_sOperacionTipoId; }
            set
            {
                if (_audi_sOperacionTipoId != value)
                {
                    ChangeTracker.RecordOriginalValue("audi_sOperacionTipoId", _audi_sOperacionTipoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _audi_sOperacionTipoId = value;
                    OnPropertyChanged("audi_sOperacionTipoId");
                }
            }
        }
        private Nullable<short> _audi_sOperacionTipoId;
    
        [DataMember]
        public Nullable<short> audi_sOperacionResultadoId
        {
            get { return _audi_sOperacionResultadoId; }
            set
            {
                if (_audi_sOperacionResultadoId != value)
                {
                    ChangeTracker.RecordOriginalValue("audi_sOperacionResultadoId", _audi_sOperacionResultadoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _audi_sOperacionResultadoId = value;
                    OnPropertyChanged("audi_sOperacionResultadoId");
                }
            }
        }
        private Nullable<short> _audi_sOperacionResultadoId;
    
        [DataMember]
        public Nullable<short> audi_sTablaId
        {
            get { return _audi_sTablaId; }
            set
            {
                if (_audi_sTablaId != value)
                {
                    ChangeTracker.RecordOriginalValue("audi_sTablaId", _audi_sTablaId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO2 != null && SI_PARAMETRO2.para_sParametroId != value)
                        {
                            SI_PARAMETRO2 = null;
                        }
                    }
                    _audi_sTablaId = value;
                    OnPropertyChanged("audi_sTablaId");
                }
            }
        }
        private Nullable<short> _audi_sTablaId;
    
        [DataMember]
        public Nullable<long> audi_iClavePrimaria
        {
            get { return _audi_iClavePrimaria; }
            set
            {
                if (_audi_iClavePrimaria != value)
                {
                    _audi_iClavePrimaria = value;
                    OnPropertyChanged("audi_iClavePrimaria");
                }
            }
        }
        private Nullable<long> _audi_iClavePrimaria;
    
        [DataMember]
        public string audi_vCampos
        {
            get { return _audi_vCampos; }
            set
            {
                if (_audi_vCampos != value)
                {
                    _audi_vCampos = value;
                    OnPropertyChanged("audi_vCampos");
                }
            }
        }
        private string _audi_vCampos;
    
        [DataMember]
        public string audi_vValorNuevo
        {
            get { return _audi_vValorNuevo; }
            set
            {
                if (_audi_vValorNuevo != value)
                {
                    _audi_vValorNuevo = value;
                    OnPropertyChanged("audi_vValorNuevo");
                }
            }
        }
        private string _audi_vValorNuevo;
    
        [DataMember]
        public string audi_vHostName
        {
            get { return _audi_vHostName; }
            set
            {
                if (_audi_vHostName != value)
                {
                    _audi_vHostName = value;
                    OnPropertyChanged("audi_vHostName");
                }
            }
        }
        private string _audi_vHostName;
    
        [DataMember]
        public string audi_vComentario
        {
            get { return _audi_vComentario; }
            set
            {
                if (_audi_vComentario != value)
                {
                    _audi_vComentario = value;
                    OnPropertyChanged("audi_vComentario");
                }
            }
        }
        private string _audi_vComentario;
    
        [DataMember]
        public string audi_cEstado
        {
            get { return _audi_cEstado; }
            set
            {
                if (_audi_cEstado != value)
                {
                    _audi_cEstado = value;
                    OnPropertyChanged("audi_cEstado");
                }
            }
        }
        private string _audi_cEstado;
    
        [DataMember]
        public short audi_sUsuarioCreacion
        {
            get { return _audi_sUsuarioCreacion; }
            set
            {
                if (_audi_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("audi_sUsuarioCreacion", _audi_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _audi_sUsuarioCreacion = value;
                    OnPropertyChanged("audi_sUsuarioCreacion");
                }
            }
        }
        private short _audi_sUsuarioCreacion;
    
        [DataMember]
        public string audi_vIPCreacion
        {
            get { return _audi_vIPCreacion; }
            set
            {
                if (_audi_vIPCreacion != value)
                {
                    _audi_vIPCreacion = value;
                    OnPropertyChanged("audi_vIPCreacion");
                }
            }
        }
        private string _audi_vIPCreacion;
    
        [DataMember]
        public System.DateTime audi_dFechaCreacion
        {
            get { return _audi_dFechaCreacion; }
            set
            {
                if (_audi_dFechaCreacion != value)
                {
                    _audi_dFechaCreacion = value;
                    OnPropertyChanged("audi_dFechaCreacion");
                }
            }
        }
        private System.DateTime _audi_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> audi_sUsuarioModificacion
        {
            get { return _audi_sUsuarioModificacion; }
            set
            {
                if (_audi_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("audi_sUsuarioModificacion", _audi_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _audi_sUsuarioModificacion = value;
                    OnPropertyChanged("audi_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _audi_sUsuarioModificacion;
    
        [DataMember]
        public string audi_vIPModificacion
        {
            get { return _audi_vIPModificacion; }
            set
            {
                if (_audi_vIPModificacion != value)
                {
                    _audi_vIPModificacion = value;
                    OnPropertyChanged("audi_vIPModificacion");
                }
            }
        }
        private string _audi_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> audi_dFechaModificacion
        {
            get { return _audi_dFechaModificacion; }
            set
            {
                if (_audi_dFechaModificacion != value)
                {
                    _audi_dFechaModificacion = value;
                    OnPropertyChanged("audi_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _audi_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public SE_FORMULARIO SE_FORMULARIO
        {
            get { return _sE_FORMULARIO; }
            set
            {
                if (!ReferenceEquals(_sE_FORMULARIO, value))
                {
                    var previousValue = _sE_FORMULARIO;
                    _sE_FORMULARIO = value;
                    FixupSE_FORMULARIO(previousValue);
                    OnNavigationPropertyChanged("SE_FORMULARIO");
                }
            }
        }
        private SE_FORMULARIO _sE_FORMULARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO2
        {
            get { return _sI_PARAMETRO2; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO2, value))
                {
                    var previousValue = _sI_PARAMETRO2;
                    _sI_PARAMETRO2 = value;
                    FixupSI_PARAMETRO2(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO2");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO2;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            SE_FORMULARIO = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            SI_PARAMETRO2 = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_FORMULARIO(SE_FORMULARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_AUDITORIA.Contains(this))
            {
                previousValue.SI_AUDITORIA.Remove(this);
            }
    
            if (SE_FORMULARIO != null)
            {
                if (!SE_FORMULARIO.SI_AUDITORIA.Contains(this))
                {
                    SE_FORMULARIO.SI_AUDITORIA.Add(this);
                }
    
                audi_sFormularioId = SE_FORMULARIO.form_sFormularioId;
            }
            else if (!skipKeys)
            {
                audi_sFormularioId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_FORMULARIO")
                    && (ChangeTracker.OriginalValues["SE_FORMULARIO"] == SE_FORMULARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_FORMULARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_FORMULARIO", previousValue);
                }
                if (SE_FORMULARIO != null && !SE_FORMULARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_FORMULARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_AUDITORIA.Contains(this))
            {
                previousValue.SI_AUDITORIA.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.SI_AUDITORIA.Contains(this))
                {
                    SE_USUARIO.SI_AUDITORIA.Add(this);
                }
    
                audi_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_AUDITORIA1.Contains(this))
            {
                previousValue.SI_AUDITORIA1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.SI_AUDITORIA1.Contains(this))
                {
                    SE_USUARIO1.SI_AUDITORIA1.Add(this);
                }
    
                audi_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                audi_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_AUDITORIA.Contains(this))
            {
                previousValue.SI_AUDITORIA.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.SI_AUDITORIA.Contains(this))
                {
                    SI_PARAMETRO.SI_AUDITORIA.Add(this);
                }
    
                audi_sOperacionTipoId = SI_PARAMETRO.para_sParametroId;
            }
            else if (!skipKeys)
            {
                audi_sOperacionTipoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_AUDITORIA1.Contains(this))
            {
                previousValue.SI_AUDITORIA1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.SI_AUDITORIA1.Contains(this))
                {
                    SI_PARAMETRO1.SI_AUDITORIA1.Add(this);
                }
    
                audi_sOperacionResultadoId = SI_PARAMETRO1.para_sParametroId;
            }
            else if (!skipKeys)
            {
                audi_sOperacionResultadoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO2(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_AUDITORIA2.Contains(this))
            {
                previousValue.SI_AUDITORIA2.Remove(this);
            }
    
            if (SI_PARAMETRO2 != null)
            {
                if (!SI_PARAMETRO2.SI_AUDITORIA2.Contains(this))
                {
                    SI_PARAMETRO2.SI_AUDITORIA2.Add(this);
                }
    
                audi_sTablaId = SI_PARAMETRO2.para_sParametroId;
            }
            else if (!skipKeys)
            {
                audi_sTablaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO2")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO2"] == SI_PARAMETRO2))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO2", previousValue);
                }
                if (SI_PARAMETRO2 != null && !SI_PARAMETRO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO2.StartTracking();
                }
            }
        }

        #endregion
    }
}
