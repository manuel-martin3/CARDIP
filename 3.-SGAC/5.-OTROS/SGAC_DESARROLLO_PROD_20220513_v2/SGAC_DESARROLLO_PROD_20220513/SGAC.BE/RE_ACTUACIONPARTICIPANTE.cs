//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(RE_ACTUACIONDETALLE))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(RE_EMPRESA))]
    [KnownType(typeof(RE_PERSONA))]
    public partial class RE_ACTUACIONPARTICIPANTE: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long acpa_iActuacionParticipanteId
        {
            get { return _acpa_iActuacionParticipanteId; }
            set
            {
                if (_acpa_iActuacionParticipanteId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'acpa_iActuacionParticipanteId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _acpa_iActuacionParticipanteId = value;
                    OnPropertyChanged("acpa_iActuacionParticipanteId");
                }
            }
        }
        private long _acpa_iActuacionParticipanteId;
    
        [DataMember]
        public long acpa_iActuacionDetalleId
        {
            get { return _acpa_iActuacionDetalleId; }
            set
            {
                if (_acpa_iActuacionDetalleId != value)
                {
                    ChangeTracker.RecordOriginalValue("acpa_iActuacionDetalleId", _acpa_iActuacionDetalleId);
                    if (!IsDeserializing)
                    {
                        if (RE_ACTUACIONDETALLE != null && RE_ACTUACIONDETALLE.acde_iActuacionDetalleId != value)
                        {
                            RE_ACTUACIONDETALLE = null;
                        }
                    }
                    _acpa_iActuacionDetalleId = value;
                    OnPropertyChanged("acpa_iActuacionDetalleId");
                }
            }
        }
        private long _acpa_iActuacionDetalleId;
    
        [DataMember]
        public Nullable<long> acpa_iPersonaId
        {
            get { return _acpa_iPersonaId; }
            set
            {
                if (_acpa_iPersonaId != value)
                {
                    ChangeTracker.RecordOriginalValue("acpa_iPersonaId", _acpa_iPersonaId);
                    if (!IsDeserializing)
                    {
                        if (RE_PERSONA != null && RE_PERSONA.pers_iPersonaId != value)
                        {
                            RE_PERSONA = null;
                        }
                    }
                    _acpa_iPersonaId = value;
                    OnPropertyChanged("acpa_iPersonaId");
                }
            }
        }
        private Nullable<long> _acpa_iPersonaId;
    
        [DataMember]
        public Nullable<long> acpa_iEmpresaId
        {
            get { return _acpa_iEmpresaId; }
            set
            {
                if (_acpa_iEmpresaId != value)
                {
                    ChangeTracker.RecordOriginalValue("acpa_iEmpresaId", _acpa_iEmpresaId);
                    if (!IsDeserializing)
                    {
                        if (RE_EMPRESA != null && RE_EMPRESA.empr_iEmpresaId != value)
                        {
                            RE_EMPRESA = null;
                        }
                    }
                    _acpa_iEmpresaId = value;
                    OnPropertyChanged("acpa_iEmpresaId");
                }
            }
        }
        private Nullable<long> _acpa_iEmpresaId;
    
        [DataMember]
        public short acpa_sTipoParticipanteId
        {
            get { return _acpa_sTipoParticipanteId; }
            set
            {
                if (_acpa_sTipoParticipanteId != value)
                {
                    ChangeTracker.RecordOriginalValue("acpa_sTipoParticipanteId", _acpa_sTipoParticipanteId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _acpa_sTipoParticipanteId = value;
                    OnPropertyChanged("acpa_sTipoParticipanteId");
                }
            }
        }
        private short _acpa_sTipoParticipanteId;
    
        [DataMember]
        public Nullable<short> acpa_sTipoDatoId
        {
            get { return _acpa_sTipoDatoId; }
            set
            {
                if (_acpa_sTipoDatoId != value)
                {
                    _acpa_sTipoDatoId = value;
                    OnPropertyChanged("acpa_sTipoDatoId");
                }
            }
        }
        private Nullable<short> _acpa_sTipoDatoId;
    
        [DataMember]
        public Nullable<short> acpa_sTipoVinculoId
        {
            get { return _acpa_sTipoVinculoId; }
            set
            {
                if (_acpa_sTipoVinculoId != value)
                {
                    ChangeTracker.RecordOriginalValue("acpa_sTipoVinculoId", _acpa_sTipoVinculoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _acpa_sTipoVinculoId = value;
                    OnPropertyChanged("acpa_sTipoVinculoId");
                }
            }
        }
        private Nullable<short> _acpa_sTipoVinculoId;
    
        [DataMember]
        public string acpa_cEstado
        {
            get { return _acpa_cEstado; }
            set
            {
                if (_acpa_cEstado != value)
                {
                    _acpa_cEstado = value;
                    OnPropertyChanged("acpa_cEstado");
                }
            }
        }
        private string _acpa_cEstado;
    
        [DataMember]
        public short acpa_sUsuarioCreacion
        {
            get { return _acpa_sUsuarioCreacion; }
            set
            {
                if (_acpa_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("acpa_sUsuarioCreacion", _acpa_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _acpa_sUsuarioCreacion = value;
                    OnPropertyChanged("acpa_sUsuarioCreacion");
                }
            }
        }
        private short _acpa_sUsuarioCreacion;
    
        [DataMember]
        public string acpa_vIPCreacion
        {
            get { return _acpa_vIPCreacion; }
            set
            {
                if (_acpa_vIPCreacion != value)
                {
                    _acpa_vIPCreacion = value;
                    OnPropertyChanged("acpa_vIPCreacion");
                }
            }
        }
        private string _acpa_vIPCreacion;
    
        [DataMember]
        public System.DateTime acpa_dFechaCreacion
        {
            get { return _acpa_dFechaCreacion; }
            set
            {
                if (_acpa_dFechaCreacion != value)
                {
                    _acpa_dFechaCreacion = value;
                    OnPropertyChanged("acpa_dFechaCreacion");
                }
            }
        }
        private System.DateTime _acpa_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> acpa_sUsuarioModificacion
        {
            get { return _acpa_sUsuarioModificacion; }
            set
            {
                if (_acpa_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("acpa_sUsuarioModificacion", _acpa_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _acpa_sUsuarioModificacion = value;
                    OnPropertyChanged("acpa_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _acpa_sUsuarioModificacion;
    
        [DataMember]
        public string acpa_vIPModificacion
        {
            get { return _acpa_vIPModificacion; }
            set
            {
                if (_acpa_vIPModificacion != value)
                {
                    _acpa_vIPModificacion = value;
                    OnPropertyChanged("acpa_vIPModificacion");
                }
            }
        }
        private string _acpa_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> acpa_dFechaModificacion
        {
            get { return _acpa_dFechaModificacion; }
            set
            {
                if (_acpa_dFechaModificacion != value)
                {
                    _acpa_dFechaModificacion = value;
                    OnPropertyChanged("acpa_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _acpa_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public RE_ACTUACIONDETALLE RE_ACTUACIONDETALLE
        {
            get { return _rE_ACTUACIONDETALLE; }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONDETALLE, value))
                {
                    var previousValue = _rE_ACTUACIONDETALLE;
                    _rE_ACTUACIONDETALLE = value;
                    FixupRE_ACTUACIONDETALLE(previousValue);
                    OnNavigationPropertyChanged("RE_ACTUACIONDETALLE");
                }
            }
        }
        private RE_ACTUACIONDETALLE _rE_ACTUACIONDETALLE;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public RE_EMPRESA RE_EMPRESA
        {
            get { return _rE_EMPRESA; }
            set
            {
                if (!ReferenceEquals(_rE_EMPRESA, value))
                {
                    var previousValue = _rE_EMPRESA;
                    _rE_EMPRESA = value;
                    FixupRE_EMPRESA(previousValue);
                    OnNavigationPropertyChanged("RE_EMPRESA");
                }
            }
        }
        private RE_EMPRESA _rE_EMPRESA;
    
        [DataMember]
        public RE_PERSONA RE_PERSONA
        {
            get { return _rE_PERSONA; }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA, value))
                {
                    var previousValue = _rE_PERSONA;
                    _rE_PERSONA = value;
                    FixupRE_PERSONA(previousValue);
                    OnNavigationPropertyChanged("RE_PERSONA");
                }
            }
        }
        private RE_PERSONA _rE_PERSONA;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            RE_ACTUACIONDETALLE = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            RE_EMPRESA = null;
            RE_PERSONA = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupRE_ACTUACIONDETALLE(RE_ACTUACIONDETALLE previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONPARTICIPANTE.Contains(this))
            {
                previousValue.RE_ACTUACIONPARTICIPANTE.Remove(this);
            }
    
            if (RE_ACTUACIONDETALLE != null)
            {
                if (!RE_ACTUACIONDETALLE.RE_ACTUACIONPARTICIPANTE.Contains(this))
                {
                    RE_ACTUACIONDETALLE.RE_ACTUACIONPARTICIPANTE.Add(this);
                }
    
                acpa_iActuacionDetalleId = RE_ACTUACIONDETALLE.acde_iActuacionDetalleId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_ACTUACIONDETALLE")
                    && (ChangeTracker.OriginalValues["RE_ACTUACIONDETALLE"] == RE_ACTUACIONDETALLE))
                {
                    ChangeTracker.OriginalValues.Remove("RE_ACTUACIONDETALLE");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_ACTUACIONDETALLE", previousValue);
                }
                if (RE_ACTUACIONDETALLE != null && !RE_ACTUACIONDETALLE.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_ACTUACIONDETALLE.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONPARTICIPANTE.Contains(this))
            {
                previousValue.RE_ACTUACIONPARTICIPANTE.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_ACTUACIONPARTICIPANTE.Contains(this))
                {
                    SE_USUARIO.RE_ACTUACIONPARTICIPANTE.Add(this);
                }
    
                acpa_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONPARTICIPANTE1.Contains(this))
            {
                previousValue.RE_ACTUACIONPARTICIPANTE1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_ACTUACIONPARTICIPANTE1.Contains(this))
                {
                    SE_USUARIO1.RE_ACTUACIONPARTICIPANTE1.Add(this);
                }
    
                acpa_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                acpa_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONPARTICIPANTE.Contains(this))
            {
                previousValue.RE_ACTUACIONPARTICIPANTE.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.RE_ACTUACIONPARTICIPANTE.Contains(this))
                {
                    SI_PARAMETRO.RE_ACTUACIONPARTICIPANTE.Add(this);
                }
    
                acpa_sTipoParticipanteId = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONPARTICIPANTE1.Contains(this))
            {
                previousValue.RE_ACTUACIONPARTICIPANTE1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.RE_ACTUACIONPARTICIPANTE1.Contains(this))
                {
                    SI_PARAMETRO1.RE_ACTUACIONPARTICIPANTE1.Add(this);
                }
    
                acpa_sTipoVinculoId = SI_PARAMETRO1.para_sParametroId;
            }
            else if (!skipKeys)
            {
                acpa_sTipoVinculoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupRE_EMPRESA(RE_EMPRESA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONPARTICIPANTE.Contains(this))
            {
                previousValue.RE_ACTUACIONPARTICIPANTE.Remove(this);
            }
    
            if (RE_EMPRESA != null)
            {
                if (!RE_EMPRESA.RE_ACTUACIONPARTICIPANTE.Contains(this))
                {
                    RE_EMPRESA.RE_ACTUACIONPARTICIPANTE.Add(this);
                }
    
                acpa_iEmpresaId = RE_EMPRESA.empr_iEmpresaId;
            }
            else if (!skipKeys)
            {
                acpa_iEmpresaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_EMPRESA")
                    && (ChangeTracker.OriginalValues["RE_EMPRESA"] == RE_EMPRESA))
                {
                    ChangeTracker.OriginalValues.Remove("RE_EMPRESA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_EMPRESA", previousValue);
                }
                if (RE_EMPRESA != null && !RE_EMPRESA.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_EMPRESA.StartTracking();
                }
            }
        }
    
        private void FixupRE_PERSONA(RE_PERSONA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONPARTICIPANTE.Contains(this))
            {
                previousValue.RE_ACTUACIONPARTICIPANTE.Remove(this);
            }
    
            if (RE_PERSONA != null)
            {
                if (!RE_PERSONA.RE_ACTUACIONPARTICIPANTE.Contains(this))
                {
                    RE_PERSONA.RE_ACTUACIONPARTICIPANTE.Add(this);
                }
    
                acpa_iPersonaId = RE_PERSONA.pers_iPersonaId;
            }
            else if (!skipKeys)
            {
                acpa_iPersonaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_PERSONA")
                    && (ChangeTracker.OriginalValues["RE_PERSONA"] == RE_PERSONA))
                {
                    ChangeTracker.OriginalValues.Remove("RE_PERSONA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_PERSONA", previousValue);
                }
                if (RE_PERSONA != null && !RE_PERSONA.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_PERSONA.StartTracking();
                }
            }
        }

        #endregion

        public String vDirecionParticipante { get; set; }
        public String vUbigeo { get; set; }
        public Int32 vCentroPoblado { get; set; }
    }
}
