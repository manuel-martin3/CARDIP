//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(MA_CARGO_FUNCIONARIO))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    public partial class RE_OFICINACONSULARFUNCIONARIO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short ocfu_sOfiConFuncionarioId
        {
            get { return _ocfu_sOfiConFuncionarioId; }
            set
            {
                if (_ocfu_sOfiConFuncionarioId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ocfu_sOfiConFuncionarioId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ocfu_sOfiConFuncionarioId = value;
                    OnPropertyChanged("ocfu_sOfiConFuncionarioId");
                }
            }
        }
        private short _ocfu_sOfiConFuncionarioId;
    
        [DataMember]
        public Nullable<short> ocfu_sOficinaConsularId
        {
            get { return _ocfu_sOficinaConsularId; }
            set
            {
                if (_ocfu_sOficinaConsularId != value)
                {
                    ChangeTracker.RecordOriginalValue("ocfu_sOficinaConsularId", _ocfu_sOficinaConsularId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR != null && SI_OFICINACONSULAR.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR = null;
                        }
                    }
                    _ocfu_sOficinaConsularId = value;
                    OnPropertyChanged("ocfu_sOficinaConsularId");
                }
            }
        }
        private Nullable<short> _ocfu_sOficinaConsularId;
    
        [DataMember]
        public Nullable<int> ocfu_IFuncionarioId
        {
            get { return _ocfu_IFuncionarioId; }
            set
            {
                if (_ocfu_IFuncionarioId != value)
                {
                    _ocfu_IFuncionarioId = value;
                    OnPropertyChanged("ocfu_IFuncionarioId");
                }
            }
        }
        private Nullable<int> _ocfu_IFuncionarioId;
    
        [DataMember]
        public Nullable<short> ocfu_sCargoFuncionarioId
        {
            get { return _ocfu_sCargoFuncionarioId; }
            set
            {
                if (_ocfu_sCargoFuncionarioId != value)
                {
                    ChangeTracker.RecordOriginalValue("ocfu_sCargoFuncionarioId", _ocfu_sCargoFuncionarioId);
                    if (!IsDeserializing)
                    {
                        if (MA_CARGO_FUNCIONARIO != null && MA_CARGO_FUNCIONARIO.carf_sCargoFuncionarioId != value)
                        {
                            MA_CARGO_FUNCIONARIO = null;
                        }
                    }
                    _ocfu_sCargoFuncionarioId = value;
                    OnPropertyChanged("ocfu_sCargoFuncionarioId");
                }
            }
        }
        private Nullable<short> _ocfu_sCargoFuncionarioId;
    
        [DataMember]
        public Nullable<System.DateTime> ocfu_dFechaInicio
        {
            get { return _ocfu_dFechaInicio; }
            set
            {
                if (_ocfu_dFechaInicio != value)
                {
                    _ocfu_dFechaInicio = value;
                    OnPropertyChanged("ocfu_dFechaInicio");
                }
            }
        }
        private Nullable<System.DateTime> _ocfu_dFechaInicio;
    
        [DataMember]
        public Nullable<System.DateTime> ocfu_dFechaFin
        {
            get { return _ocfu_dFechaFin; }
            set
            {
                if (_ocfu_dFechaFin != value)
                {
                    _ocfu_dFechaFin = value;
                    OnPropertyChanged("ocfu_dFechaFin");
                }
            }
        }
        private Nullable<System.DateTime> _ocfu_dFechaFin;
    
        [DataMember]
        public string ocfu_vObservacion
        {
            get { return _ocfu_vObservacion; }
            set
            {
                if (_ocfu_vObservacion != value)
                {
                    _ocfu_vObservacion = value;
                    OnPropertyChanged("ocfu_vObservacion");
                }
            }
        }
        private string _ocfu_vObservacion;
    
        [DataMember]
        public string ocfu_cEstado
        {
            get { return _ocfu_cEstado; }
            set
            {
                if (_ocfu_cEstado != value)
                {
                    _ocfu_cEstado = value;
                    OnPropertyChanged("ocfu_cEstado");
                }
            }
        }
        private string _ocfu_cEstado;
    
        [DataMember]
        public Nullable<short> ocfu_sUsuarioCreacion
        {
            get { return _ocfu_sUsuarioCreacion; }
            set
            {
                if (_ocfu_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("ocfu_sUsuarioCreacion", _ocfu_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _ocfu_sUsuarioCreacion = value;
                    OnPropertyChanged("ocfu_sUsuarioCreacion");
                }
            }
        }
        private Nullable<short> _ocfu_sUsuarioCreacion;
    
        [DataMember]
        public string ocfu_vIPCreacion
        {
            get { return _ocfu_vIPCreacion; }
            set
            {
                if (_ocfu_vIPCreacion != value)
                {
                    _ocfu_vIPCreacion = value;
                    OnPropertyChanged("ocfu_vIPCreacion");
                }
            }
        }
        private string _ocfu_vIPCreacion;
    
        [DataMember]
        public System.DateTime ocfu_dFechaCreacion
        {
            get { return _ocfu_dFechaCreacion; }
            set
            {
                if (_ocfu_dFechaCreacion != value)
                {
                    _ocfu_dFechaCreacion = value;
                    OnPropertyChanged("ocfu_dFechaCreacion");
                }
            }
        }
        private System.DateTime _ocfu_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> ocfu_sUsuarioModificacion
        {
            get { return _ocfu_sUsuarioModificacion; }
            set
            {
                if (_ocfu_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("ocfu_sUsuarioModificacion", _ocfu_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _ocfu_sUsuarioModificacion = value;
                    OnPropertyChanged("ocfu_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _ocfu_sUsuarioModificacion;
    
        [DataMember]
        public string ocfu_vIPModificacion
        {
            get { return _ocfu_vIPModificacion; }
            set
            {
                if (_ocfu_vIPModificacion != value)
                {
                    _ocfu_vIPModificacion = value;
                    OnPropertyChanged("ocfu_vIPModificacion");
                }
            }
        }
        private string _ocfu_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> ocfu_dFechaModificacion
        {
            get { return _ocfu_dFechaModificacion; }
            set
            {
                if (_ocfu_dFechaModificacion != value)
                {
                    _ocfu_dFechaModificacion = value;
                    OnPropertyChanged("ocfu_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _ocfu_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public MA_CARGO_FUNCIONARIO MA_CARGO_FUNCIONARIO
        {
            get { return _mA_CARGO_FUNCIONARIO; }
            set
            {
                if (!ReferenceEquals(_mA_CARGO_FUNCIONARIO, value))
                {
                    var previousValue = _mA_CARGO_FUNCIONARIO;
                    _mA_CARGO_FUNCIONARIO = value;
                    FixupMA_CARGO_FUNCIONARIO(previousValue);
                    OnNavigationPropertyChanged("MA_CARGO_FUNCIONARIO");
                }
            }
        }
        private MA_CARGO_FUNCIONARIO _mA_CARGO_FUNCIONARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR
        {
            get { return _sI_OFICINACONSULAR; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    var previousValue = _sI_OFICINACONSULAR;
                    _sI_OFICINACONSULAR = value;
                    FixupSI_OFICINACONSULAR(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            MA_CARGO_FUNCIONARIO = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_OFICINACONSULAR = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupMA_CARGO_FUNCIONARIO(MA_CARGO_FUNCIONARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_OFICINACONSULARFUNCIONARIO.Contains(this))
            {
                previousValue.RE_OFICINACONSULARFUNCIONARIO.Remove(this);
            }
    
            if (MA_CARGO_FUNCIONARIO != null)
            {
                if (!MA_CARGO_FUNCIONARIO.RE_OFICINACONSULARFUNCIONARIO.Contains(this))
                {
                    MA_CARGO_FUNCIONARIO.RE_OFICINACONSULARFUNCIONARIO.Add(this);
                }
    
                ocfu_sCargoFuncionarioId = MA_CARGO_FUNCIONARIO.carf_sCargoFuncionarioId;
            }
            else if (!skipKeys)
            {
                ocfu_sCargoFuncionarioId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_CARGO_FUNCIONARIO")
                    && (ChangeTracker.OriginalValues["MA_CARGO_FUNCIONARIO"] == MA_CARGO_FUNCIONARIO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_CARGO_FUNCIONARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_CARGO_FUNCIONARIO", previousValue);
                }
                if (MA_CARGO_FUNCIONARIO != null && !MA_CARGO_FUNCIONARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_CARGO_FUNCIONARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_OFICINACONSULARFUNCIONARIO.Contains(this))
            {
                previousValue.RE_OFICINACONSULARFUNCIONARIO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_OFICINACONSULARFUNCIONARIO.Contains(this))
                {
                    SE_USUARIO.RE_OFICINACONSULARFUNCIONARIO.Add(this);
                }
    
                ocfu_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                ocfu_sUsuarioCreacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_OFICINACONSULARFUNCIONARIO1.Contains(this))
            {
                previousValue.RE_OFICINACONSULARFUNCIONARIO1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_OFICINACONSULARFUNCIONARIO1.Contains(this))
                {
                    SE_USUARIO1.RE_OFICINACONSULARFUNCIONARIO1.Add(this);
                }
    
                ocfu_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                ocfu_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(SI_OFICINACONSULAR previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_OFICINACONSULARFUNCIONARIO.Contains(this))
            {
                previousValue.RE_OFICINACONSULARFUNCIONARIO.Remove(this);
            }
    
            if (SI_OFICINACONSULAR != null)
            {
                if (!SI_OFICINACONSULAR.RE_OFICINACONSULARFUNCIONARIO.Contains(this))
                {
                    SI_OFICINACONSULAR.RE_OFICINACONSULARFUNCIONARIO.Add(this);
                }
    
                ocfu_sOficinaConsularId = SI_OFICINACONSULAR.ofco_sOficinaConsularId;
            }
            else if (!skipKeys)
            {
                ocfu_sOficinaConsularId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR"] == SI_OFICINACONSULAR))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR", previousValue);
                }
                if (SI_OFICINACONSULAR != null && !SI_OFICINACONSULAR.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR.StartTracking();
                }
            }
        }

        #endregion
    }
}
