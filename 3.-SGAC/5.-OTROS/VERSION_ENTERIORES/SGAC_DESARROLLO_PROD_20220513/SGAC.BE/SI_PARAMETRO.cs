//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AL_INSUMO))]
    [KnownType(typeof(AL_MOVIMIENTO))]
    [KnownType(typeof(AL_PEDIDO))]
    [KnownType(typeof(AL_PEDIDOHISTORICO))]
    [KnownType(typeof(CL_SERVICIO))]
    [KnownType(typeof(CL_TICKET))]
    [KnownType(typeof(CL_VENTANILLA))]
    [KnownType(typeof(CO_CUENTACORRIENTE))]
    [KnownType(typeof(CO_REMESA))]
    [KnownType(typeof(CO_REMESADETALLE))]
    [KnownType(typeof(CO_TRANSACCION))]
    [KnownType(typeof(RE_ACTOMIGRATORIO))]
    [KnownType(typeof(RE_ACTOMIGRATORIOFORMATO))]
    [KnownType(typeof(RE_ACTONOTARIALDOCUMENTO))]
    [KnownType(typeof(RE_ACTONOTARIALSEGUIMIENTO))]
    [KnownType(typeof(RE_ACTUACIONPARTICIPANTE))]
    [KnownType(typeof(RE_EMPRESA))]
    [KnownType(typeof(RE_PERSONAFILIACION))]
    [KnownType(typeof(RE_PERSONAFOTO))]
    [KnownType(typeof(RE_REGISTROUNICO))]
    [KnownType(typeof(SE_FORMULARIO))]
    [KnownType(typeof(SE_ROLCONFIGURACION))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SE_USUARIOROL))]
    [KnownType(typeof(SI_AUDITORIA))]
    [KnownType(typeof(SI_BOVEDA))]
    [KnownType(typeof(SI_OFICINACOMPLEMENTARIA))]
    [KnownType(typeof(MA_SECCION))]
    [KnownType(typeof(SI_TARIFARIO))]
    [KnownType(typeof(RE_ACTUACIONANOTACION))]
    [KnownType(typeof(RE_ACTOJUDICIAL))]
    [KnownType(typeof(RE_ACTOMIGRATORIOHISTORICO))]
    [KnownType(typeof(RE_PAGO))]
    [KnownType(typeof(SI_TARIFARIOREQUISITO))]
    [KnownType(typeof(RE_RESIDENCIA))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    [KnownType(typeof(RE_REGISTROMILITAR))]
    [KnownType(typeof(RE_ACTOJUDICIALNOTIFICACION))]
    [KnownType(typeof(RE_REGISTROCIVIL))]
    [KnownType(typeof(RE_PERSONA))]
    [KnownType(typeof(RE_ACTOJUDICIALPARTICIPANTE))]
    [KnownType(typeof(RE_ACTAJUDICIAL))]
    [KnownType(typeof(RE_ACTONOTARIALPARTICIPANTE))]
    [KnownType(typeof(RE_ACTONOTARIAL))]
    public partial class SI_PARAMETRO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short para_sParametroId
        {
            get { return _para_sParametroId; }
            set
            {
                if (_para_sParametroId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'para_sParametroId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _para_sParametroId = value;
                    OnPropertyChanged("para_sParametroId");
                }
            }
        }
        private short _para_sParametroId;
    
        [DataMember]
        public string para_vGrupo
        {
            get { return _para_vGrupo; }
            set
            {
                if (_para_vGrupo != value)
                {
                    _para_vGrupo = value;
                    OnPropertyChanged("para_vGrupo");
                }
            }
        }
        private string _para_vGrupo;
    
        [DataMember]
        public string para_vDescripcion
        {
            get { return _para_vDescripcion; }
            set
            {
                if (_para_vDescripcion != value)
                {
                    _para_vDescripcion = value;
                    OnPropertyChanged("para_vDescripcion");
                }
            }
        }
        private string _para_vDescripcion;
    
        [DataMember]
        public string para_vValor
        {
            get { return _para_vValor; }
            set
            {
                if (_para_vValor != value)
                {
                    _para_vValor = value;
                    OnPropertyChanged("para_vValor");
                }
            }
        }
        private string _para_vValor;
    
        [DataMember]
        public string para_vReferencia
        {
            get { return _para_vReferencia; }
            set
            {
                if (_para_vReferencia != value)
                {
                    _para_vReferencia = value;
                    OnPropertyChanged("para_vReferencia");
                }
            }
        }
        private string _para_vReferencia;
    
        [DataMember]
        public Nullable<byte> para_tOrden
        {
            get { return _para_tOrden; }
            set
            {
                if (_para_tOrden != value)
                {
                    _para_tOrden = value;
                    OnPropertyChanged("para_tOrden");
                }
            }
        }
        private Nullable<byte> _para_tOrden;
    
        [DataMember]
        public bool para_bVisible
        {
            get { return _para_bVisible; }
            set
            {
                if (_para_bVisible != value)
                {
                    _para_bVisible = value;
                    OnPropertyChanged("para_bVisible");
                }
            }
        }
        private bool _para_bVisible;
    
        [DataMember]
        public Nullable<System.DateTime> para_dVigenciaInicio
        {
            get { return _para_dVigenciaInicio; }
            set
            {
                if (_para_dVigenciaInicio != value)
                {
                    _para_dVigenciaInicio = value;
                    OnPropertyChanged("para_dVigenciaInicio");
                }
            }
        }
        private Nullable<System.DateTime> _para_dVigenciaInicio;
    
        [DataMember]
        public Nullable<System.DateTime> para_dVigenciaFin
        {
            get { return _para_dVigenciaFin; }
            set
            {
                if (_para_dVigenciaFin != value)
                {
                    _para_dVigenciaFin = value;
                    OnPropertyChanged("para_dVigenciaFin");
                }
            }
        }
        private Nullable<System.DateTime> _para_dVigenciaFin;
    
        [DataMember]
        public bool para_bPrecarga
        {
            get { return _para_bPrecarga; }
            set
            {
                if (_para_bPrecarga != value)
                {
                    _para_bPrecarga = value;
                    OnPropertyChanged("para_bPrecarga");
                }
            }
        }
        private bool _para_bPrecarga;
    
        [DataMember]
        public string para_cEstado
        {
            get { return _para_cEstado; }
            set
            {
                if (_para_cEstado != value)
                {
                    _para_cEstado = value;
                    OnPropertyChanged("para_cEstado");
                }
            }
        }
        private string _para_cEstado;
    
        [DataMember]
        public short para_sUsuarioCreacion
        {
            get { return _para_sUsuarioCreacion; }
            set
            {
                if (_para_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("para_sUsuarioCreacion", _para_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO2 != null && SE_USUARIO2.usua_sUsuarioId != value)
                        {
                            SE_USUARIO2 = null;
                        }
                    }
                    _para_sUsuarioCreacion = value;
                    OnPropertyChanged("para_sUsuarioCreacion");
                }
            }
        }
        private short _para_sUsuarioCreacion;
    
        [DataMember]
        public string para_vIPCreacion
        {
            get { return _para_vIPCreacion; }
            set
            {
                if (_para_vIPCreacion != value)
                {
                    _para_vIPCreacion = value;
                    OnPropertyChanged("para_vIPCreacion");
                }
            }
        }
        private string _para_vIPCreacion;
    
        [DataMember]
        public System.DateTime para_dFechaCreacion
        {
            get { return _para_dFechaCreacion; }
            set
            {
                if (_para_dFechaCreacion != value)
                {
                    _para_dFechaCreacion = value;
                    OnPropertyChanged("para_dFechaCreacion");
                }
            }
        }
        private System.DateTime _para_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> para_sUsuarioModificacion
        {
            get { return _para_sUsuarioModificacion; }
            set
            {
                if (_para_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("para_sUsuarioModificacion", _para_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO3 != null && SE_USUARIO3.usua_sUsuarioId != value)
                        {
                            SE_USUARIO3 = null;
                        }
                    }
                    _para_sUsuarioModificacion = value;
                    OnPropertyChanged("para_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _para_sUsuarioModificacion;
    
        [DataMember]
        public string para_vIPModificacion
        {
            get { return _para_vIPModificacion; }
            set
            {
                if (_para_vIPModificacion != value)
                {
                    _para_vIPModificacion = value;
                    OnPropertyChanged("para_vIPModificacion");
                }
            }
        }
        private string _para_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> para_dFechaModificacion
        {
            get { return _para_dFechaModificacion; }
            set
            {
                if (_para_dFechaModificacion != value)
                {
                    _para_dFechaModificacion = value;
                    OnPropertyChanged("para_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _para_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AL_INSUMO> AL_INSUMO
        {
            get
            {
                if (_aL_INSUMO == null)
                {
                    _aL_INSUMO = new TrackableCollection<AL_INSUMO>();
                    _aL_INSUMO.CollectionChanged += FixupAL_INSUMO;
                }
                return _aL_INSUMO;
            }
            set
            {
                if (!ReferenceEquals(_aL_INSUMO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_INSUMO != null)
                    {
                        _aL_INSUMO.CollectionChanged -= FixupAL_INSUMO;
                    }
                    _aL_INSUMO = value;
                    if (_aL_INSUMO != null)
                    {
                        _aL_INSUMO.CollectionChanged += FixupAL_INSUMO;
                    }
                    OnNavigationPropertyChanged("AL_INSUMO");
                }
            }
        }
        private TrackableCollection<AL_INSUMO> _aL_INSUMO;
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTO> AL_MOVIMIENTO
        {
            get
            {
                if (_aL_MOVIMIENTO == null)
                {
                    _aL_MOVIMIENTO = new TrackableCollection<AL_MOVIMIENTO>();
                    _aL_MOVIMIENTO.CollectionChanged += FixupAL_MOVIMIENTO;
                }
                return _aL_MOVIMIENTO;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTO != null)
                    {
                        _aL_MOVIMIENTO.CollectionChanged -= FixupAL_MOVIMIENTO;
                    }
                    _aL_MOVIMIENTO = value;
                    if (_aL_MOVIMIENTO != null)
                    {
                        _aL_MOVIMIENTO.CollectionChanged += FixupAL_MOVIMIENTO;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTO");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTO> _aL_MOVIMIENTO;
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTO> AL_MOVIMIENTO1
        {
            get
            {
                if (_aL_MOVIMIENTO1 == null)
                {
                    _aL_MOVIMIENTO1 = new TrackableCollection<AL_MOVIMIENTO>();
                    _aL_MOVIMIENTO1.CollectionChanged += FixupAL_MOVIMIENTO1;
                }
                return _aL_MOVIMIENTO1;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTO1 != null)
                    {
                        _aL_MOVIMIENTO1.CollectionChanged -= FixupAL_MOVIMIENTO1;
                    }
                    _aL_MOVIMIENTO1 = value;
                    if (_aL_MOVIMIENTO1 != null)
                    {
                        _aL_MOVIMIENTO1.CollectionChanged += FixupAL_MOVIMIENTO1;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTO1");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTO> _aL_MOVIMIENTO1;
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTO> AL_MOVIMIENTO2
        {
            get
            {
                if (_aL_MOVIMIENTO2 == null)
                {
                    _aL_MOVIMIENTO2 = new TrackableCollection<AL_MOVIMIENTO>();
                    _aL_MOVIMIENTO2.CollectionChanged += FixupAL_MOVIMIENTO2;
                }
                return _aL_MOVIMIENTO2;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTO2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTO2 != null)
                    {
                        _aL_MOVIMIENTO2.CollectionChanged -= FixupAL_MOVIMIENTO2;
                    }
                    _aL_MOVIMIENTO2 = value;
                    if (_aL_MOVIMIENTO2 != null)
                    {
                        _aL_MOVIMIENTO2.CollectionChanged += FixupAL_MOVIMIENTO2;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTO2");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTO> _aL_MOVIMIENTO2;
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTO> AL_MOVIMIENTO3
        {
            get
            {
                if (_aL_MOVIMIENTO3 == null)
                {
                    _aL_MOVIMIENTO3 = new TrackableCollection<AL_MOVIMIENTO>();
                    _aL_MOVIMIENTO3.CollectionChanged += FixupAL_MOVIMIENTO3;
                }
                return _aL_MOVIMIENTO3;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTO3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTO3 != null)
                    {
                        _aL_MOVIMIENTO3.CollectionChanged -= FixupAL_MOVIMIENTO3;
                    }
                    _aL_MOVIMIENTO3 = value;
                    if (_aL_MOVIMIENTO3 != null)
                    {
                        _aL_MOVIMIENTO3.CollectionChanged += FixupAL_MOVIMIENTO3;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTO3");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTO> _aL_MOVIMIENTO3;
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTO> AL_MOVIMIENTO4
        {
            get
            {
                if (_aL_MOVIMIENTO4 == null)
                {
                    _aL_MOVIMIENTO4 = new TrackableCollection<AL_MOVIMIENTO>();
                    _aL_MOVIMIENTO4.CollectionChanged += FixupAL_MOVIMIENTO4;
                }
                return _aL_MOVIMIENTO4;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTO4, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTO4 != null)
                    {
                        _aL_MOVIMIENTO4.CollectionChanged -= FixupAL_MOVIMIENTO4;
                    }
                    _aL_MOVIMIENTO4 = value;
                    if (_aL_MOVIMIENTO4 != null)
                    {
                        _aL_MOVIMIENTO4.CollectionChanged += FixupAL_MOVIMIENTO4;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTO4");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTO> _aL_MOVIMIENTO4;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDO> AL_PEDIDO
        {
            get
            {
                if (_aL_PEDIDO == null)
                {
                    _aL_PEDIDO = new TrackableCollection<AL_PEDIDO>();
                    _aL_PEDIDO.CollectionChanged += FixupAL_PEDIDO;
                }
                return _aL_PEDIDO;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDO != null)
                    {
                        _aL_PEDIDO.CollectionChanged -= FixupAL_PEDIDO;
                    }
                    _aL_PEDIDO = value;
                    if (_aL_PEDIDO != null)
                    {
                        _aL_PEDIDO.CollectionChanged += FixupAL_PEDIDO;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDO");
                }
            }
        }
        private TrackableCollection<AL_PEDIDO> _aL_PEDIDO;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDO> AL_PEDIDO1
        {
            get
            {
                if (_aL_PEDIDO1 == null)
                {
                    _aL_PEDIDO1 = new TrackableCollection<AL_PEDIDO>();
                    _aL_PEDIDO1.CollectionChanged += FixupAL_PEDIDO1;
                }
                return _aL_PEDIDO1;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDO1 != null)
                    {
                        _aL_PEDIDO1.CollectionChanged -= FixupAL_PEDIDO1;
                    }
                    _aL_PEDIDO1 = value;
                    if (_aL_PEDIDO1 != null)
                    {
                        _aL_PEDIDO1.CollectionChanged += FixupAL_PEDIDO1;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDO1");
                }
            }
        }
        private TrackableCollection<AL_PEDIDO> _aL_PEDIDO1;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDO> AL_PEDIDO2
        {
            get
            {
                if (_aL_PEDIDO2 == null)
                {
                    _aL_PEDIDO2 = new TrackableCollection<AL_PEDIDO>();
                    _aL_PEDIDO2.CollectionChanged += FixupAL_PEDIDO2;
                }
                return _aL_PEDIDO2;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDO2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDO2 != null)
                    {
                        _aL_PEDIDO2.CollectionChanged -= FixupAL_PEDIDO2;
                    }
                    _aL_PEDIDO2 = value;
                    if (_aL_PEDIDO2 != null)
                    {
                        _aL_PEDIDO2.CollectionChanged += FixupAL_PEDIDO2;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDO2");
                }
            }
        }
        private TrackableCollection<AL_PEDIDO> _aL_PEDIDO2;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDO> AL_PEDIDO3
        {
            get
            {
                if (_aL_PEDIDO3 == null)
                {
                    _aL_PEDIDO3 = new TrackableCollection<AL_PEDIDO>();
                    _aL_PEDIDO3.CollectionChanged += FixupAL_PEDIDO3;
                }
                return _aL_PEDIDO3;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDO3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDO3 != null)
                    {
                        _aL_PEDIDO3.CollectionChanged -= FixupAL_PEDIDO3;
                    }
                    _aL_PEDIDO3 = value;
                    if (_aL_PEDIDO3 != null)
                    {
                        _aL_PEDIDO3.CollectionChanged += FixupAL_PEDIDO3;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDO3");
                }
            }
        }
        private TrackableCollection<AL_PEDIDO> _aL_PEDIDO3;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDO> AL_PEDIDO4
        {
            get
            {
                if (_aL_PEDIDO4 == null)
                {
                    _aL_PEDIDO4 = new TrackableCollection<AL_PEDIDO>();
                    _aL_PEDIDO4.CollectionChanged += FixupAL_PEDIDO4;
                }
                return _aL_PEDIDO4;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDO4, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDO4 != null)
                    {
                        _aL_PEDIDO4.CollectionChanged -= FixupAL_PEDIDO4;
                    }
                    _aL_PEDIDO4 = value;
                    if (_aL_PEDIDO4 != null)
                    {
                        _aL_PEDIDO4.CollectionChanged += FixupAL_PEDIDO4;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDO4");
                }
            }
        }
        private TrackableCollection<AL_PEDIDO> _aL_PEDIDO4;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDO> AL_PEDIDO5
        {
            get
            {
                if (_aL_PEDIDO5 == null)
                {
                    _aL_PEDIDO5 = new TrackableCollection<AL_PEDIDO>();
                    _aL_PEDIDO5.CollectionChanged += FixupAL_PEDIDO5;
                }
                return _aL_PEDIDO5;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDO5, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDO5 != null)
                    {
                        _aL_PEDIDO5.CollectionChanged -= FixupAL_PEDIDO5;
                    }
                    _aL_PEDIDO5 = value;
                    if (_aL_PEDIDO5 != null)
                    {
                        _aL_PEDIDO5.CollectionChanged += FixupAL_PEDIDO5;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDO5");
                }
            }
        }
        private TrackableCollection<AL_PEDIDO> _aL_PEDIDO5;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDOHISTORICO> AL_PEDIDOHISTORICO
        {
            get
            {
                if (_aL_PEDIDOHISTORICO == null)
                {
                    _aL_PEDIDOHISTORICO = new TrackableCollection<AL_PEDIDOHISTORICO>();
                    _aL_PEDIDOHISTORICO.CollectionChanged += FixupAL_PEDIDOHISTORICO;
                }
                return _aL_PEDIDOHISTORICO;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDOHISTORICO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDOHISTORICO != null)
                    {
                        _aL_PEDIDOHISTORICO.CollectionChanged -= FixupAL_PEDIDOHISTORICO;
                    }
                    _aL_PEDIDOHISTORICO = value;
                    if (_aL_PEDIDOHISTORICO != null)
                    {
                        _aL_PEDIDOHISTORICO.CollectionChanged += FixupAL_PEDIDOHISTORICO;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDOHISTORICO");
                }
            }
        }
        private TrackableCollection<AL_PEDIDOHISTORICO> _aL_PEDIDOHISTORICO;
    
        [DataMember]
        public TrackableCollection<CL_SERVICIO> CL_SERVICIO
        {
            get
            {
                if (_cL_SERVICIO == null)
                {
                    _cL_SERVICIO = new TrackableCollection<CL_SERVICIO>();
                    _cL_SERVICIO.CollectionChanged += FixupCL_SERVICIO;
                }
                return _cL_SERVICIO;
            }
            set
            {
                if (!ReferenceEquals(_cL_SERVICIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_SERVICIO != null)
                    {
                        _cL_SERVICIO.CollectionChanged -= FixupCL_SERVICIO;
                    }
                    _cL_SERVICIO = value;
                    if (_cL_SERVICIO != null)
                    {
                        _cL_SERVICIO.CollectionChanged += FixupCL_SERVICIO;
                    }
                    OnNavigationPropertyChanged("CL_SERVICIO");
                }
            }
        }
        private TrackableCollection<CL_SERVICIO> _cL_SERVICIO;
    
        [DataMember]
        public TrackableCollection<CL_TICKET> CL_TICKET
        {
            get
            {
                if (_cL_TICKET == null)
                {
                    _cL_TICKET = new TrackableCollection<CL_TICKET>();
                    _cL_TICKET.CollectionChanged += FixupCL_TICKET;
                }
                return _cL_TICKET;
            }
            set
            {
                if (!ReferenceEquals(_cL_TICKET, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_TICKET != null)
                    {
                        _cL_TICKET.CollectionChanged -= FixupCL_TICKET;
                    }
                    _cL_TICKET = value;
                    if (_cL_TICKET != null)
                    {
                        _cL_TICKET.CollectionChanged += FixupCL_TICKET;
                    }
                    OnNavigationPropertyChanged("CL_TICKET");
                }
            }
        }
        private TrackableCollection<CL_TICKET> _cL_TICKET;
    
        [DataMember]
        public TrackableCollection<CL_TICKET> CL_TICKET1
        {
            get
            {
                if (_cL_TICKET1 == null)
                {
                    _cL_TICKET1 = new TrackableCollection<CL_TICKET>();
                    _cL_TICKET1.CollectionChanged += FixupCL_TICKET1;
                }
                return _cL_TICKET1;
            }
            set
            {
                if (!ReferenceEquals(_cL_TICKET1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_TICKET1 != null)
                    {
                        _cL_TICKET1.CollectionChanged -= FixupCL_TICKET1;
                    }
                    _cL_TICKET1 = value;
                    if (_cL_TICKET1 != null)
                    {
                        _cL_TICKET1.CollectionChanged += FixupCL_TICKET1;
                    }
                    OnNavigationPropertyChanged("CL_TICKET1");
                }
            }
        }
        private TrackableCollection<CL_TICKET> _cL_TICKET1;
    
        [DataMember]
        public TrackableCollection<CL_TICKET> CL_TICKET2
        {
            get
            {
                if (_cL_TICKET2 == null)
                {
                    _cL_TICKET2 = new TrackableCollection<CL_TICKET>();
                    _cL_TICKET2.CollectionChanged += FixupCL_TICKET2;
                }
                return _cL_TICKET2;
            }
            set
            {
                if (!ReferenceEquals(_cL_TICKET2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_TICKET2 != null)
                    {
                        _cL_TICKET2.CollectionChanged -= FixupCL_TICKET2;
                    }
                    _cL_TICKET2 = value;
                    if (_cL_TICKET2 != null)
                    {
                        _cL_TICKET2.CollectionChanged += FixupCL_TICKET2;
                    }
                    OnNavigationPropertyChanged("CL_TICKET2");
                }
            }
        }
        private TrackableCollection<CL_TICKET> _cL_TICKET2;
    
        [DataMember]
        public TrackableCollection<CL_VENTANILLA> CL_VENTANILLA
        {
            get
            {
                if (_cL_VENTANILLA == null)
                {
                    _cL_VENTANILLA = new TrackableCollection<CL_VENTANILLA>();
                    _cL_VENTANILLA.CollectionChanged += FixupCL_VENTANILLA;
                }
                return _cL_VENTANILLA;
            }
            set
            {
                if (!ReferenceEquals(_cL_VENTANILLA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_VENTANILLA != null)
                    {
                        _cL_VENTANILLA.CollectionChanged -= FixupCL_VENTANILLA;
                    }
                    _cL_VENTANILLA = value;
                    if (_cL_VENTANILLA != null)
                    {
                        _cL_VENTANILLA.CollectionChanged += FixupCL_VENTANILLA;
                    }
                    OnNavigationPropertyChanged("CL_VENTANILLA");
                }
            }
        }
        private TrackableCollection<CL_VENTANILLA> _cL_VENTANILLA;
    
        [DataMember]
        public TrackableCollection<CO_CUENTACORRIENTE> CO_CUENTACORRIENTE
        {
            get
            {
                if (_cO_CUENTACORRIENTE == null)
                {
                    _cO_CUENTACORRIENTE = new TrackableCollection<CO_CUENTACORRIENTE>();
                    _cO_CUENTACORRIENTE.CollectionChanged += FixupCO_CUENTACORRIENTE;
                }
                return _cO_CUENTACORRIENTE;
            }
            set
            {
                if (!ReferenceEquals(_cO_CUENTACORRIENTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_CUENTACORRIENTE != null)
                    {
                        _cO_CUENTACORRIENTE.CollectionChanged -= FixupCO_CUENTACORRIENTE;
                    }
                    _cO_CUENTACORRIENTE = value;
                    if (_cO_CUENTACORRIENTE != null)
                    {
                        _cO_CUENTACORRIENTE.CollectionChanged += FixupCO_CUENTACORRIENTE;
                    }
                    OnNavigationPropertyChanged("CO_CUENTACORRIENTE");
                }
            }
        }
        private TrackableCollection<CO_CUENTACORRIENTE> _cO_CUENTACORRIENTE;
    
        [DataMember]
        public TrackableCollection<CO_CUENTACORRIENTE> CO_CUENTACORRIENTE1
        {
            get
            {
                if (_cO_CUENTACORRIENTE1 == null)
                {
                    _cO_CUENTACORRIENTE1 = new TrackableCollection<CO_CUENTACORRIENTE>();
                    _cO_CUENTACORRIENTE1.CollectionChanged += FixupCO_CUENTACORRIENTE1;
                }
                return _cO_CUENTACORRIENTE1;
            }
            set
            {
                if (!ReferenceEquals(_cO_CUENTACORRIENTE1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_CUENTACORRIENTE1 != null)
                    {
                        _cO_CUENTACORRIENTE1.CollectionChanged -= FixupCO_CUENTACORRIENTE1;
                    }
                    _cO_CUENTACORRIENTE1 = value;
                    if (_cO_CUENTACORRIENTE1 != null)
                    {
                        _cO_CUENTACORRIENTE1.CollectionChanged += FixupCO_CUENTACORRIENTE1;
                    }
                    OnNavigationPropertyChanged("CO_CUENTACORRIENTE1");
                }
            }
        }
        private TrackableCollection<CO_CUENTACORRIENTE> _cO_CUENTACORRIENTE1;
    
        [DataMember]
        public TrackableCollection<CO_REMESA> CO_REMESA
        {
            get
            {
                if (_cO_REMESA == null)
                {
                    _cO_REMESA = new TrackableCollection<CO_REMESA>();
                    _cO_REMESA.CollectionChanged += FixupCO_REMESA;
                }
                return _cO_REMESA;
            }
            set
            {
                if (!ReferenceEquals(_cO_REMESA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_REMESA != null)
                    {
                        _cO_REMESA.CollectionChanged -= FixupCO_REMESA;
                    }
                    _cO_REMESA = value;
                    if (_cO_REMESA != null)
                    {
                        _cO_REMESA.CollectionChanged += FixupCO_REMESA;
                    }
                    OnNavigationPropertyChanged("CO_REMESA");
                }
            }
        }
        private TrackableCollection<CO_REMESA> _cO_REMESA;
    
        [DataMember]
        public TrackableCollection<CO_REMESADETALLE> CO_REMESADETALLE
        {
            get
            {
                if (_cO_REMESADETALLE == null)
                {
                    _cO_REMESADETALLE = new TrackableCollection<CO_REMESADETALLE>();
                    _cO_REMESADETALLE.CollectionChanged += FixupCO_REMESADETALLE;
                }
                return _cO_REMESADETALLE;
            }
            set
            {
                if (!ReferenceEquals(_cO_REMESADETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_REMESADETALLE != null)
                    {
                        _cO_REMESADETALLE.CollectionChanged -= FixupCO_REMESADETALLE;
                    }
                    _cO_REMESADETALLE = value;
                    if (_cO_REMESADETALLE != null)
                    {
                        _cO_REMESADETALLE.CollectionChanged += FixupCO_REMESADETALLE;
                    }
                    OnNavigationPropertyChanged("CO_REMESADETALLE");
                }
            }
        }
        private TrackableCollection<CO_REMESADETALLE> _cO_REMESADETALLE;
    
        [DataMember]
        public TrackableCollection<CO_TRANSACCION> CO_TRANSACCION
        {
            get
            {
                if (_cO_TRANSACCION == null)
                {
                    _cO_TRANSACCION = new TrackableCollection<CO_TRANSACCION>();
                    _cO_TRANSACCION.CollectionChanged += FixupCO_TRANSACCION;
                }
                return _cO_TRANSACCION;
            }
            set
            {
                if (!ReferenceEquals(_cO_TRANSACCION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_TRANSACCION != null)
                    {
                        _cO_TRANSACCION.CollectionChanged -= FixupCO_TRANSACCION;
                    }
                    _cO_TRANSACCION = value;
                    if (_cO_TRANSACCION != null)
                    {
                        _cO_TRANSACCION.CollectionChanged += FixupCO_TRANSACCION;
                    }
                    OnNavigationPropertyChanged("CO_TRANSACCION");
                }
            }
        }
        private TrackableCollection<CO_TRANSACCION> _cO_TRANSACCION;
    
        [DataMember]
        public TrackableCollection<CO_TRANSACCION> CO_TRANSACCION1
        {
            get
            {
                if (_cO_TRANSACCION1 == null)
                {
                    _cO_TRANSACCION1 = new TrackableCollection<CO_TRANSACCION>();
                    _cO_TRANSACCION1.CollectionChanged += FixupCO_TRANSACCION1;
                }
                return _cO_TRANSACCION1;
            }
            set
            {
                if (!ReferenceEquals(_cO_TRANSACCION1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_TRANSACCION1 != null)
                    {
                        _cO_TRANSACCION1.CollectionChanged -= FixupCO_TRANSACCION1;
                    }
                    _cO_TRANSACCION1 = value;
                    if (_cO_TRANSACCION1 != null)
                    {
                        _cO_TRANSACCION1.CollectionChanged += FixupCO_TRANSACCION1;
                    }
                    OnNavigationPropertyChanged("CO_TRANSACCION1");
                }
            }
        }
        private TrackableCollection<CO_TRANSACCION> _cO_TRANSACCION1;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIO> RE_ACTOMIGRATORIO
        {
            get
            {
                if (_rE_ACTOMIGRATORIO == null)
                {
                    _rE_ACTOMIGRATORIO = new TrackableCollection<RE_ACTOMIGRATORIO>();
                    _rE_ACTOMIGRATORIO.CollectionChanged += FixupRE_ACTOMIGRATORIO;
                }
                return _rE_ACTOMIGRATORIO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIO != null)
                    {
                        _rE_ACTOMIGRATORIO.CollectionChanged -= FixupRE_ACTOMIGRATORIO;
                    }
                    _rE_ACTOMIGRATORIO = value;
                    if (_rE_ACTOMIGRATORIO != null)
                    {
                        _rE_ACTOMIGRATORIO.CollectionChanged += FixupRE_ACTOMIGRATORIO;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIO");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIO> _rE_ACTOMIGRATORIO;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIO> RE_ACTOMIGRATORIO1
        {
            get
            {
                if (_rE_ACTOMIGRATORIO1 == null)
                {
                    _rE_ACTOMIGRATORIO1 = new TrackableCollection<RE_ACTOMIGRATORIO>();
                    _rE_ACTOMIGRATORIO1.CollectionChanged += FixupRE_ACTOMIGRATORIO1;
                }
                return _rE_ACTOMIGRATORIO1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIO1 != null)
                    {
                        _rE_ACTOMIGRATORIO1.CollectionChanged -= FixupRE_ACTOMIGRATORIO1;
                    }
                    _rE_ACTOMIGRATORIO1 = value;
                    if (_rE_ACTOMIGRATORIO1 != null)
                    {
                        _rE_ACTOMIGRATORIO1.CollectionChanged += FixupRE_ACTOMIGRATORIO1;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIO1");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIO> _rE_ACTOMIGRATORIO1;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIOFORMATO> RE_ACTOMIGRATORIOFORMATO
        {
            get
            {
                if (_rE_ACTOMIGRATORIOFORMATO == null)
                {
                    _rE_ACTOMIGRATORIOFORMATO = new TrackableCollection<RE_ACTOMIGRATORIOFORMATO>();
                    _rE_ACTOMIGRATORIOFORMATO.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO;
                }
                return _rE_ACTOMIGRATORIOFORMATO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIOFORMATO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIOFORMATO != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO.CollectionChanged -= FixupRE_ACTOMIGRATORIOFORMATO;
                    }
                    _rE_ACTOMIGRATORIOFORMATO = value;
                    if (_rE_ACTOMIGRATORIOFORMATO != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIOFORMATO");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIOFORMATO> _rE_ACTOMIGRATORIOFORMATO;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIOFORMATO> RE_ACTOMIGRATORIOFORMATO1
        {
            get
            {
                if (_rE_ACTOMIGRATORIOFORMATO1 == null)
                {
                    _rE_ACTOMIGRATORIOFORMATO1 = new TrackableCollection<RE_ACTOMIGRATORIOFORMATO>();
                    _rE_ACTOMIGRATORIOFORMATO1.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO1;
                }
                return _rE_ACTOMIGRATORIOFORMATO1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIOFORMATO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIOFORMATO1 != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO1.CollectionChanged -= FixupRE_ACTOMIGRATORIOFORMATO1;
                    }
                    _rE_ACTOMIGRATORIOFORMATO1 = value;
                    if (_rE_ACTOMIGRATORIOFORMATO1 != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO1.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO1;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIOFORMATO1");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIOFORMATO> _rE_ACTOMIGRATORIOFORMATO1;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIOFORMATO> RE_ACTOMIGRATORIOFORMATO2
        {
            get
            {
                if (_rE_ACTOMIGRATORIOFORMATO2 == null)
                {
                    _rE_ACTOMIGRATORIOFORMATO2 = new TrackableCollection<RE_ACTOMIGRATORIOFORMATO>();
                    _rE_ACTOMIGRATORIOFORMATO2.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO2;
                }
                return _rE_ACTOMIGRATORIOFORMATO2;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIOFORMATO2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIOFORMATO2 != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO2.CollectionChanged -= FixupRE_ACTOMIGRATORIOFORMATO2;
                    }
                    _rE_ACTOMIGRATORIOFORMATO2 = value;
                    if (_rE_ACTOMIGRATORIOFORMATO2 != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO2.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO2;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIOFORMATO2");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIOFORMATO> _rE_ACTOMIGRATORIOFORMATO2;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIOFORMATO> RE_ACTOMIGRATORIOFORMATO3
        {
            get
            {
                if (_rE_ACTOMIGRATORIOFORMATO3 == null)
                {
                    _rE_ACTOMIGRATORIOFORMATO3 = new TrackableCollection<RE_ACTOMIGRATORIOFORMATO>();
                    _rE_ACTOMIGRATORIOFORMATO3.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO3;
                }
                return _rE_ACTOMIGRATORIOFORMATO3;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIOFORMATO3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIOFORMATO3 != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO3.CollectionChanged -= FixupRE_ACTOMIGRATORIOFORMATO3;
                    }
                    _rE_ACTOMIGRATORIOFORMATO3 = value;
                    if (_rE_ACTOMIGRATORIOFORMATO3 != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO3.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO3;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIOFORMATO3");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIOFORMATO> _rE_ACTOMIGRATORIOFORMATO3;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIOFORMATO> RE_ACTOMIGRATORIOFORMATO4
        {
            get
            {
                if (_rE_ACTOMIGRATORIOFORMATO4 == null)
                {
                    _rE_ACTOMIGRATORIOFORMATO4 = new TrackableCollection<RE_ACTOMIGRATORIOFORMATO>();
                    _rE_ACTOMIGRATORIOFORMATO4.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO4;
                }
                return _rE_ACTOMIGRATORIOFORMATO4;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIOFORMATO4, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIOFORMATO4 != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO4.CollectionChanged -= FixupRE_ACTOMIGRATORIOFORMATO4;
                    }
                    _rE_ACTOMIGRATORIOFORMATO4 = value;
                    if (_rE_ACTOMIGRATORIOFORMATO4 != null)
                    {
                        _rE_ACTOMIGRATORIOFORMATO4.CollectionChanged += FixupRE_ACTOMIGRATORIOFORMATO4;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIOFORMATO4");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIOFORMATO> _rE_ACTOMIGRATORIOFORMATO4;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALDOCUMENTO> RE_ACTONOTARIALDOCUMENTO
        {
            get
            {
                if (_rE_ACTONOTARIALDOCUMENTO == null)
                {
                    _rE_ACTONOTARIALDOCUMENTO = new TrackableCollection<RE_ACTONOTARIALDOCUMENTO>();
                    _rE_ACTONOTARIALDOCUMENTO.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO;
                }
                return _rE_ACTONOTARIALDOCUMENTO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALDOCUMENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALDOCUMENTO != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO.CollectionChanged -= FixupRE_ACTONOTARIALDOCUMENTO;
                    }
                    _rE_ACTONOTARIALDOCUMENTO = value;
                    if (_rE_ACTONOTARIALDOCUMENTO != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALDOCUMENTO");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALDOCUMENTO> _rE_ACTONOTARIALDOCUMENTO;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALDOCUMENTO> RE_ACTONOTARIALDOCUMENTO1
        {
            get
            {
                if (_rE_ACTONOTARIALDOCUMENTO1 == null)
                {
                    _rE_ACTONOTARIALDOCUMENTO1 = new TrackableCollection<RE_ACTONOTARIALDOCUMENTO>();
                    _rE_ACTONOTARIALDOCUMENTO1.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO1;
                }
                return _rE_ACTONOTARIALDOCUMENTO1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALDOCUMENTO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALDOCUMENTO1 != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO1.CollectionChanged -= FixupRE_ACTONOTARIALDOCUMENTO1;
                    }
                    _rE_ACTONOTARIALDOCUMENTO1 = value;
                    if (_rE_ACTONOTARIALDOCUMENTO1 != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO1.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO1;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALDOCUMENTO1");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALDOCUMENTO> _rE_ACTONOTARIALDOCUMENTO1;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALDOCUMENTO> RE_ACTONOTARIALDOCUMENTO2
        {
            get
            {
                if (_rE_ACTONOTARIALDOCUMENTO2 == null)
                {
                    _rE_ACTONOTARIALDOCUMENTO2 = new TrackableCollection<RE_ACTONOTARIALDOCUMENTO>();
                    _rE_ACTONOTARIALDOCUMENTO2.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO2;
                }
                return _rE_ACTONOTARIALDOCUMENTO2;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALDOCUMENTO2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALDOCUMENTO2 != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO2.CollectionChanged -= FixupRE_ACTONOTARIALDOCUMENTO2;
                    }
                    _rE_ACTONOTARIALDOCUMENTO2 = value;
                    if (_rE_ACTONOTARIALDOCUMENTO2 != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO2.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO2;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALDOCUMENTO2");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALDOCUMENTO> _rE_ACTONOTARIALDOCUMENTO2;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALDOCUMENTO> RE_ACTONOTARIALDOCUMENTO3
        {
            get
            {
                if (_rE_ACTONOTARIALDOCUMENTO3 == null)
                {
                    _rE_ACTONOTARIALDOCUMENTO3 = new TrackableCollection<RE_ACTONOTARIALDOCUMENTO>();
                    _rE_ACTONOTARIALDOCUMENTO3.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO3;
                }
                return _rE_ACTONOTARIALDOCUMENTO3;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALDOCUMENTO3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALDOCUMENTO3 != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO3.CollectionChanged -= FixupRE_ACTONOTARIALDOCUMENTO3;
                    }
                    _rE_ACTONOTARIALDOCUMENTO3 = value;
                    if (_rE_ACTONOTARIALDOCUMENTO3 != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO3.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO3;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALDOCUMENTO3");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALDOCUMENTO> _rE_ACTONOTARIALDOCUMENTO3;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALSEGUIMIENTO> RE_ACTONOTARIALSEGUIMIENTO
        {
            get
            {
                if (_rE_ACTONOTARIALSEGUIMIENTO == null)
                {
                    _rE_ACTONOTARIALSEGUIMIENTO = new TrackableCollection<RE_ACTONOTARIALSEGUIMIENTO>();
                    _rE_ACTONOTARIALSEGUIMIENTO.CollectionChanged += FixupRE_ACTONOTARIALSEGUIMIENTO;
                }
                return _rE_ACTONOTARIALSEGUIMIENTO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALSEGUIMIENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALSEGUIMIENTO != null)
                    {
                        _rE_ACTONOTARIALSEGUIMIENTO.CollectionChanged -= FixupRE_ACTONOTARIALSEGUIMIENTO;
                    }
                    _rE_ACTONOTARIALSEGUIMIENTO = value;
                    if (_rE_ACTONOTARIALSEGUIMIENTO != null)
                    {
                        _rE_ACTONOTARIALSEGUIMIENTO.CollectionChanged += FixupRE_ACTONOTARIALSEGUIMIENTO;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALSEGUIMIENTO");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALSEGUIMIENTO> _rE_ACTONOTARIALSEGUIMIENTO;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONPARTICIPANTE> RE_ACTUACIONPARTICIPANTE
        {
            get
            {
                if (_rE_ACTUACIONPARTICIPANTE == null)
                {
                    _rE_ACTUACIONPARTICIPANTE = new TrackableCollection<RE_ACTUACIONPARTICIPANTE>();
                    _rE_ACTUACIONPARTICIPANTE.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE;
                }
                return _rE_ACTUACIONPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONPARTICIPANTE != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE.CollectionChanged -= FixupRE_ACTUACIONPARTICIPANTE;
                    }
                    _rE_ACTUACIONPARTICIPANTE = value;
                    if (_rE_ACTUACIONPARTICIPANTE != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONPARTICIPANTE> _rE_ACTUACIONPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONPARTICIPANTE> RE_ACTUACIONPARTICIPANTE1
        {
            get
            {
                if (_rE_ACTUACIONPARTICIPANTE1 == null)
                {
                    _rE_ACTUACIONPARTICIPANTE1 = new TrackableCollection<RE_ACTUACIONPARTICIPANTE>();
                    _rE_ACTUACIONPARTICIPANTE1.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE1;
                }
                return _rE_ACTUACIONPARTICIPANTE1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONPARTICIPANTE1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONPARTICIPANTE1 != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE1.CollectionChanged -= FixupRE_ACTUACIONPARTICIPANTE1;
                    }
                    _rE_ACTUACIONPARTICIPANTE1 = value;
                    if (_rE_ACTUACIONPARTICIPANTE1 != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE1.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE1;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONPARTICIPANTE1");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONPARTICIPANTE> _rE_ACTUACIONPARTICIPANTE1;
    
        [DataMember]
        public TrackableCollection<RE_EMPRESA> RE_EMPRESA
        {
            get
            {
                if (_rE_EMPRESA == null)
                {
                    _rE_EMPRESA = new TrackableCollection<RE_EMPRESA>();
                    _rE_EMPRESA.CollectionChanged += FixupRE_EMPRESA;
                }
                return _rE_EMPRESA;
            }
            set
            {
                if (!ReferenceEquals(_rE_EMPRESA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_EMPRESA != null)
                    {
                        _rE_EMPRESA.CollectionChanged -= FixupRE_EMPRESA;
                    }
                    _rE_EMPRESA = value;
                    if (_rE_EMPRESA != null)
                    {
                        _rE_EMPRESA.CollectionChanged += FixupRE_EMPRESA;
                    }
                    OnNavigationPropertyChanged("RE_EMPRESA");
                }
            }
        }
        private TrackableCollection<RE_EMPRESA> _rE_EMPRESA;
    
        [DataMember]
        public TrackableCollection<RE_EMPRESA> RE_EMPRESA1
        {
            get
            {
                if (_rE_EMPRESA1 == null)
                {
                    _rE_EMPRESA1 = new TrackableCollection<RE_EMPRESA>();
                    _rE_EMPRESA1.CollectionChanged += FixupRE_EMPRESA1;
                }
                return _rE_EMPRESA1;
            }
            set
            {
                if (!ReferenceEquals(_rE_EMPRESA1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_EMPRESA1 != null)
                    {
                        _rE_EMPRESA1.CollectionChanged -= FixupRE_EMPRESA1;
                    }
                    _rE_EMPRESA1 = value;
                    if (_rE_EMPRESA1 != null)
                    {
                        _rE_EMPRESA1.CollectionChanged += FixupRE_EMPRESA1;
                    }
                    OnNavigationPropertyChanged("RE_EMPRESA1");
                }
            }
        }
        private TrackableCollection<RE_EMPRESA> _rE_EMPRESA1;
    
        [DataMember]
        public TrackableCollection<RE_PERSONAFILIACION> RE_PERSONAFILIACION
        {
            get
            {
                if (_rE_PERSONAFILIACION == null)
                {
                    _rE_PERSONAFILIACION = new TrackableCollection<RE_PERSONAFILIACION>();
                    _rE_PERSONAFILIACION.CollectionChanged += FixupRE_PERSONAFILIACION;
                }
                return _rE_PERSONAFILIACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONAFILIACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONAFILIACION != null)
                    {
                        _rE_PERSONAFILIACION.CollectionChanged -= FixupRE_PERSONAFILIACION;
                    }
                    _rE_PERSONAFILIACION = value;
                    if (_rE_PERSONAFILIACION != null)
                    {
                        _rE_PERSONAFILIACION.CollectionChanged += FixupRE_PERSONAFILIACION;
                    }
                    OnNavigationPropertyChanged("RE_PERSONAFILIACION");
                }
            }
        }
        private TrackableCollection<RE_PERSONAFILIACION> _rE_PERSONAFILIACION;
    
        [DataMember]
        public TrackableCollection<RE_PERSONAFILIACION> RE_PERSONAFILIACION1
        {
            get
            {
                if (_rE_PERSONAFILIACION1 == null)
                {
                    _rE_PERSONAFILIACION1 = new TrackableCollection<RE_PERSONAFILIACION>();
                    _rE_PERSONAFILIACION1.CollectionChanged += FixupRE_PERSONAFILIACION1;
                }
                return _rE_PERSONAFILIACION1;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONAFILIACION1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONAFILIACION1 != null)
                    {
                        _rE_PERSONAFILIACION1.CollectionChanged -= FixupRE_PERSONAFILIACION1;
                    }
                    _rE_PERSONAFILIACION1 = value;
                    if (_rE_PERSONAFILIACION1 != null)
                    {
                        _rE_PERSONAFILIACION1.CollectionChanged += FixupRE_PERSONAFILIACION1;
                    }
                    OnNavigationPropertyChanged("RE_PERSONAFILIACION1");
                }
            }
        }
        private TrackableCollection<RE_PERSONAFILIACION> _rE_PERSONAFILIACION1;
    
        [DataMember]
        public TrackableCollection<RE_PERSONAFOTO> RE_PERSONAFOTO
        {
            get
            {
                if (_rE_PERSONAFOTO == null)
                {
                    _rE_PERSONAFOTO = new TrackableCollection<RE_PERSONAFOTO>();
                    _rE_PERSONAFOTO.CollectionChanged += FixupRE_PERSONAFOTO;
                }
                return _rE_PERSONAFOTO;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONAFOTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONAFOTO != null)
                    {
                        _rE_PERSONAFOTO.CollectionChanged -= FixupRE_PERSONAFOTO;
                    }
                    _rE_PERSONAFOTO = value;
                    if (_rE_PERSONAFOTO != null)
                    {
                        _rE_PERSONAFOTO.CollectionChanged += FixupRE_PERSONAFOTO;
                    }
                    OnNavigationPropertyChanged("RE_PERSONAFOTO");
                }
            }
        }
        private TrackableCollection<RE_PERSONAFOTO> _rE_PERSONAFOTO;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROUNICO> RE_REGISTROUNICO
        {
            get
            {
                if (_rE_REGISTROUNICO == null)
                {
                    _rE_REGISTROUNICO = new TrackableCollection<RE_REGISTROUNICO>();
                    _rE_REGISTROUNICO.CollectionChanged += FixupRE_REGISTROUNICO;
                }
                return _rE_REGISTROUNICO;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROUNICO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROUNICO != null)
                    {
                        _rE_REGISTROUNICO.CollectionChanged -= FixupRE_REGISTROUNICO;
                    }
                    _rE_REGISTROUNICO = value;
                    if (_rE_REGISTROUNICO != null)
                    {
                        _rE_REGISTROUNICO.CollectionChanged += FixupRE_REGISTROUNICO;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROUNICO");
                }
            }
        }
        private TrackableCollection<RE_REGISTROUNICO> _rE_REGISTROUNICO;
    
        [DataMember]
        public TrackableCollection<SE_FORMULARIO> SE_FORMULARIO
        {
            get
            {
                if (_sE_FORMULARIO == null)
                {
                    _sE_FORMULARIO = new TrackableCollection<SE_FORMULARIO>();
                    _sE_FORMULARIO.CollectionChanged += FixupSE_FORMULARIO;
                }
                return _sE_FORMULARIO;
            }
            set
            {
                if (!ReferenceEquals(_sE_FORMULARIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_FORMULARIO != null)
                    {
                        _sE_FORMULARIO.CollectionChanged -= FixupSE_FORMULARIO;
                    }
                    _sE_FORMULARIO = value;
                    if (_sE_FORMULARIO != null)
                    {
                        _sE_FORMULARIO.CollectionChanged += FixupSE_FORMULARIO;
                    }
                    OnNavigationPropertyChanged("SE_FORMULARIO");
                }
            }
        }
        private TrackableCollection<SE_FORMULARIO> _sE_FORMULARIO;
    
        [DataMember]
        public TrackableCollection<SE_ROLCONFIGURACION> SE_ROLCONFIGURACION
        {
            get
            {
                if (_sE_ROLCONFIGURACION == null)
                {
                    _sE_ROLCONFIGURACION = new TrackableCollection<SE_ROLCONFIGURACION>();
                    _sE_ROLCONFIGURACION.CollectionChanged += FixupSE_ROLCONFIGURACION;
                }
                return _sE_ROLCONFIGURACION;
            }
            set
            {
                if (!ReferenceEquals(_sE_ROLCONFIGURACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_ROLCONFIGURACION != null)
                    {
                        _sE_ROLCONFIGURACION.CollectionChanged -= FixupSE_ROLCONFIGURACION;
                    }
                    _sE_ROLCONFIGURACION = value;
                    if (_sE_ROLCONFIGURACION != null)
                    {
                        _sE_ROLCONFIGURACION.CollectionChanged += FixupSE_ROLCONFIGURACION;
                    }
                    OnNavigationPropertyChanged("SE_ROLCONFIGURACION");
                }
            }
        }
        private TrackableCollection<SE_ROLCONFIGURACION> _sE_ROLCONFIGURACION;
    
        [DataMember]
        public TrackableCollection<SE_USUARIO> SE_USUARIO
        {
            get
            {
                if (_sE_USUARIO == null)
                {
                    _sE_USUARIO = new TrackableCollection<SE_USUARIO>();
                    _sE_USUARIO.CollectionChanged += FixupSE_USUARIO;
                }
                return _sE_USUARIO;
            }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_USUARIO != null)
                    {
                        _sE_USUARIO.CollectionChanged -= FixupSE_USUARIO;
                    }
                    _sE_USUARIO = value;
                    if (_sE_USUARIO != null)
                    {
                        _sE_USUARIO.CollectionChanged += FixupSE_USUARIO;
                    }
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private TrackableCollection<SE_USUARIO> _sE_USUARIO;
    
        [DataMember]
        public TrackableCollection<SE_USUARIO> SE_USUARIO1
        {
            get
            {
                if (_sE_USUARIO1 == null)
                {
                    _sE_USUARIO1 = new TrackableCollection<SE_USUARIO>();
                    _sE_USUARIO1.CollectionChanged += FixupSE_USUARIO1;
                }
                return _sE_USUARIO1;
            }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_USUARIO1 != null)
                    {
                        _sE_USUARIO1.CollectionChanged -= FixupSE_USUARIO1;
                    }
                    _sE_USUARIO1 = value;
                    if (_sE_USUARIO1 != null)
                    {
                        _sE_USUARIO1.CollectionChanged += FixupSE_USUARIO1;
                    }
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private TrackableCollection<SE_USUARIO> _sE_USUARIO1;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO2
        {
            get { return _sE_USUARIO2; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO2, value))
                {
                    var previousValue = _sE_USUARIO2;
                    _sE_USUARIO2 = value;
                    FixupSE_USUARIO2(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO2");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO2;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO3
        {
            get { return _sE_USUARIO3; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO3, value))
                {
                    var previousValue = _sE_USUARIO3;
                    _sE_USUARIO3 = value;
                    FixupSE_USUARIO3(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO3");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO3;
    
        [DataMember]
        public TrackableCollection<SE_USUARIOROL> SE_USUARIOROL
        {
            get
            {
                if (_sE_USUARIOROL == null)
                {
                    _sE_USUARIOROL = new TrackableCollection<SE_USUARIOROL>();
                    _sE_USUARIOROL.CollectionChanged += FixupSE_USUARIOROL;
                }
                return _sE_USUARIOROL;
            }
            set
            {
                if (!ReferenceEquals(_sE_USUARIOROL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_USUARIOROL != null)
                    {
                        _sE_USUARIOROL.CollectionChanged -= FixupSE_USUARIOROL;
                    }
                    _sE_USUARIOROL = value;
                    if (_sE_USUARIOROL != null)
                    {
                        _sE_USUARIOROL.CollectionChanged += FixupSE_USUARIOROL;
                    }
                    OnNavigationPropertyChanged("SE_USUARIOROL");
                }
            }
        }
        private TrackableCollection<SE_USUARIOROL> _sE_USUARIOROL;
    
        [DataMember]
        public TrackableCollection<SE_USUARIOROL> SE_USUARIOROL1
        {
            get
            {
                if (_sE_USUARIOROL1 == null)
                {
                    _sE_USUARIOROL1 = new TrackableCollection<SE_USUARIOROL>();
                    _sE_USUARIOROL1.CollectionChanged += FixupSE_USUARIOROL1;
                }
                return _sE_USUARIOROL1;
            }
            set
            {
                if (!ReferenceEquals(_sE_USUARIOROL1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_USUARIOROL1 != null)
                    {
                        _sE_USUARIOROL1.CollectionChanged -= FixupSE_USUARIOROL1;
                    }
                    _sE_USUARIOROL1 = value;
                    if (_sE_USUARIOROL1 != null)
                    {
                        _sE_USUARIOROL1.CollectionChanged += FixupSE_USUARIOROL1;
                    }
                    OnNavigationPropertyChanged("SE_USUARIOROL1");
                }
            }
        }
        private TrackableCollection<SE_USUARIOROL> _sE_USUARIOROL1;
    
        [DataMember]
        public TrackableCollection<SI_AUDITORIA> SI_AUDITORIA
        {
            get
            {
                if (_sI_AUDITORIA == null)
                {
                    _sI_AUDITORIA = new TrackableCollection<SI_AUDITORIA>();
                    _sI_AUDITORIA.CollectionChanged += FixupSI_AUDITORIA;
                }
                return _sI_AUDITORIA;
            }
            set
            {
                if (!ReferenceEquals(_sI_AUDITORIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_AUDITORIA != null)
                    {
                        _sI_AUDITORIA.CollectionChanged -= FixupSI_AUDITORIA;
                    }
                    _sI_AUDITORIA = value;
                    if (_sI_AUDITORIA != null)
                    {
                        _sI_AUDITORIA.CollectionChanged += FixupSI_AUDITORIA;
                    }
                    OnNavigationPropertyChanged("SI_AUDITORIA");
                }
            }
        }
        private TrackableCollection<SI_AUDITORIA> _sI_AUDITORIA;
    
        [DataMember]
        public TrackableCollection<SI_AUDITORIA> SI_AUDITORIA1
        {
            get
            {
                if (_sI_AUDITORIA1 == null)
                {
                    _sI_AUDITORIA1 = new TrackableCollection<SI_AUDITORIA>();
                    _sI_AUDITORIA1.CollectionChanged += FixupSI_AUDITORIA1;
                }
                return _sI_AUDITORIA1;
            }
            set
            {
                if (!ReferenceEquals(_sI_AUDITORIA1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_AUDITORIA1 != null)
                    {
                        _sI_AUDITORIA1.CollectionChanged -= FixupSI_AUDITORIA1;
                    }
                    _sI_AUDITORIA1 = value;
                    if (_sI_AUDITORIA1 != null)
                    {
                        _sI_AUDITORIA1.CollectionChanged += FixupSI_AUDITORIA1;
                    }
                    OnNavigationPropertyChanged("SI_AUDITORIA1");
                }
            }
        }
        private TrackableCollection<SI_AUDITORIA> _sI_AUDITORIA1;
    
        [DataMember]
        public TrackableCollection<SI_AUDITORIA> SI_AUDITORIA2
        {
            get
            {
                if (_sI_AUDITORIA2 == null)
                {
                    _sI_AUDITORIA2 = new TrackableCollection<SI_AUDITORIA>();
                    _sI_AUDITORIA2.CollectionChanged += FixupSI_AUDITORIA2;
                }
                return _sI_AUDITORIA2;
            }
            set
            {
                if (!ReferenceEquals(_sI_AUDITORIA2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_AUDITORIA2 != null)
                    {
                        _sI_AUDITORIA2.CollectionChanged -= FixupSI_AUDITORIA2;
                    }
                    _sI_AUDITORIA2 = value;
                    if (_sI_AUDITORIA2 != null)
                    {
                        _sI_AUDITORIA2.CollectionChanged += FixupSI_AUDITORIA2;
                    }
                    OnNavigationPropertyChanged("SI_AUDITORIA2");
                }
            }
        }
        private TrackableCollection<SI_AUDITORIA> _sI_AUDITORIA2;
    
        [DataMember]
        public TrackableCollection<SI_BOVEDA> SI_BOVEDA
        {
            get
            {
                if (_sI_BOVEDA == null)
                {
                    _sI_BOVEDA = new TrackableCollection<SI_BOVEDA>();
                    _sI_BOVEDA.CollectionChanged += FixupSI_BOVEDA;
                }
                return _sI_BOVEDA;
            }
            set
            {
                if (!ReferenceEquals(_sI_BOVEDA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_BOVEDA != null)
                    {
                        _sI_BOVEDA.CollectionChanged -= FixupSI_BOVEDA;
                    }
                    _sI_BOVEDA = value;
                    if (_sI_BOVEDA != null)
                    {
                        _sI_BOVEDA.CollectionChanged += FixupSI_BOVEDA;
                    }
                    OnNavigationPropertyChanged("SI_BOVEDA");
                }
            }
        }
        private TrackableCollection<SI_BOVEDA> _sI_BOVEDA;
    
        [DataMember]
        public TrackableCollection<SI_OFICINACOMPLEMENTARIA> SI_OFICINACOMPLEMENTARIA
        {
            get
            {
                if (_sI_OFICINACOMPLEMENTARIA == null)
                {
                    _sI_OFICINACOMPLEMENTARIA = new TrackableCollection<SI_OFICINACOMPLEMENTARIA>();
                    _sI_OFICINACOMPLEMENTARIA.CollectionChanged += FixupSI_OFICINACOMPLEMENTARIA;
                }
                return _sI_OFICINACOMPLEMENTARIA;
            }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACOMPLEMENTARIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_OFICINACOMPLEMENTARIA != null)
                    {
                        _sI_OFICINACOMPLEMENTARIA.CollectionChanged -= FixupSI_OFICINACOMPLEMENTARIA;
                    }
                    _sI_OFICINACOMPLEMENTARIA = value;
                    if (_sI_OFICINACOMPLEMENTARIA != null)
                    {
                        _sI_OFICINACOMPLEMENTARIA.CollectionChanged += FixupSI_OFICINACOMPLEMENTARIA;
                    }
                    OnNavigationPropertyChanged("SI_OFICINACOMPLEMENTARIA");
                }
            }
        }
        private TrackableCollection<SI_OFICINACOMPLEMENTARIA> _sI_OFICINACOMPLEMENTARIA;
    
        [DataMember]
        public TrackableCollection<MA_SECCION> MA_SECCION
        {
            get
            {
                if (_mA_SECCION == null)
                {
                    _mA_SECCION = new TrackableCollection<MA_SECCION>();
                    _mA_SECCION.CollectionChanged += FixupMA_SECCION;
                }
                return _mA_SECCION;
            }
            set
            {
                if (!ReferenceEquals(_mA_SECCION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_mA_SECCION != null)
                    {
                        _mA_SECCION.CollectionChanged -= FixupMA_SECCION;
                    }
                    _mA_SECCION = value;
                    if (_mA_SECCION != null)
                    {
                        _mA_SECCION.CollectionChanged += FixupMA_SECCION;
                    }
                    OnNavigationPropertyChanged("MA_SECCION");
                }
            }
        }
        private TrackableCollection<MA_SECCION> _mA_SECCION;
    
        [DataMember]
        public TrackableCollection<SI_TARIFARIO> SI_TARIFARIO
        {
            get
            {
                if (_sI_TARIFARIO == null)
                {
                    _sI_TARIFARIO = new TrackableCollection<SI_TARIFARIO>();
                    _sI_TARIFARIO.CollectionChanged += FixupSI_TARIFARIO;
                }
                return _sI_TARIFARIO;
            }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TARIFARIO != null)
                    {
                        _sI_TARIFARIO.CollectionChanged -= FixupSI_TARIFARIO;
                    }
                    _sI_TARIFARIO = value;
                    if (_sI_TARIFARIO != null)
                    {
                        _sI_TARIFARIO.CollectionChanged += FixupSI_TARIFARIO;
                    }
                    OnNavigationPropertyChanged("SI_TARIFARIO");
                }
            }
        }
        private TrackableCollection<SI_TARIFARIO> _sI_TARIFARIO;
    
        [DataMember]
        public TrackableCollection<SI_TARIFARIO> SI_TARIFARIO1
        {
            get
            {
                if (_sI_TARIFARIO1 == null)
                {
                    _sI_TARIFARIO1 = new TrackableCollection<SI_TARIFARIO>();
                    _sI_TARIFARIO1.CollectionChanged += FixupSI_TARIFARIO1;
                }
                return _sI_TARIFARIO1;
            }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TARIFARIO1 != null)
                    {
                        _sI_TARIFARIO1.CollectionChanged -= FixupSI_TARIFARIO1;
                    }
                    _sI_TARIFARIO1 = value;
                    if (_sI_TARIFARIO1 != null)
                    {
                        _sI_TARIFARIO1.CollectionChanged += FixupSI_TARIFARIO1;
                    }
                    OnNavigationPropertyChanged("SI_TARIFARIO1");
                }
            }
        }
        private TrackableCollection<SI_TARIFARIO> _sI_TARIFARIO1;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONANOTACION> RE_ACTUACIONANOTACION
        {
            get
            {
                if (_rE_ACTUACIONANOTACION == null)
                {
                    _rE_ACTUACIONANOTACION = new TrackableCollection<RE_ACTUACIONANOTACION>();
                    _rE_ACTUACIONANOTACION.CollectionChanged += FixupRE_ACTUACIONANOTACION;
                }
                return _rE_ACTUACIONANOTACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONANOTACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONANOTACION != null)
                    {
                        _rE_ACTUACIONANOTACION.CollectionChanged -= FixupRE_ACTUACIONANOTACION;
                    }
                    _rE_ACTUACIONANOTACION = value;
                    if (_rE_ACTUACIONANOTACION != null)
                    {
                        _rE_ACTUACIONANOTACION.CollectionChanged += FixupRE_ACTUACIONANOTACION;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONANOTACION");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONANOTACION> _rE_ACTUACIONANOTACION;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIAL> RE_ACTOJUDICIAL
        {
            get
            {
                if (_rE_ACTOJUDICIAL == null)
                {
                    _rE_ACTOJUDICIAL = new TrackableCollection<RE_ACTOJUDICIAL>();
                    _rE_ACTOJUDICIAL.CollectionChanged += FixupRE_ACTOJUDICIAL;
                }
                return _rE_ACTOJUDICIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIAL != null)
                    {
                        _rE_ACTOJUDICIAL.CollectionChanged -= FixupRE_ACTOJUDICIAL;
                    }
                    _rE_ACTOJUDICIAL = value;
                    if (_rE_ACTOJUDICIAL != null)
                    {
                        _rE_ACTOJUDICIAL.CollectionChanged += FixupRE_ACTOJUDICIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIAL> _rE_ACTOJUDICIAL;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIAL> RE_ACTOJUDICIAL1
        {
            get
            {
                if (_rE_ACTOJUDICIAL1 == null)
                {
                    _rE_ACTOJUDICIAL1 = new TrackableCollection<RE_ACTOJUDICIAL>();
                    _rE_ACTOJUDICIAL1.CollectionChanged += FixupRE_ACTOJUDICIAL1;
                }
                return _rE_ACTOJUDICIAL1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIAL1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIAL1 != null)
                    {
                        _rE_ACTOJUDICIAL1.CollectionChanged -= FixupRE_ACTOJUDICIAL1;
                    }
                    _rE_ACTOJUDICIAL1 = value;
                    if (_rE_ACTOJUDICIAL1 != null)
                    {
                        _rE_ACTOJUDICIAL1.CollectionChanged += FixupRE_ACTOJUDICIAL1;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIAL1");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIAL> _rE_ACTOJUDICIAL1;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIOHISTORICO> RE_ACTOMIGRATORIOHISTORICO
        {
            get
            {
                if (_rE_ACTOMIGRATORIOHISTORICO == null)
                {
                    _rE_ACTOMIGRATORIOHISTORICO = new TrackableCollection<RE_ACTOMIGRATORIOHISTORICO>();
                    _rE_ACTOMIGRATORIOHISTORICO.CollectionChanged += FixupRE_ACTOMIGRATORIOHISTORICO;
                }
                return _rE_ACTOMIGRATORIOHISTORICO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIOHISTORICO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIOHISTORICO != null)
                    {
                        _rE_ACTOMIGRATORIOHISTORICO.CollectionChanged -= FixupRE_ACTOMIGRATORIOHISTORICO;
                    }
                    _rE_ACTOMIGRATORIOHISTORICO = value;
                    if (_rE_ACTOMIGRATORIOHISTORICO != null)
                    {
                        _rE_ACTOMIGRATORIOHISTORICO.CollectionChanged += FixupRE_ACTOMIGRATORIOHISTORICO;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIOHISTORICO");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIOHISTORICO> _rE_ACTOMIGRATORIOHISTORICO;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIOHISTORICO> RE_ACTOMIGRATORIOHISTORICO1
        {
            get
            {
                if (_rE_ACTOMIGRATORIOHISTORICO1 == null)
                {
                    _rE_ACTOMIGRATORIOHISTORICO1 = new TrackableCollection<RE_ACTOMIGRATORIOHISTORICO>();
                    _rE_ACTOMIGRATORIOHISTORICO1.CollectionChanged += FixupRE_ACTOMIGRATORIOHISTORICO1;
                }
                return _rE_ACTOMIGRATORIOHISTORICO1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIOHISTORICO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIOHISTORICO1 != null)
                    {
                        _rE_ACTOMIGRATORIOHISTORICO1.CollectionChanged -= FixupRE_ACTOMIGRATORIOHISTORICO1;
                    }
                    _rE_ACTOMIGRATORIOHISTORICO1 = value;
                    if (_rE_ACTOMIGRATORIOHISTORICO1 != null)
                    {
                        _rE_ACTOMIGRATORIOHISTORICO1.CollectionChanged += FixupRE_ACTOMIGRATORIOHISTORICO1;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIOHISTORICO1");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIOHISTORICO> _rE_ACTOMIGRATORIOHISTORICO1;
    
        [DataMember]
        public TrackableCollection<RE_PAGO> RE_PAGO
        {
            get
            {
                if (_rE_PAGO == null)
                {
                    _rE_PAGO = new TrackableCollection<RE_PAGO>();
                    _rE_PAGO.CollectionChanged += FixupRE_PAGO;
                }
                return _rE_PAGO;
            }
            set
            {
                if (!ReferenceEquals(_rE_PAGO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PAGO != null)
                    {
                        _rE_PAGO.CollectionChanged -= FixupRE_PAGO;
                    }
                    _rE_PAGO = value;
                    if (_rE_PAGO != null)
                    {
                        _rE_PAGO.CollectionChanged += FixupRE_PAGO;
                    }
                    OnNavigationPropertyChanged("RE_PAGO");
                }
            }
        }
        private TrackableCollection<RE_PAGO> _rE_PAGO;
    
        [DataMember]
        public TrackableCollection<RE_PAGO> RE_PAGO1
        {
            get
            {
                if (_rE_PAGO1 == null)
                {
                    _rE_PAGO1 = new TrackableCollection<RE_PAGO>();
                    _rE_PAGO1.CollectionChanged += FixupRE_PAGO1;
                }
                return _rE_PAGO1;
            }
            set
            {
                if (!ReferenceEquals(_rE_PAGO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PAGO1 != null)
                    {
                        _rE_PAGO1.CollectionChanged -= FixupRE_PAGO1;
                    }
                    _rE_PAGO1 = value;
                    if (_rE_PAGO1 != null)
                    {
                        _rE_PAGO1.CollectionChanged += FixupRE_PAGO1;
                    }
                    OnNavigationPropertyChanged("RE_PAGO1");
                }
            }
        }
        private TrackableCollection<RE_PAGO> _rE_PAGO1;
    
        [DataMember]
        public TrackableCollection<SI_TARIFARIOREQUISITO> SI_TARIFARIOREQUISITO
        {
            get
            {
                if (_sI_TARIFARIOREQUISITO == null)
                {
                    _sI_TARIFARIOREQUISITO = new TrackableCollection<SI_TARIFARIOREQUISITO>();
                    _sI_TARIFARIOREQUISITO.CollectionChanged += FixupSI_TARIFARIOREQUISITO;
                }
                return _sI_TARIFARIOREQUISITO;
            }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIOREQUISITO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TARIFARIOREQUISITO != null)
                    {
                        _sI_TARIFARIOREQUISITO.CollectionChanged -= FixupSI_TARIFARIOREQUISITO;
                    }
                    _sI_TARIFARIOREQUISITO = value;
                    if (_sI_TARIFARIOREQUISITO != null)
                    {
                        _sI_TARIFARIOREQUISITO.CollectionChanged += FixupSI_TARIFARIOREQUISITO;
                    }
                    OnNavigationPropertyChanged("SI_TARIFARIOREQUISITO");
                }
            }
        }
        private TrackableCollection<SI_TARIFARIOREQUISITO> _sI_TARIFARIOREQUISITO;
    
        [DataMember]
        public TrackableCollection<SI_TARIFARIOREQUISITO> SI_TARIFARIOREQUISITO1
        {
            get
            {
                if (_sI_TARIFARIOREQUISITO1 == null)
                {
                    _sI_TARIFARIOREQUISITO1 = new TrackableCollection<SI_TARIFARIOREQUISITO>();
                    _sI_TARIFARIOREQUISITO1.CollectionChanged += FixupSI_TARIFARIOREQUISITO1;
                }
                return _sI_TARIFARIOREQUISITO1;
            }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIOREQUISITO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TARIFARIOREQUISITO1 != null)
                    {
                        _sI_TARIFARIOREQUISITO1.CollectionChanged -= FixupSI_TARIFARIOREQUISITO1;
                    }
                    _sI_TARIFARIOREQUISITO1 = value;
                    if (_sI_TARIFARIOREQUISITO1 != null)
                    {
                        _sI_TARIFARIOREQUISITO1.CollectionChanged += FixupSI_TARIFARIOREQUISITO1;
                    }
                    OnNavigationPropertyChanged("SI_TARIFARIOREQUISITO1");
                }
            }
        }
        private TrackableCollection<SI_TARIFARIOREQUISITO> _sI_TARIFARIOREQUISITO1;
    
        [DataMember]
        public TrackableCollection<SI_TARIFARIOREQUISITO> SI_TARIFARIOREQUISITO2
        {
            get
            {
                if (_sI_TARIFARIOREQUISITO2 == null)
                {
                    _sI_TARIFARIOREQUISITO2 = new TrackableCollection<SI_TARIFARIOREQUISITO>();
                    _sI_TARIFARIOREQUISITO2.CollectionChanged += FixupSI_TARIFARIOREQUISITO2;
                }
                return _sI_TARIFARIOREQUISITO2;
            }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIOREQUISITO2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TARIFARIOREQUISITO2 != null)
                    {
                        _sI_TARIFARIOREQUISITO2.CollectionChanged -= FixupSI_TARIFARIOREQUISITO2;
                    }
                    _sI_TARIFARIOREQUISITO2 = value;
                    if (_sI_TARIFARIOREQUISITO2 != null)
                    {
                        _sI_TARIFARIOREQUISITO2.CollectionChanged += FixupSI_TARIFARIOREQUISITO2;
                    }
                    OnNavigationPropertyChanged("SI_TARIFARIOREQUISITO2");
                }
            }
        }
        private TrackableCollection<SI_TARIFARIOREQUISITO> _sI_TARIFARIOREQUISITO2;
    
        [DataMember]
        public TrackableCollection<RE_RESIDENCIA> RE_RESIDENCIA
        {
            get
            {
                if (_rE_RESIDENCIA == null)
                {
                    _rE_RESIDENCIA = new TrackableCollection<RE_RESIDENCIA>();
                    _rE_RESIDENCIA.CollectionChanged += FixupRE_RESIDENCIA;
                }
                return _rE_RESIDENCIA;
            }
            set
            {
                if (!ReferenceEquals(_rE_RESIDENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_RESIDENCIA != null)
                    {
                        _rE_RESIDENCIA.CollectionChanged -= FixupRE_RESIDENCIA;
                    }
                    _rE_RESIDENCIA = value;
                    if (_rE_RESIDENCIA != null)
                    {
                        _rE_RESIDENCIA.CollectionChanged += FixupRE_RESIDENCIA;
                    }
                    OnNavigationPropertyChanged("RE_RESIDENCIA");
                }
            }
        }
        private TrackableCollection<RE_RESIDENCIA> _rE_RESIDENCIA;
    
        [DataMember]
        public TrackableCollection<SI_OFICINACONSULAR> SI_OFICINACONSULAR
        {
            get
            {
                if (_sI_OFICINACONSULAR == null)
                {
                    _sI_OFICINACONSULAR = new TrackableCollection<SI_OFICINACONSULAR>();
                    _sI_OFICINACONSULAR.CollectionChanged += FixupSI_OFICINACONSULAR;
                }
                return _sI_OFICINACONSULAR;
            }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_OFICINACONSULAR != null)
                    {
                        _sI_OFICINACONSULAR.CollectionChanged -= FixupSI_OFICINACONSULAR;
                    }
                    _sI_OFICINACONSULAR = value;
                    if (_sI_OFICINACONSULAR != null)
                    {
                        _sI_OFICINACONSULAR.CollectionChanged += FixupSI_OFICINACONSULAR;
                    }
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private TrackableCollection<SI_OFICINACONSULAR> _sI_OFICINACONSULAR;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROMILITAR> RE_REGISTROMILITAR
        {
            get
            {
                if (_rE_REGISTROMILITAR == null)
                {
                    _rE_REGISTROMILITAR = new TrackableCollection<RE_REGISTROMILITAR>();
                    _rE_REGISTROMILITAR.CollectionChanged += FixupRE_REGISTROMILITAR;
                }
                return _rE_REGISTROMILITAR;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROMILITAR, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROMILITAR != null)
                    {
                        _rE_REGISTROMILITAR.CollectionChanged -= FixupRE_REGISTROMILITAR;
                    }
                    _rE_REGISTROMILITAR = value;
                    if (_rE_REGISTROMILITAR != null)
                    {
                        _rE_REGISTROMILITAR.CollectionChanged += FixupRE_REGISTROMILITAR;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROMILITAR");
                }
            }
        }
        private TrackableCollection<RE_REGISTROMILITAR> _rE_REGISTROMILITAR;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROMILITAR> RE_REGISTROMILITAR1
        {
            get
            {
                if (_rE_REGISTROMILITAR1 == null)
                {
                    _rE_REGISTROMILITAR1 = new TrackableCollection<RE_REGISTROMILITAR>();
                    _rE_REGISTROMILITAR1.CollectionChanged += FixupRE_REGISTROMILITAR1;
                }
                return _rE_REGISTROMILITAR1;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROMILITAR1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROMILITAR1 != null)
                    {
                        _rE_REGISTROMILITAR1.CollectionChanged -= FixupRE_REGISTROMILITAR1;
                    }
                    _rE_REGISTROMILITAR1 = value;
                    if (_rE_REGISTROMILITAR1 != null)
                    {
                        _rE_REGISTROMILITAR1.CollectionChanged += FixupRE_REGISTROMILITAR1;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROMILITAR1");
                }
            }
        }
        private TrackableCollection<RE_REGISTROMILITAR> _rE_REGISTROMILITAR1;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROMILITAR> RE_REGISTROMILITAR2
        {
            get
            {
                if (_rE_REGISTROMILITAR2 == null)
                {
                    _rE_REGISTROMILITAR2 = new TrackableCollection<RE_REGISTROMILITAR>();
                    _rE_REGISTROMILITAR2.CollectionChanged += FixupRE_REGISTROMILITAR2;
                }
                return _rE_REGISTROMILITAR2;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROMILITAR2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROMILITAR2 != null)
                    {
                        _rE_REGISTROMILITAR2.CollectionChanged -= FixupRE_REGISTROMILITAR2;
                    }
                    _rE_REGISTROMILITAR2 = value;
                    if (_rE_REGISTROMILITAR2 != null)
                    {
                        _rE_REGISTROMILITAR2.CollectionChanged += FixupRE_REGISTROMILITAR2;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROMILITAR2");
                }
            }
        }
        private TrackableCollection<RE_REGISTROMILITAR> _rE_REGISTROMILITAR2;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALNOTIFICACION> RE_ACTOJUDICIALNOTIFICACION
        {
            get
            {
                if (_rE_ACTOJUDICIALNOTIFICACION == null)
                {
                    _rE_ACTOJUDICIALNOTIFICACION = new TrackableCollection<RE_ACTOJUDICIALNOTIFICACION>();
                    _rE_ACTOJUDICIALNOTIFICACION.CollectionChanged += FixupRE_ACTOJUDICIALNOTIFICACION;
                }
                return _rE_ACTOJUDICIALNOTIFICACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALNOTIFICACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALNOTIFICACION != null)
                    {
                        _rE_ACTOJUDICIALNOTIFICACION.CollectionChanged -= FixupRE_ACTOJUDICIALNOTIFICACION;
                    }
                    _rE_ACTOJUDICIALNOTIFICACION = value;
                    if (_rE_ACTOJUDICIALNOTIFICACION != null)
                    {
                        _rE_ACTOJUDICIALNOTIFICACION.CollectionChanged += FixupRE_ACTOJUDICIALNOTIFICACION;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALNOTIFICACION");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALNOTIFICACION> _rE_ACTOJUDICIALNOTIFICACION;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALNOTIFICACION> RE_ACTOJUDICIALNOTIFICACION1
        {
            get
            {
                if (_rE_ACTOJUDICIALNOTIFICACION1 == null)
                {
                    _rE_ACTOJUDICIALNOTIFICACION1 = new TrackableCollection<RE_ACTOJUDICIALNOTIFICACION>();
                    _rE_ACTOJUDICIALNOTIFICACION1.CollectionChanged += FixupRE_ACTOJUDICIALNOTIFICACION1;
                }
                return _rE_ACTOJUDICIALNOTIFICACION1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALNOTIFICACION1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALNOTIFICACION1 != null)
                    {
                        _rE_ACTOJUDICIALNOTIFICACION1.CollectionChanged -= FixupRE_ACTOJUDICIALNOTIFICACION1;
                    }
                    _rE_ACTOJUDICIALNOTIFICACION1 = value;
                    if (_rE_ACTOJUDICIALNOTIFICACION1 != null)
                    {
                        _rE_ACTOJUDICIALNOTIFICACION1.CollectionChanged += FixupRE_ACTOJUDICIALNOTIFICACION1;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALNOTIFICACION1");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALNOTIFICACION> _rE_ACTOJUDICIALNOTIFICACION1;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROCIVIL> RE_REGISTROCIVIL
        {
            get
            {
                if (_rE_REGISTROCIVIL == null)
                {
                    _rE_REGISTROCIVIL = new TrackableCollection<RE_REGISTROCIVIL>();
                    _rE_REGISTROCIVIL.CollectionChanged += FixupRE_REGISTROCIVIL;
                }
                return _rE_REGISTROCIVIL;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROCIVIL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROCIVIL != null)
                    {
                        _rE_REGISTROCIVIL.CollectionChanged -= FixupRE_REGISTROCIVIL;
                    }
                    _rE_REGISTROCIVIL = value;
                    if (_rE_REGISTROCIVIL != null)
                    {
                        _rE_REGISTROCIVIL.CollectionChanged += FixupRE_REGISTROCIVIL;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROCIVIL");
                }
            }
        }
        private TrackableCollection<RE_REGISTROCIVIL> _rE_REGISTROCIVIL;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROCIVIL> RE_REGISTROCIVIL1
        {
            get
            {
                if (_rE_REGISTROCIVIL1 == null)
                {
                    _rE_REGISTROCIVIL1 = new TrackableCollection<RE_REGISTROCIVIL>();
                    _rE_REGISTROCIVIL1.CollectionChanged += FixupRE_REGISTROCIVIL1;
                }
                return _rE_REGISTROCIVIL1;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROCIVIL1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROCIVIL1 != null)
                    {
                        _rE_REGISTROCIVIL1.CollectionChanged -= FixupRE_REGISTROCIVIL1;
                    }
                    _rE_REGISTROCIVIL1 = value;
                    if (_rE_REGISTROCIVIL1 != null)
                    {
                        _rE_REGISTROCIVIL1.CollectionChanged += FixupRE_REGISTROCIVIL1;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROCIVIL1");
                }
            }
        }
        private TrackableCollection<RE_REGISTROCIVIL> _rE_REGISTROCIVIL1;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA
        {
            get
            {
                if (_rE_PERSONA == null)
                {
                    _rE_PERSONA = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA.CollectionChanged += FixupRE_PERSONA;
                }
                return _rE_PERSONA;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA != null)
                    {
                        _rE_PERSONA.CollectionChanged -= FixupRE_PERSONA;
                    }
                    _rE_PERSONA = value;
                    if (_rE_PERSONA != null)
                    {
                        _rE_PERSONA.CollectionChanged += FixupRE_PERSONA;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA1
        {
            get
            {
                if (_rE_PERSONA1 == null)
                {
                    _rE_PERSONA1 = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA1.CollectionChanged += FixupRE_PERSONA1;
                }
                return _rE_PERSONA1;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA1 != null)
                    {
                        _rE_PERSONA1.CollectionChanged -= FixupRE_PERSONA1;
                    }
                    _rE_PERSONA1 = value;
                    if (_rE_PERSONA1 != null)
                    {
                        _rE_PERSONA1.CollectionChanged += FixupRE_PERSONA1;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA1");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA1;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA2
        {
            get
            {
                if (_rE_PERSONA2 == null)
                {
                    _rE_PERSONA2 = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA2.CollectionChanged += FixupRE_PERSONA2;
                }
                return _rE_PERSONA2;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA2 != null)
                    {
                        _rE_PERSONA2.CollectionChanged -= FixupRE_PERSONA2;
                    }
                    _rE_PERSONA2 = value;
                    if (_rE_PERSONA2 != null)
                    {
                        _rE_PERSONA2.CollectionChanged += FixupRE_PERSONA2;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA2");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA2;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA3
        {
            get
            {
                if (_rE_PERSONA3 == null)
                {
                    _rE_PERSONA3 = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA3.CollectionChanged += FixupRE_PERSONA3;
                }
                return _rE_PERSONA3;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA3, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA3 != null)
                    {
                        _rE_PERSONA3.CollectionChanged -= FixupRE_PERSONA3;
                    }
                    _rE_PERSONA3 = value;
                    if (_rE_PERSONA3 != null)
                    {
                        _rE_PERSONA3.CollectionChanged += FixupRE_PERSONA3;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA3");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA3;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA4
        {
            get
            {
                if (_rE_PERSONA4 == null)
                {
                    _rE_PERSONA4 = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA4.CollectionChanged += FixupRE_PERSONA4;
                }
                return _rE_PERSONA4;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA4, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA4 != null)
                    {
                        _rE_PERSONA4.CollectionChanged -= FixupRE_PERSONA4;
                    }
                    _rE_PERSONA4 = value;
                    if (_rE_PERSONA4 != null)
                    {
                        _rE_PERSONA4.CollectionChanged += FixupRE_PERSONA4;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA4");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA4;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA5
        {
            get
            {
                if (_rE_PERSONA5 == null)
                {
                    _rE_PERSONA5 = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA5.CollectionChanged += FixupRE_PERSONA5;
                }
                return _rE_PERSONA5;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA5, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA5 != null)
                    {
                        _rE_PERSONA5.CollectionChanged -= FixupRE_PERSONA5;
                    }
                    _rE_PERSONA5 = value;
                    if (_rE_PERSONA5 != null)
                    {
                        _rE_PERSONA5.CollectionChanged += FixupRE_PERSONA5;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA5");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA5;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA6
        {
            get
            {
                if (_rE_PERSONA6 == null)
                {
                    _rE_PERSONA6 = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA6.CollectionChanged += FixupRE_PERSONA6;
                }
                return _rE_PERSONA6;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA6, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA6 != null)
                    {
                        _rE_PERSONA6.CollectionChanged -= FixupRE_PERSONA6;
                    }
                    _rE_PERSONA6 = value;
                    if (_rE_PERSONA6 != null)
                    {
                        _rE_PERSONA6.CollectionChanged += FixupRE_PERSONA6;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA6");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA6;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA7
        {
            get
            {
                if (_rE_PERSONA7 == null)
                {
                    _rE_PERSONA7 = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA7.CollectionChanged += FixupRE_PERSONA7;
                }
                return _rE_PERSONA7;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA7, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA7 != null)
                    {
                        _rE_PERSONA7.CollectionChanged -= FixupRE_PERSONA7;
                    }
                    _rE_PERSONA7 = value;
                    if (_rE_PERSONA7 != null)
                    {
                        _rE_PERSONA7.CollectionChanged += FixupRE_PERSONA7;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA7");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA7;
    
        [DataMember]
        public TrackableCollection<RE_PERSONA> RE_PERSONA8
        {
            get
            {
                if (_rE_PERSONA8 == null)
                {
                    _rE_PERSONA8 = new TrackableCollection<RE_PERSONA>();
                    _rE_PERSONA8.CollectionChanged += FixupRE_PERSONA8;
                }
                return _rE_PERSONA8;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA8, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONA8 != null)
                    {
                        _rE_PERSONA8.CollectionChanged -= FixupRE_PERSONA8;
                    }
                    _rE_PERSONA8 = value;
                    if (_rE_PERSONA8 != null)
                    {
                        _rE_PERSONA8.CollectionChanged += FixupRE_PERSONA8;
                    }
                    OnNavigationPropertyChanged("RE_PERSONA8");
                }
            }
        }
        private TrackableCollection<RE_PERSONA> _rE_PERSONA8;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> RE_ACTOJUDICIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTOJUDICIALPARTICIPANTE == null)
                {
                    _rE_ACTOJUDICIALPARTICIPANTE = new TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE>();
                    _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                }
                return _rE_ACTOJUDICIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    _rE_ACTOJUDICIALPARTICIPANTE = value;
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> _rE_ACTOJUDICIALPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> RE_ACTOJUDICIALPARTICIPANTE1
        {
            get
            {
                if (_rE_ACTOJUDICIALPARTICIPANTE1 == null)
                {
                    _rE_ACTOJUDICIALPARTICIPANTE1 = new TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE>();
                    _rE_ACTOJUDICIALPARTICIPANTE1.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE1;
                }
                return _rE_ACTOJUDICIALPARTICIPANTE1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALPARTICIPANTE1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALPARTICIPANTE1 != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE1.CollectionChanged -= FixupRE_ACTOJUDICIALPARTICIPANTE1;
                    }
                    _rE_ACTOJUDICIALPARTICIPANTE1 = value;
                    if (_rE_ACTOJUDICIALPARTICIPANTE1 != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE1.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE1;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALPARTICIPANTE1");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> _rE_ACTOJUDICIALPARTICIPANTE1;
    
        [DataMember]
        public TrackableCollection<RE_ACTAJUDICIAL> RE_ACTAJUDICIAL
        {
            get
            {
                if (_rE_ACTAJUDICIAL == null)
                {
                    _rE_ACTAJUDICIAL = new TrackableCollection<RE_ACTAJUDICIAL>();
                    _rE_ACTAJUDICIAL.CollectionChanged += FixupRE_ACTAJUDICIAL;
                }
                return _rE_ACTAJUDICIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTAJUDICIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTAJUDICIAL != null)
                    {
                        _rE_ACTAJUDICIAL.CollectionChanged -= FixupRE_ACTAJUDICIAL;
                    }
                    _rE_ACTAJUDICIAL = value;
                    if (_rE_ACTAJUDICIAL != null)
                    {
                        _rE_ACTAJUDICIAL.CollectionChanged += FixupRE_ACTAJUDICIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTAJUDICIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTAJUDICIAL> _rE_ACTAJUDICIAL;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIO> RE_ACTOMIGRATORIO2
        {
            get
            {
                if (_rE_ACTOMIGRATORIO2 == null)
                {
                    _rE_ACTOMIGRATORIO2 = new TrackableCollection<RE_ACTOMIGRATORIO>();
                    _rE_ACTOMIGRATORIO2.CollectionChanged += FixupRE_ACTOMIGRATORIO2;
                }
                return _rE_ACTOMIGRATORIO2;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIO2, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIO2 != null)
                    {
                        _rE_ACTOMIGRATORIO2.CollectionChanged -= FixupRE_ACTOMIGRATORIO2;
                    }
                    _rE_ACTOMIGRATORIO2 = value;
                    if (_rE_ACTOMIGRATORIO2 != null)
                    {
                        _rE_ACTOMIGRATORIO2.CollectionChanged += FixupRE_ACTOMIGRATORIO2;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIO2");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIO> _rE_ACTOMIGRATORIO2;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALPARTICIPANTE> RE_ACTONOTARIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTONOTARIALPARTICIPANTE == null)
                {
                    _rE_ACTONOTARIALPARTICIPANTE = new TrackableCollection<RE_ACTONOTARIALPARTICIPANTE>();
                    _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged += FixupRE_ACTONOTARIALPARTICIPANTE;
                }
                return _rE_ACTONOTARIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALPARTICIPANTE != null)
                    {
                        _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTONOTARIALPARTICIPANTE;
                    }
                    _rE_ACTONOTARIALPARTICIPANTE = value;
                    if (_rE_ACTONOTARIALPARTICIPANTE != null)
                    {
                        _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged += FixupRE_ACTONOTARIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALPARTICIPANTE> _rE_ACTONOTARIALPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIAL> RE_ACTONOTARIAL
        {
            get
            {
                if (_rE_ACTONOTARIAL == null)
                {
                    _rE_ACTONOTARIAL = new TrackableCollection<RE_ACTONOTARIAL>();
                    _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                }
                return _rE_ACTONOTARIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged -= FixupRE_ACTONOTARIAL;
                    }
                    _rE_ACTONOTARIAL = value;
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIAL> _rE_ACTONOTARIAL;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIAL> RE_ACTONOTARIAL1
        {
            get
            {
                if (_rE_ACTONOTARIAL1 == null)
                {
                    _rE_ACTONOTARIAL1 = new TrackableCollection<RE_ACTONOTARIAL>();
                    _rE_ACTONOTARIAL1.CollectionChanged += FixupRE_ACTONOTARIAL1;
                }
                return _rE_ACTONOTARIAL1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIAL1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIAL1 != null)
                    {
                        _rE_ACTONOTARIAL1.CollectionChanged -= FixupRE_ACTONOTARIAL1;
                    }
                    _rE_ACTONOTARIAL1 = value;
                    if (_rE_ACTONOTARIAL1 != null)
                    {
                        _rE_ACTONOTARIAL1.CollectionChanged += FixupRE_ACTONOTARIAL1;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIAL1");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIAL> _rE_ACTONOTARIAL1;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AL_INSUMO.Clear();
            AL_MOVIMIENTO.Clear();
            AL_MOVIMIENTO1.Clear();
            AL_MOVIMIENTO2.Clear();
            AL_MOVIMIENTO3.Clear();
            AL_MOVIMIENTO4.Clear();
            AL_PEDIDO.Clear();
            AL_PEDIDO1.Clear();
            AL_PEDIDO2.Clear();
            AL_PEDIDO3.Clear();
            AL_PEDIDO4.Clear();
            AL_PEDIDO5.Clear();
            AL_PEDIDOHISTORICO.Clear();
            CL_SERVICIO.Clear();
            CL_TICKET.Clear();
            CL_TICKET1.Clear();
            CL_TICKET2.Clear();
            CL_VENTANILLA.Clear();
            CO_CUENTACORRIENTE.Clear();
            CO_CUENTACORRIENTE1.Clear();
            CO_REMESA.Clear();
            CO_REMESADETALLE.Clear();
            CO_TRANSACCION.Clear();
            CO_TRANSACCION1.Clear();
            RE_ACTOMIGRATORIO.Clear();
            RE_ACTOMIGRATORIO1.Clear();
            RE_ACTOMIGRATORIOFORMATO.Clear();
            RE_ACTOMIGRATORIOFORMATO1.Clear();
            RE_ACTOMIGRATORIOFORMATO2.Clear();
            RE_ACTOMIGRATORIOFORMATO3.Clear();
            RE_ACTOMIGRATORIOFORMATO4.Clear();
            RE_ACTONOTARIALDOCUMENTO.Clear();
            RE_ACTONOTARIALDOCUMENTO1.Clear();
            RE_ACTONOTARIALDOCUMENTO2.Clear();
            RE_ACTONOTARIALDOCUMENTO3.Clear();
            RE_ACTONOTARIALSEGUIMIENTO.Clear();
            RE_ACTUACIONPARTICIPANTE.Clear();
            RE_ACTUACIONPARTICIPANTE1.Clear();
            RE_EMPRESA.Clear();
            RE_EMPRESA1.Clear();
            RE_PERSONAFILIACION.Clear();
            RE_PERSONAFILIACION1.Clear();
            RE_PERSONAFOTO.Clear();
            RE_REGISTROUNICO.Clear();
            SE_FORMULARIO.Clear();
            SE_ROLCONFIGURACION.Clear();
            SE_USUARIO.Clear();
            SE_USUARIO1.Clear();
            SE_USUARIO2 = null;
            SE_USUARIO3 = null;
            SE_USUARIOROL.Clear();
            SE_USUARIOROL1.Clear();
            SI_AUDITORIA.Clear();
            SI_AUDITORIA1.Clear();
            SI_AUDITORIA2.Clear();
            SI_BOVEDA.Clear();
            SI_OFICINACOMPLEMENTARIA.Clear();
            MA_SECCION.Clear();
            SI_TARIFARIO.Clear();
            SI_TARIFARIO1.Clear();
            RE_ACTUACIONANOTACION.Clear();
            RE_ACTOJUDICIAL.Clear();
            RE_ACTOJUDICIAL1.Clear();
            RE_ACTOMIGRATORIOHISTORICO.Clear();
            RE_ACTOMIGRATORIOHISTORICO1.Clear();
            RE_PAGO.Clear();
            RE_PAGO1.Clear();
            SI_TARIFARIOREQUISITO.Clear();
            SI_TARIFARIOREQUISITO1.Clear();
            SI_TARIFARIOREQUISITO2.Clear();
            RE_RESIDENCIA.Clear();
            SI_OFICINACONSULAR.Clear();
            RE_REGISTROMILITAR.Clear();
            RE_REGISTROMILITAR1.Clear();
            RE_REGISTROMILITAR2.Clear();
            RE_ACTOJUDICIALNOTIFICACION.Clear();
            RE_ACTOJUDICIALNOTIFICACION1.Clear();
            RE_REGISTROCIVIL.Clear();
            RE_REGISTROCIVIL1.Clear();
            RE_PERSONA.Clear();
            RE_PERSONA1.Clear();
            RE_PERSONA2.Clear();
            RE_PERSONA3.Clear();
            RE_PERSONA4.Clear();
            RE_PERSONA5.Clear();
            RE_PERSONA6.Clear();
            RE_PERSONA7.Clear();
            RE_PERSONA8.Clear();
            RE_ACTOJUDICIALPARTICIPANTE.Clear();
            RE_ACTOJUDICIALPARTICIPANTE1.Clear();
            RE_ACTAJUDICIAL.Clear();
            RE_ACTOMIGRATORIO2.Clear();
            RE_ACTONOTARIALPARTICIPANTE.Clear();
            RE_ACTONOTARIAL.Clear();
            RE_ACTONOTARIAL1.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO2(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_PARAMETRO2.Contains(this))
            {
                previousValue.SI_PARAMETRO2.Remove(this);
            }
    
            if (SE_USUARIO2 != null)
            {
                if (!SE_USUARIO2.SI_PARAMETRO2.Contains(this))
                {
                    SE_USUARIO2.SI_PARAMETRO2.Add(this);
                }
    
                para_sUsuarioCreacion = SE_USUARIO2.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO2")
                    && (ChangeTracker.OriginalValues["SE_USUARIO2"] == SE_USUARIO2))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO2", previousValue);
                }
                if (SE_USUARIO2 != null && !SE_USUARIO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO2.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO3(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_PARAMETRO3.Contains(this))
            {
                previousValue.SI_PARAMETRO3.Remove(this);
            }
    
            if (SE_USUARIO3 != null)
            {
                if (!SE_USUARIO3.SI_PARAMETRO3.Contains(this))
                {
                    SE_USUARIO3.SI_PARAMETRO3.Add(this);
                }
    
                para_sUsuarioModificacion = SE_USUARIO3.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                para_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO3")
                    && (ChangeTracker.OriginalValues["SE_USUARIO3"] == SE_USUARIO3))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO3", previousValue);
                }
                if (SE_USUARIO3 != null && !SE_USUARIO3.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO3.StartTracking();
                }
            }
        }
    
        private void FixupAL_INSUMO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_INSUMO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_INSUMO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_INSUMO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_INSUMO", item);
                    }
                }
            }
        }
    
        private void FixupAL_MOVIMIENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTO", item);
                    }
                }
            }
        }
    
        private void FixupAL_MOVIMIENTO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTO1", item);
                    }
                }
            }
        }
    
        private void FixupAL_MOVIMIENTO2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTO2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTO2", item);
                    }
                }
            }
        }
    
        private void FixupAL_MOVIMIENTO3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTO3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO3, this))
                    {
                        item.SI_PARAMETRO3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTO3", item);
                    }
                }
            }
        }
    
        private void FixupAL_MOVIMIENTO4(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO4 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTO4", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO4, this))
                    {
                        item.SI_PARAMETRO4 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTO4", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDO", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDO1", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDO2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDO item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDO2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDO2", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDO3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDO item in e.NewItems)
                {
                    item.SI_PARAMETRO3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDO3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO3, this))
                    {
                        item.SI_PARAMETRO3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDO3", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDO4(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDO item in e.NewItems)
                {
                    item.SI_PARAMETRO4 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDO4", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO4, this))
                    {
                        item.SI_PARAMETRO4 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDO4", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDO5(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDO item in e.NewItems)
                {
                    item.SI_PARAMETRO5 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDO5", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO5, this))
                    {
                        item.SI_PARAMETRO5 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDO5", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDOHISTORICO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDOHISTORICO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDOHISTORICO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDOHISTORICO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDOHISTORICO", item);
                    }
                }
            }
        }
    
        private void FixupCL_SERVICIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_SERVICIO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_SERVICIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_SERVICIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_SERVICIO", item);
                    }
                }
            }
        }
    
        private void FixupCL_TICKET(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_TICKET item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_TICKET", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_TICKET item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_TICKET", item);
                    }
                }
            }
        }
    
        private void FixupCL_TICKET1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_TICKET item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_TICKET1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_TICKET item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_TICKET1", item);
                    }
                }
            }
        }
    
        private void FixupCL_TICKET2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_TICKET item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_TICKET2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_TICKET item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_TICKET2", item);
                    }
                }
            }
        }
    
        private void FixupCL_VENTANILLA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_VENTANILLA item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_VENTANILLA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_VENTANILLA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_VENTANILLA", item);
                    }
                }
            }
        }
    
        private void FixupCO_CUENTACORRIENTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_CUENTACORRIENTE item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_CUENTACORRIENTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_CUENTACORRIENTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_CUENTACORRIENTE", item);
                    }
                }
            }
        }
    
        private void FixupCO_CUENTACORRIENTE1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_CUENTACORRIENTE item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_CUENTACORRIENTE1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_CUENTACORRIENTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_CUENTACORRIENTE1", item);
                    }
                }
            }
        }
    
        private void FixupCO_REMESA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_REMESA item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_REMESA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_REMESA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_REMESA", item);
                    }
                }
            }
        }
    
        private void FixupCO_REMESADETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_REMESADETALLE item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_REMESADETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_REMESADETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_REMESADETALLE", item);
                    }
                }
            }
        }
    
        private void FixupCO_TRANSACCION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_TRANSACCION item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_TRANSACCION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_TRANSACCION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_TRANSACCION", item);
                    }
                }
            }
        }
    
        private void FixupCO_TRANSACCION1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_TRANSACCION item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_TRANSACCION1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_TRANSACCION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_TRANSACCION1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIO1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIOFORMATO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIOFORMATO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIOFORMATO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIOFORMATO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIOFORMATO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIOFORMATO1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIOFORMATO2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIOFORMATO2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIOFORMATO2", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIOFORMATO3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.NewItems)
                {
                    item.SI_PARAMETRO3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIOFORMATO3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO3, this))
                    {
                        item.SI_PARAMETRO3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIOFORMATO3", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIOFORMATO4(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.NewItems)
                {
                    item.SI_PARAMETRO4 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIOFORMATO4", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIOFORMATO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO4, this))
                    {
                        item.SI_PARAMETRO4 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIOFORMATO4", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALDOCUMENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALDOCUMENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALDOCUMENTO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALDOCUMENTO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALDOCUMENTO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALDOCUMENTO1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALDOCUMENTO2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALDOCUMENTO2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALDOCUMENTO2", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALDOCUMENTO3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALDOCUMENTO3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO3, this))
                    {
                        item.SI_PARAMETRO3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALDOCUMENTO3", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALSEGUIMIENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALSEGUIMIENTO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALSEGUIMIENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALSEGUIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALSEGUIMIENTO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONPARTICIPANTE1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONPARTICIPANTE1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONPARTICIPANTE1", item);
                    }
                }
            }
        }
    
        private void FixupRE_EMPRESA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_EMPRESA item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_EMPRESA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_EMPRESA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_EMPRESA", item);
                    }
                }
            }
        }
    
        private void FixupRE_EMPRESA1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_EMPRESA item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_EMPRESA1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_EMPRESA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_EMPRESA1", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONAFILIACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONAFILIACION item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONAFILIACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONAFILIACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONAFILIACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONAFILIACION1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONAFILIACION item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONAFILIACION1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONAFILIACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONAFILIACION1", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONAFOTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONAFOTO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONAFOTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONAFOTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONAFOTO", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROUNICO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROUNICO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROUNICO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROUNICO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROUNICO", item);
                    }
                }
            }
        }
    
        private void FixupSE_FORMULARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_FORMULARIO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_FORMULARIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_FORMULARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_FORMULARIO", item);
                    }
                }
            }
        }
    
        private void FixupSE_ROLCONFIGURACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_ROLCONFIGURACION item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_ROLCONFIGURACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_ROLCONFIGURACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_ROLCONFIGURACION", item);
                    }
                }
            }
        }
    
        private void FixupSE_USUARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_USUARIO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_USUARIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_USUARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_USUARIO", item);
                    }
                }
            }
        }
    
        private void FixupSE_USUARIO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_USUARIO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_USUARIO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_USUARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_USUARIO1", item);
                    }
                }
            }
        }
    
        private void FixupSE_USUARIOROL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_USUARIOROL item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_USUARIOROL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_USUARIOROL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_USUARIOROL", item);
                    }
                }
            }
        }
    
        private void FixupSE_USUARIOROL1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_USUARIOROL item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_USUARIOROL1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_USUARIOROL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_USUARIOROL1", item);
                    }
                }
            }
        }
    
        private void FixupSI_AUDITORIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_AUDITORIA item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_AUDITORIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_AUDITORIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_AUDITORIA", item);
                    }
                }
            }
        }
    
        private void FixupSI_AUDITORIA1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_AUDITORIA item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_AUDITORIA1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_AUDITORIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_AUDITORIA1", item);
                    }
                }
            }
        }
    
        private void FixupSI_AUDITORIA2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_AUDITORIA item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_AUDITORIA2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_AUDITORIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_AUDITORIA2", item);
                    }
                }
            }
        }
    
        private void FixupSI_BOVEDA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_BOVEDA item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_BOVEDA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_BOVEDA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_BOVEDA", item);
                    }
                }
            }
        }
    
        private void FixupSI_OFICINACOMPLEMENTARIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_OFICINACOMPLEMENTARIA item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_OFICINACOMPLEMENTARIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_OFICINACOMPLEMENTARIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_OFICINACOMPLEMENTARIA", item);
                    }
                }
            }
        }
    
        private void FixupMA_SECCION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MA_SECCION item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MA_SECCION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MA_SECCION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MA_SECCION", item);
                    }
                }
            }
        }
    
        private void FixupSI_TARIFARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TARIFARIO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TARIFARIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TARIFARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TARIFARIO", item);
                    }
                }
            }
        }
    
        private void FixupSI_TARIFARIO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TARIFARIO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TARIFARIO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TARIFARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TARIFARIO1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONANOTACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONANOTACION item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONANOTACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONANOTACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONANOTACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIAL item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIAL", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIAL1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIAL item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIAL1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIAL1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIOHISTORICO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIOHISTORICO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIOHISTORICO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIOHISTORICO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIOHISTORICO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIOHISTORICO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIOHISTORICO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIOHISTORICO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIOHISTORICO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIOHISTORICO1", item);
                    }
                }
            }
        }
    
        private void FixupRE_PAGO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PAGO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PAGO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PAGO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PAGO", item);
                    }
                }
            }
        }
    
        private void FixupRE_PAGO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PAGO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PAGO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PAGO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PAGO1", item);
                    }
                }
            }
        }
    
        private void FixupSI_TARIFARIOREQUISITO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TARIFARIOREQUISITO item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TARIFARIOREQUISITO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TARIFARIOREQUISITO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TARIFARIOREQUISITO", item);
                    }
                }
            }
        }
    
        private void FixupSI_TARIFARIOREQUISITO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TARIFARIOREQUISITO item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TARIFARIOREQUISITO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TARIFARIOREQUISITO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TARIFARIOREQUISITO1", item);
                    }
                }
            }
        }
    
        private void FixupSI_TARIFARIOREQUISITO2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TARIFARIOREQUISITO item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TARIFARIOREQUISITO2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TARIFARIOREQUISITO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TARIFARIOREQUISITO2", item);
                    }
                }
            }
        }
    
        private void FixupRE_RESIDENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_RESIDENCIA item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_RESIDENCIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_RESIDENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_RESIDENCIA", item);
                    }
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_OFICINACONSULAR item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_OFICINACONSULAR", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_OFICINACONSULAR item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_OFICINACONSULAR", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROMILITAR(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROMILITAR item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROMILITAR", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROMILITAR item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROMILITAR", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROMILITAR1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROMILITAR item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROMILITAR1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROMILITAR item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROMILITAR1", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROMILITAR2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROMILITAR item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROMILITAR2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROMILITAR item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROMILITAR2", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALNOTIFICACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALNOTIFICACION item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALNOTIFICACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALNOTIFICACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALNOTIFICACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALNOTIFICACION1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALNOTIFICACION item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALNOTIFICACION1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALNOTIFICACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALNOTIFICACION1", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROCIVIL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROCIVIL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROCIVIL", item);
                    }
                }
            }
        }
    
        private void FixupRE_REGISTROCIVIL1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROCIVIL1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROCIVIL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROCIVIL1", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA1", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA2", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_PARAMETRO3 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA3", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO3, this))
                    {
                        item.SI_PARAMETRO3 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA3", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA4(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_PARAMETRO4 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA4", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO4, this))
                    {
                        item.SI_PARAMETRO4 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA4", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA5(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_PARAMETRO5 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA5", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO5, this))
                    {
                        item.SI_PARAMETRO5 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA5", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA6(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_PARAMETRO6 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA6", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO6, this))
                    {
                        item.SI_PARAMETRO6 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA6", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA7(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_PARAMETRO7 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA7", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO7, this))
                    {
                        item.SI_PARAMETRO7 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA7", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONA8(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONA item in e.NewItems)
                {
                    item.SI_PARAMETRO8 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONA8", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO8, this))
                    {
                        item.SI_PARAMETRO8 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONA8", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALPARTICIPANTE1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTAJUDICIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTAJUDICIAL item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTAJUDICIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTAJUDICIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTAJUDICIAL", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIO2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.NewItems)
                {
                    item.SI_PARAMETRO2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIO2", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO2, this))
                    {
                        item.SI_PARAMETRO2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIO2", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALPARTICIPANTE item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.NewItems)
                {
                    item.SI_PARAMETRO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO, this))
                    {
                        item.SI_PARAMETRO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIAL1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.NewItems)
                {
                    item.SI_PARAMETRO1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIAL1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_PARAMETRO1, this))
                    {
                        item.SI_PARAMETRO1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIAL1", item);
                    }
                }
            }
        }

        #endregion
    }
}
