//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(MA_ESTADO))]
    [KnownType(typeof(RE_ACTONOTARIAL))]
    [KnownType(typeof(RE_ACTUACION))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(SI_UBICACIONGEOGRAFICA))]
    [KnownType(typeof(RE_ACTONOTARIALCUERPO))]
    [KnownType(typeof(RE_ACTONOTARIALDOCUMENTO))]
    [KnownType(typeof(RE_ACTONOTARIALPARTICIPANTE))]
    [KnownType(typeof(RE_ACTONOTARIALSEGUIMIENTO))]
    public partial class RE_ACTONOTARIAL: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long acno_iActoNotarialId
        {
            get { return _acno_iActoNotarialId; }
            set
            {
                if (_acno_iActoNotarialId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'acno_iActoNotarialId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _acno_iActoNotarialId = value;
                    OnPropertyChanged("acno_iActoNotarialId");
                }
            }
        }
        private long _acno_iActoNotarialId;
    
        [DataMember]
        public long acno_iActuacionId
        {
            get { return _acno_iActuacionId; }
            set
            {
                if (_acno_iActuacionId != value)
                {
                    ChangeTracker.RecordOriginalValue("acno_iActuacionId", _acno_iActuacionId);
                    if (!IsDeserializing)
                    {
                        if (RE_ACTUACION != null && RE_ACTUACION.actu_iActuacionId != value)
                        {
                            RE_ACTUACION = null;
                        }
                    }
                    _acno_iActuacionId = value;
                    OnPropertyChanged("acno_iActuacionId");
                }
            }
        }
        private long _acno_iActuacionId;
    
        [DataMember]
        public short acno_sTipoActoNotarialId
        {
            get { return _acno_sTipoActoNotarialId; }
            set
            {
                if (_acno_sTipoActoNotarialId != value)
                {
                    ChangeTracker.RecordOriginalValue("acno_sTipoActoNotarialId", _acno_sTipoActoNotarialId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _acno_sTipoActoNotarialId = value;
                    OnPropertyChanged("acno_sTipoActoNotarialId");
                }
            }
        }
        private short _acno_sTipoActoNotarialId;
    
        [DataMember]
        public short acno_sSubTipoActoNotarialId
        {
            get { return _acno_sSubTipoActoNotarialId; }
            set
            {
                if (_acno_sSubTipoActoNotarialId != value)
                {
                    ChangeTracker.RecordOriginalValue("acno_sSubTipoActoNotarialId", _acno_sSubTipoActoNotarialId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _acno_sSubTipoActoNotarialId = value;
                    OnPropertyChanged("acno_sSubTipoActoNotarialId");
                }
            }
        }
        private short _acno_sSubTipoActoNotarialId;
    
        [DataMember]
        public short acno_sOficinaConsularId
        {
            get { return _acno_sOficinaConsularId; }
            set
            {
                if (_acno_sOficinaConsularId != value)
                {
                    ChangeTracker.RecordOriginalValue("acno_sOficinaConsularId", _acno_sOficinaConsularId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR != null && SI_OFICINACONSULAR.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR = null;
                        }
                    }
                    _acno_sOficinaConsularId = value;
                    OnPropertyChanged("acno_sOficinaConsularId");
                }
            }
        }
        private short _acno_sOficinaConsularId;
    
        [DataMember]
        public Nullable<long> acno_iActoNotarialReferenciaId
        {
            get { return _acno_iActoNotarialReferenciaId; }
            set
            {
                if (_acno_iActoNotarialReferenciaId != value)
                {
                    ChangeTracker.RecordOriginalValue("acno_iActoNotarialReferenciaId", _acno_iActoNotarialReferenciaId);
                    if (!IsDeserializing)
                    {
                        if (RE_ACTONOTARIAL2 != null && RE_ACTONOTARIAL2.acno_iActoNotarialId != value)
                        {
                            RE_ACTONOTARIAL2 = null;
                        }
                    }
                    _acno_iActoNotarialReferenciaId = value;
                    OnPropertyChanged("acno_iActoNotarialReferenciaId");
                }
            }
        }
        private Nullable<long> _acno_iActoNotarialReferenciaId;
    
        [DataMember]
        public Nullable<int> acno_IFuncionarioAutorizadorId
        {
            get { return _acno_IFuncionarioAutorizadorId; }
            set
            {
                if (_acno_IFuncionarioAutorizadorId != value)
                {
                    _acno_IFuncionarioAutorizadorId = value;
                    OnPropertyChanged("acno_IFuncionarioAutorizadorId");
                }
            }
        }
        private Nullable<int> _acno_IFuncionarioAutorizadorId;
    
        [DataMember]
        public Nullable<int> acno_IFuncionarioCertificadorId
        {
            get { return _acno_IFuncionarioCertificadorId; }
            set
            {
                if (_acno_IFuncionarioCertificadorId != value)
                {
                    _acno_IFuncionarioCertificadorId = value;
                    OnPropertyChanged("acno_IFuncionarioCertificadorId");
                }
            }
        }
        private Nullable<int> _acno_IFuncionarioCertificadorId;
    
        [DataMember]
        public string acno_vAutorizacionTipo
        {
            get { return _acno_vAutorizacionTipo; }
            set
            {
                if (_acno_vAutorizacionTipo != value)
                {
                    _acno_vAutorizacionTipo = value;
                    OnPropertyChanged("acno_vAutorizacionTipo");
                }
            }
        }
        private string _acno_vAutorizacionTipo;
    
        [DataMember]
        public string acno_vDenominacion
        {
            get { return _acno_vDenominacion; }
            set
            {
                if (_acno_vDenominacion != value)
                {
                    _acno_vDenominacion = value;
                    OnPropertyChanged("acno_vDenominacion");
                }
            }
        }
        private string _acno_vDenominacion;
    
        [DataMember]
        public Nullable<bool> acno_bDigitalizadoFlag
        {
            get { return _acno_bDigitalizadoFlag; }
            set
            {
                if (_acno_bDigitalizadoFlag != value)
                {
                    _acno_bDigitalizadoFlag = value;
                    OnPropertyChanged("acno_bDigitalizadoFlag");
                }
            }
        }
        private Nullable<bool> _acno_bDigitalizadoFlag;
    
        [DataMember]
        public Nullable<bool> acno_bFlagMinuta
        {
            get { return _acno_bFlagMinuta; }
            set
            {
                if (_acno_bFlagMinuta != value)
                {
                    _acno_bFlagMinuta = value;
                    OnPropertyChanged("acno_bFlagMinuta");
                }
            }
        }
        private Nullable<bool> _acno_bFlagMinuta;
    
        [DataMember]
        public string acno_vNumeroColegiatura
        {
            get { return _acno_vNumeroColegiatura; }
            set
            {
                if (_acno_vNumeroColegiatura != value)
                {
                    _acno_vNumeroColegiatura = value;
                    OnPropertyChanged("acno_vNumeroColegiatura");
                }
            }
        }
        private string _acno_vNumeroColegiatura;
    
        [DataMember]
        public Nullable<int> acno_iNumeroActoNotarial
        {
            get { return _acno_iNumeroActoNotarial; }
            set
            {
                if (_acno_iNumeroActoNotarial != value)
                {
                    _acno_iNumeroActoNotarial = value;
                    OnPropertyChanged("acno_iNumeroActoNotarial");
                }
            }
        }
        private Nullable<int> _acno_iNumeroActoNotarial;
    
        [DataMember]
        public string acno_vNumeroEscrituraPublica
        {
            get { return _acno_vNumeroEscrituraPublica; }
            set
            {
                if (_acno_vNumeroEscrituraPublica != value)
                {
                    _acno_vNumeroEscrituraPublica = value;
                    OnPropertyChanged("acno_vNumeroEscrituraPublica");
                }
            }
        }
        private string _acno_vNumeroEscrituraPublica;
    
        [DataMember]
        public string acno_vItinerario
        {
            get { return _acno_vItinerario; }
            set
            {
                if (_acno_vItinerario != value)
                {
                    _acno_vItinerario = value;
                    OnPropertyChanged("acno_vItinerario");
                }
            }
        }
        private string _acno_vItinerario;
    
        [DataMember]
        public Nullable<System.DateTime> acno_dFechaExtension
        {
            get { return _acno_dFechaExtension; }
            set
            {
                if (_acno_dFechaExtension != value)
                {
                    _acno_dFechaExtension = value;
                    OnPropertyChanged("acno_dFechaExtension");
                }
            }
        }
        private Nullable<System.DateTime> _acno_dFechaExtension;
    
        [DataMember]
        public string acno_vObservaciones
        {
            get { return _acno_vObservaciones; }
            set
            {
                if (_acno_vObservaciones != value)
                {
                    _acno_vObservaciones = value;
                    OnPropertyChanged("acno_vObservaciones");
                }
            }
        }
        private string _acno_vObservaciones;
    
        [DataMember]
        public string acno_cUbigeoDestino
        {
            get { return _acno_cUbigeoDestino; }
            set
            {
                if (_acno_cUbigeoDestino != value)
                {
                    ChangeTracker.RecordOriginalValue("acno_cUbigeoDestino", _acno_cUbigeoDestino);
                    if (!IsDeserializing)
                    {
                        if (SI_UBICACIONGEOGRAFICA != null && SI_UBICACIONGEOGRAFICA.ubge_cCodigo != value)
                        {
                            SI_UBICACIONGEOGRAFICA = null;
                        }
                    }
                    _acno_cUbigeoDestino = value;
                    OnPropertyChanged("acno_cUbigeoDestino");
                }
            }
        }
        private string _acno_cUbigeoDestino;
    
        [DataMember]
        public Nullable<int> acno_IFuncionarioAnulaId
        {
            get { return _acno_IFuncionarioAnulaId; }
            set
            {
                if (_acno_IFuncionarioAnulaId != value)
                {
                    _acno_IFuncionarioAnulaId = value;
                    OnPropertyChanged("acno_IFuncionarioAnulaId");
                }
            }
        }
        private Nullable<int> _acno_IFuncionarioAnulaId;
    
        [DataMember]
        public Nullable<System.DateTime> acno_dFechaAnulacion
        {
            get { return _acno_dFechaAnulacion; }
            set
            {
                if (_acno_dFechaAnulacion != value)
                {
                    _acno_dFechaAnulacion = value;
                    OnPropertyChanged("acno_dFechaAnulacion");
                }
            }
        }
        private Nullable<System.DateTime> _acno_dFechaAnulacion;
    
        [DataMember]
        public string acno_vMotivoAnulacion
        {
            get { return _acno_vMotivoAnulacion; }
            set
            {
                if (_acno_vMotivoAnulacion != value)
                {
                    _acno_vMotivoAnulacion = value;
                    OnPropertyChanged("acno_vMotivoAnulacion");
                }
            }
        }
        private string _acno_vMotivoAnulacion;
    
        [DataMember]
        public short acno_sEstadoId
        {
            get { return _acno_sEstadoId; }
            set
            {
                if (_acno_sEstadoId != value)
                {
                    ChangeTracker.RecordOriginalValue("acno_sEstadoId", _acno_sEstadoId);
                    if (!IsDeserializing)
                    {
                        if (MA_ESTADO != null && MA_ESTADO.esta_sEstadoId != value)
                        {
                            MA_ESTADO = null;
                        }
                    }
                    _acno_sEstadoId = value;
                    OnPropertyChanged("acno_sEstadoId");
                }
            }
        }
        private short _acno_sEstadoId;
    
        [DataMember]
        public short acno_sUsuarioCreacion
        {
            get { return _acno_sUsuarioCreacion; }
            set
            {
                if (_acno_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("acno_sUsuarioCreacion", _acno_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _acno_sUsuarioCreacion = value;
                    OnPropertyChanged("acno_sUsuarioCreacion");
                }
            }
        }
        private short _acno_sUsuarioCreacion;
    
        [DataMember]
        public string acno_vIPCreacion
        {
            get { return _acno_vIPCreacion; }
            set
            {
                if (_acno_vIPCreacion != value)
                {
                    _acno_vIPCreacion = value;
                    OnPropertyChanged("acno_vIPCreacion");
                }
            }
        }
        private string _acno_vIPCreacion;
    
        [DataMember]
        public System.DateTime acno_dFechaCreacion
        {
            get { return _acno_dFechaCreacion; }
            set
            {
                if (_acno_dFechaCreacion != value)
                {
                    _acno_dFechaCreacion = value;
                    OnPropertyChanged("acno_dFechaCreacion");
                }
            }
        }
        private System.DateTime _acno_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> acno_sUsuarioModificacion
        {
            get { return _acno_sUsuarioModificacion; }
            set
            {
                if (_acno_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("acno_sUsuarioModificacion", _acno_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _acno_sUsuarioModificacion = value;
                    OnPropertyChanged("acno_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _acno_sUsuarioModificacion;
    
        [DataMember]
        public string acno_vIPModificacion
        {
            get { return _acno_vIPModificacion; }
            set
            {
                if (_acno_vIPModificacion != value)
                {
                    _acno_vIPModificacion = value;
                    OnPropertyChanged("acno_vIPModificacion");
                }
            }
        }
        private string _acno_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> acno_dFechaModificacion
        {
            get { return _acno_dFechaModificacion; }
            set
            {
                if (_acno_dFechaModificacion != value)
                {
                    _acno_dFechaModificacion = value;
                    OnPropertyChanged("acno_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _acno_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public MA_ESTADO MA_ESTADO
        {
            get { return _mA_ESTADO; }
            set
            {
                if (!ReferenceEquals(_mA_ESTADO, value))
                {
                    var previousValue = _mA_ESTADO;
                    _mA_ESTADO = value;
                    FixupMA_ESTADO(previousValue);
                    OnNavigationPropertyChanged("MA_ESTADO");
                }
            }
        }
        private MA_ESTADO _mA_ESTADO;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIAL> RE_ACTONOTARIAL1
        {
            get
            {
                if (_rE_ACTONOTARIAL1 == null)
                {
                    _rE_ACTONOTARIAL1 = new TrackableCollection<RE_ACTONOTARIAL>();
                    _rE_ACTONOTARIAL1.CollectionChanged += FixupRE_ACTONOTARIAL1;
                }
                return _rE_ACTONOTARIAL1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIAL1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIAL1 != null)
                    {
                        _rE_ACTONOTARIAL1.CollectionChanged -= FixupRE_ACTONOTARIAL1;
                    }
                    _rE_ACTONOTARIAL1 = value;
                    if (_rE_ACTONOTARIAL1 != null)
                    {
                        _rE_ACTONOTARIAL1.CollectionChanged += FixupRE_ACTONOTARIAL1;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIAL1");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIAL> _rE_ACTONOTARIAL1;
    
        [DataMember]
        public RE_ACTONOTARIAL RE_ACTONOTARIAL2
        {
            get { return _rE_ACTONOTARIAL2; }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIAL2, value))
                {
                    var previousValue = _rE_ACTONOTARIAL2;
                    _rE_ACTONOTARIAL2 = value;
                    FixupRE_ACTONOTARIAL2(previousValue);
                    OnNavigationPropertyChanged("RE_ACTONOTARIAL2");
                }
            }
        }
        private RE_ACTONOTARIAL _rE_ACTONOTARIAL2;
    
        [DataMember]
        public RE_ACTUACION RE_ACTUACION
        {
            get { return _rE_ACTUACION; }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACION, value))
                {
                    var previousValue = _rE_ACTUACION;
                    _rE_ACTUACION = value;
                    FixupRE_ACTUACION(previousValue);
                    OnNavigationPropertyChanged("RE_ACTUACION");
                }
            }
        }
        private RE_ACTUACION _rE_ACTUACION;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR
        {
            get { return _sI_OFICINACONSULAR; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    var previousValue = _sI_OFICINACONSULAR;
                    _sI_OFICINACONSULAR = value;
                    FixupSI_OFICINACONSULAR(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public SI_UBICACIONGEOGRAFICA SI_UBICACIONGEOGRAFICA
        {
            get { return _sI_UBICACIONGEOGRAFICA; }
            set
            {
                if (!ReferenceEquals(_sI_UBICACIONGEOGRAFICA, value))
                {
                    var previousValue = _sI_UBICACIONGEOGRAFICA;
                    _sI_UBICACIONGEOGRAFICA = value;
                    FixupSI_UBICACIONGEOGRAFICA(previousValue);
                    OnNavigationPropertyChanged("SI_UBICACIONGEOGRAFICA");
                }
            }
        }
        private SI_UBICACIONGEOGRAFICA _sI_UBICACIONGEOGRAFICA;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALCUERPO> RE_ACTONOTARIALCUERPO
        {
            get
            {
                if (_rE_ACTONOTARIALCUERPO == null)
                {
                    _rE_ACTONOTARIALCUERPO = new TrackableCollection<RE_ACTONOTARIALCUERPO>();
                    _rE_ACTONOTARIALCUERPO.CollectionChanged += FixupRE_ACTONOTARIALCUERPO;
                }
                return _rE_ACTONOTARIALCUERPO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALCUERPO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALCUERPO != null)
                    {
                        _rE_ACTONOTARIALCUERPO.CollectionChanged -= FixupRE_ACTONOTARIALCUERPO;
                    }
                    _rE_ACTONOTARIALCUERPO = value;
                    if (_rE_ACTONOTARIALCUERPO != null)
                    {
                        _rE_ACTONOTARIALCUERPO.CollectionChanged += FixupRE_ACTONOTARIALCUERPO;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALCUERPO");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALCUERPO> _rE_ACTONOTARIALCUERPO;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALDOCUMENTO> RE_ACTONOTARIALDOCUMENTO
        {
            get
            {
                if (_rE_ACTONOTARIALDOCUMENTO == null)
                {
                    _rE_ACTONOTARIALDOCUMENTO = new TrackableCollection<RE_ACTONOTARIALDOCUMENTO>();
                    _rE_ACTONOTARIALDOCUMENTO.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO;
                }
                return _rE_ACTONOTARIALDOCUMENTO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALDOCUMENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALDOCUMENTO != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO.CollectionChanged -= FixupRE_ACTONOTARIALDOCUMENTO;
                    }
                    _rE_ACTONOTARIALDOCUMENTO = value;
                    if (_rE_ACTONOTARIALDOCUMENTO != null)
                    {
                        _rE_ACTONOTARIALDOCUMENTO.CollectionChanged += FixupRE_ACTONOTARIALDOCUMENTO;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALDOCUMENTO");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALDOCUMENTO> _rE_ACTONOTARIALDOCUMENTO;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALPARTICIPANTE> RE_ACTONOTARIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTONOTARIALPARTICIPANTE == null)
                {
                    _rE_ACTONOTARIALPARTICIPANTE = new TrackableCollection<RE_ACTONOTARIALPARTICIPANTE>();
                    _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged += FixupRE_ACTONOTARIALPARTICIPANTE;
                }
                return _rE_ACTONOTARIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALPARTICIPANTE != null)
                    {
                        _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTONOTARIALPARTICIPANTE;
                    }
                    _rE_ACTONOTARIALPARTICIPANTE = value;
                    if (_rE_ACTONOTARIALPARTICIPANTE != null)
                    {
                        _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged += FixupRE_ACTONOTARIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALPARTICIPANTE> _rE_ACTONOTARIALPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALSEGUIMIENTO> RE_ACTONOTARIALSEGUIMIENTO
        {
            get
            {
                if (_rE_ACTONOTARIALSEGUIMIENTO == null)
                {
                    _rE_ACTONOTARIALSEGUIMIENTO = new TrackableCollection<RE_ACTONOTARIALSEGUIMIENTO>();
                    _rE_ACTONOTARIALSEGUIMIENTO.CollectionChanged += FixupRE_ACTONOTARIALSEGUIMIENTO;
                }
                return _rE_ACTONOTARIALSEGUIMIENTO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALSEGUIMIENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALSEGUIMIENTO != null)
                    {
                        _rE_ACTONOTARIALSEGUIMIENTO.CollectionChanged -= FixupRE_ACTONOTARIALSEGUIMIENTO;
                    }
                    _rE_ACTONOTARIALSEGUIMIENTO = value;
                    if (_rE_ACTONOTARIALSEGUIMIENTO != null)
                    {
                        _rE_ACTONOTARIALSEGUIMIENTO.CollectionChanged += FixupRE_ACTONOTARIALSEGUIMIENTO;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALSEGUIMIENTO");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALSEGUIMIENTO> _rE_ACTONOTARIALSEGUIMIENTO;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            MA_ESTADO = null;
            RE_ACTONOTARIAL1.Clear();
            RE_ACTONOTARIAL2 = null;
            RE_ACTUACION = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_OFICINACONSULAR = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            SI_UBICACIONGEOGRAFICA = null;
            RE_ACTONOTARIALCUERPO.Clear();
            RE_ACTONOTARIALDOCUMENTO.Clear();
            RE_ACTONOTARIALPARTICIPANTE.Clear();
            RE_ACTONOTARIALSEGUIMIENTO.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupMA_ESTADO(MA_ESTADO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIAL.Contains(this))
            {
                previousValue.RE_ACTONOTARIAL.Remove(this);
            }
    
            if (MA_ESTADO != null)
            {
                if (!MA_ESTADO.RE_ACTONOTARIAL.Contains(this))
                {
                    MA_ESTADO.RE_ACTONOTARIAL.Add(this);
                }
    
                acno_sEstadoId = MA_ESTADO.esta_sEstadoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_ESTADO")
                    && (ChangeTracker.OriginalValues["MA_ESTADO"] == MA_ESTADO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_ESTADO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_ESTADO", previousValue);
                }
                if (MA_ESTADO != null && !MA_ESTADO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_ESTADO.StartTracking();
                }
            }
        }
    
        private void FixupRE_ACTONOTARIAL2(RE_ACTONOTARIAL previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIAL1.Contains(this))
            {
                previousValue.RE_ACTONOTARIAL1.Remove(this);
            }
    
            if (RE_ACTONOTARIAL2 != null)
            {
                if (!RE_ACTONOTARIAL2.RE_ACTONOTARIAL1.Contains(this))
                {
                    RE_ACTONOTARIAL2.RE_ACTONOTARIAL1.Add(this);
                }
    
                acno_iActoNotarialReferenciaId = RE_ACTONOTARIAL2.acno_iActoNotarialId;
            }
            else if (!skipKeys)
            {
                acno_iActoNotarialReferenciaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_ACTONOTARIAL2")
                    && (ChangeTracker.OriginalValues["RE_ACTONOTARIAL2"] == RE_ACTONOTARIAL2))
                {
                    ChangeTracker.OriginalValues.Remove("RE_ACTONOTARIAL2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_ACTONOTARIAL2", previousValue);
                }
                if (RE_ACTONOTARIAL2 != null && !RE_ACTONOTARIAL2.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_ACTONOTARIAL2.StartTracking();
                }
            }
        }
    
        private void FixupRE_ACTUACION(RE_ACTUACION previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIAL.Contains(this))
            {
                previousValue.RE_ACTONOTARIAL.Remove(this);
            }
    
            if (RE_ACTUACION != null)
            {
                if (!RE_ACTUACION.RE_ACTONOTARIAL.Contains(this))
                {
                    RE_ACTUACION.RE_ACTONOTARIAL.Add(this);
                }
    
                acno_iActuacionId = RE_ACTUACION.actu_iActuacionId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_ACTUACION")
                    && (ChangeTracker.OriginalValues["RE_ACTUACION"] == RE_ACTUACION))
                {
                    ChangeTracker.OriginalValues.Remove("RE_ACTUACION");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_ACTUACION", previousValue);
                }
                if (RE_ACTUACION != null && !RE_ACTUACION.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_ACTUACION.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIAL.Contains(this))
            {
                previousValue.RE_ACTONOTARIAL.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_ACTONOTARIAL.Contains(this))
                {
                    SE_USUARIO.RE_ACTONOTARIAL.Add(this);
                }
    
                acno_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIAL1.Contains(this))
            {
                previousValue.RE_ACTONOTARIAL1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_ACTONOTARIAL1.Contains(this))
                {
                    SE_USUARIO1.RE_ACTONOTARIAL1.Add(this);
                }
    
                acno_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                acno_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(SI_OFICINACONSULAR previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIAL.Contains(this))
            {
                previousValue.RE_ACTONOTARIAL.Remove(this);
            }
    
            if (SI_OFICINACONSULAR != null)
            {
                if (!SI_OFICINACONSULAR.RE_ACTONOTARIAL.Contains(this))
                {
                    SI_OFICINACONSULAR.RE_ACTONOTARIAL.Add(this);
                }
    
                acno_sOficinaConsularId = SI_OFICINACONSULAR.ofco_sOficinaConsularId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR"] == SI_OFICINACONSULAR))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR", previousValue);
                }
                if (SI_OFICINACONSULAR != null && !SI_OFICINACONSULAR.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIAL.Contains(this))
            {
                previousValue.RE_ACTONOTARIAL.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.RE_ACTONOTARIAL.Contains(this))
                {
                    SI_PARAMETRO.RE_ACTONOTARIAL.Add(this);
                }
    
                acno_sTipoActoNotarialId = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIAL1.Contains(this))
            {
                previousValue.RE_ACTONOTARIAL1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.RE_ACTONOTARIAL1.Contains(this))
                {
                    SI_PARAMETRO1.RE_ACTONOTARIAL1.Add(this);
                }
    
                acno_sSubTipoActoNotarialId = SI_PARAMETRO1.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_UBICACIONGEOGRAFICA(SI_UBICACIONGEOGRAFICA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTONOTARIAL.Contains(this))
            {
                previousValue.RE_ACTONOTARIAL.Remove(this);
            }
    
            if (SI_UBICACIONGEOGRAFICA != null)
            {
                if (!SI_UBICACIONGEOGRAFICA.RE_ACTONOTARIAL.Contains(this))
                {
                    SI_UBICACIONGEOGRAFICA.RE_ACTONOTARIAL.Add(this);
                }
    
                acno_cUbigeoDestino = SI_UBICACIONGEOGRAFICA.ubge_cCodigo;
            }
            else if (!skipKeys)
            {
                acno_cUbigeoDestino = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_UBICACIONGEOGRAFICA")
                    && (ChangeTracker.OriginalValues["SI_UBICACIONGEOGRAFICA"] == SI_UBICACIONGEOGRAFICA))
                {
                    ChangeTracker.OriginalValues.Remove("SI_UBICACIONGEOGRAFICA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_UBICACIONGEOGRAFICA", previousValue);
                }
                if (SI_UBICACIONGEOGRAFICA != null && !SI_UBICACIONGEOGRAFICA.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_UBICACIONGEOGRAFICA.StartTracking();
                }
            }
        }
    
        private void FixupRE_ACTONOTARIAL1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.NewItems)
                {
                    item.RE_ACTONOTARIAL2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIAL1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTONOTARIAL2, this))
                    {
                        item.RE_ACTONOTARIAL2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIAL1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALCUERPO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALCUERPO item in e.NewItems)
                {
                    item.RE_ACTONOTARIAL = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALCUERPO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALCUERPO item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTONOTARIAL, this))
                    {
                        item.RE_ACTONOTARIAL = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALCUERPO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALDOCUMENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.NewItems)
                {
                    item.RE_ACTONOTARIAL = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALDOCUMENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALDOCUMENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTONOTARIAL, this))
                    {
                        item.RE_ACTONOTARIAL = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALDOCUMENTO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALPARTICIPANTE item in e.NewItems)
                {
                    item.RE_ACTONOTARIAL = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTONOTARIAL, this))
                    {
                        item.RE_ACTONOTARIAL = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALSEGUIMIENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALSEGUIMIENTO item in e.NewItems)
                {
                    item.RE_ACTONOTARIAL = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALSEGUIMIENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALSEGUIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTONOTARIAL, this))
                    {
                        item.RE_ACTONOTARIAL = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALSEGUIMIENTO", item);
                    }
                }
            }
        }

        #endregion
    }
}
