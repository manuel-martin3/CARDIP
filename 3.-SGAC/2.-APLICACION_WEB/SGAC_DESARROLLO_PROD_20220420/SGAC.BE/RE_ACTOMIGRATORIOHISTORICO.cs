//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(RE_ACTOMIGRATORIO))]
    [KnownType(typeof(MA_ESTADO))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    public partial class RE_ACTOMIGRATORIOHISTORICO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long amhi_iActoMigratorioHistoricoId
        {
            get { return _amhi_iActoMigratorioHistoricoId; }
            set
            {
                if (_amhi_iActoMigratorioHistoricoId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'amhi_iActoMigratorioHistoricoId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _amhi_iActoMigratorioHistoricoId = value;
                    OnPropertyChanged("amhi_iActoMigratorioHistoricoId");
                }
            }
        }
        private long _amhi_iActoMigratorioHistoricoId;
    
        [DataMember]
        public long amhi_iActoMigratorioId
        {
            get { return _amhi_iActoMigratorioId; }
            set
            {
                if (_amhi_iActoMigratorioId != value)
                {
                    ChangeTracker.RecordOriginalValue("amhi_iActoMigratorioId", _amhi_iActoMigratorioId);
                    if (!IsDeserializing)
                    {
                        if (RE_ACTOMIGRATORIO != null && RE_ACTOMIGRATORIO.acmi_iActoMigratorioId != value)
                        {
                            RE_ACTOMIGRATORIO = null;
                        }
                    }
                    _amhi_iActoMigratorioId = value;
                    OnPropertyChanged("amhi_iActoMigratorioId");
                }
            }
        }
        private long _amhi_iActoMigratorioId;
    
        [DataMember]
        public short amhi_sTipoInsumoId
        {
            get { return _amhi_sTipoInsumoId; }
            set
            {
                if (_amhi_sTipoInsumoId != value)
                {
                    ChangeTracker.RecordOriginalValue("amhi_sTipoInsumoId", _amhi_sTipoInsumoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _amhi_sTipoInsumoId = value;
                    OnPropertyChanged("amhi_sTipoInsumoId");
                }
            }
        }
        private short _amhi_sTipoInsumoId;
    
        [DataMember]
        public Nullable<int> amhi_IFuncionarioId
        {
            get { return _amhi_IFuncionarioId; }
            set
            {
                if (_amhi_IFuncionarioId != value)
                {
                    _amhi_IFuncionarioId = value;
                    OnPropertyChanged("amhi_IFuncionarioId");
                }
            }
        }
        private Nullable<int> _amhi_IFuncionarioId;
    
        [DataMember]
        public short amhi_sInsumoId
        {
            get { return _amhi_sInsumoId; }
            set
            {
                if (_amhi_sInsumoId != value)
                {
                    _amhi_sInsumoId = value;
                    OnPropertyChanged("amhi_sInsumoId");
                }
            }
        }
        private short _amhi_sInsumoId;
    
        [DataMember]
        public short amhi_sMotivoId
        {
            get { return _amhi_sMotivoId; }
            set
            {
                if (_amhi_sMotivoId != value)
                {
                    ChangeTracker.RecordOriginalValue("amhi_sMotivoId", _amhi_sMotivoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _amhi_sMotivoId = value;
                    OnPropertyChanged("amhi_sMotivoId");
                }
            }
        }
        private short _amhi_sMotivoId;
    
        [DataMember]
        public System.DateTime amhi_dFechaRegistro
        {
            get { return _amhi_dFechaRegistro; }
            set
            {
                if (_amhi_dFechaRegistro != value)
                {
                    _amhi_dFechaRegistro = value;
                    OnPropertyChanged("amhi_dFechaRegistro");
                }
            }
        }
        private System.DateTime _amhi_dFechaRegistro;
    
        [DataMember]
        public string amhi_vObservaciones
        {
            get { return _amhi_vObservaciones; }
            set
            {
                if (_amhi_vObservaciones != value)
                {
                    _amhi_vObservaciones = value;
                    OnPropertyChanged("amhi_vObservaciones");
                }
            }
        }
        private string _amhi_vObservaciones;
    
        [DataMember]
        public short amhi_sEstadoId
        {
            get { return _amhi_sEstadoId; }
            set
            {
                if (_amhi_sEstadoId != value)
                {
                    ChangeTracker.RecordOriginalValue("amhi_sEstadoId", _amhi_sEstadoId);
                    if (!IsDeserializing)
                    {
                        if (MA_ESTADO != null && MA_ESTADO.esta_sEstadoId != value)
                        {
                            MA_ESTADO = null;
                        }
                    }
                    _amhi_sEstadoId = value;
                    OnPropertyChanged("amhi_sEstadoId");
                }
            }
        }
        private short _amhi_sEstadoId;
    
        [DataMember]
        public short amhi_sUsuarioCreacion
        {
            get { return _amhi_sUsuarioCreacion; }
            set
            {
                if (_amhi_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("amhi_sUsuarioCreacion", _amhi_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _amhi_sUsuarioCreacion = value;
                    OnPropertyChanged("amhi_sUsuarioCreacion");
                }
            }
        }
        private short _amhi_sUsuarioCreacion;
    
        [DataMember]
        public string amhi_vIPCreacion
        {
            get { return _amhi_vIPCreacion; }
            set
            {
                if (_amhi_vIPCreacion != value)
                {
                    _amhi_vIPCreacion = value;
                    OnPropertyChanged("amhi_vIPCreacion");
                }
            }
        }
        private string _amhi_vIPCreacion;
    
        [DataMember]
        public System.DateTime amhi_dFechaCreacion
        {
            get { return _amhi_dFechaCreacion; }
            set
            {
                if (_amhi_dFechaCreacion != value)
                {
                    _amhi_dFechaCreacion = value;
                    OnPropertyChanged("amhi_dFechaCreacion");
                }
            }
        }
        private System.DateTime _amhi_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> amhi_sUsuarioModificacion
        {
            get { return _amhi_sUsuarioModificacion; }
            set
            {
                if (_amhi_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("amhi_sUsuarioModificacion", _amhi_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _amhi_sUsuarioModificacion = value;
                    OnPropertyChanged("amhi_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _amhi_sUsuarioModificacion;
    
        [DataMember]
        public string amhi_vIPModificacion
        {
            get { return _amhi_vIPModificacion; }
            set
            {
                if (_amhi_vIPModificacion != value)
                {
                    _amhi_vIPModificacion = value;
                    OnPropertyChanged("amhi_vIPModificacion");
                }
            }
        }
        private string _amhi_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> amhi_dFechaModificacion
        {
            get { return _amhi_dFechaModificacion; }
            set
            {
                if (_amhi_dFechaModificacion != value)
                {
                    _amhi_dFechaModificacion = value;
                    OnPropertyChanged("amhi_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _amhi_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public RE_ACTOMIGRATORIO RE_ACTOMIGRATORIO
        {
            get { return _rE_ACTOMIGRATORIO; }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIO, value))
                {
                    var previousValue = _rE_ACTOMIGRATORIO;
                    _rE_ACTOMIGRATORIO = value;
                    FixupRE_ACTOMIGRATORIO(previousValue);
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIO");
                }
            }
        }
        private RE_ACTOMIGRATORIO _rE_ACTOMIGRATORIO;
    
        [DataMember]
        public MA_ESTADO MA_ESTADO
        {
            get { return _mA_ESTADO; }
            set
            {
                if (!ReferenceEquals(_mA_ESTADO, value))
                {
                    var previousValue = _mA_ESTADO;
                    _mA_ESTADO = value;
                    FixupMA_ESTADO(previousValue);
                    OnNavigationPropertyChanged("MA_ESTADO");
                }
            }
        }
        private MA_ESTADO _mA_ESTADO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            RE_ACTOMIGRATORIO = null;
            MA_ESTADO = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupRE_ACTOMIGRATORIO(RE_ACTOMIGRATORIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTOMIGRATORIOHISTORICO.Contains(this))
            {
                previousValue.RE_ACTOMIGRATORIOHISTORICO.Remove(this);
            }
    
            if (RE_ACTOMIGRATORIO != null)
            {
                if (!RE_ACTOMIGRATORIO.RE_ACTOMIGRATORIOHISTORICO.Contains(this))
                {
                    RE_ACTOMIGRATORIO.RE_ACTOMIGRATORIOHISTORICO.Add(this);
                }
    
                amhi_iActoMigratorioId = RE_ACTOMIGRATORIO.acmi_iActoMigratorioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_ACTOMIGRATORIO")
                    && (ChangeTracker.OriginalValues["RE_ACTOMIGRATORIO"] == RE_ACTOMIGRATORIO))
                {
                    ChangeTracker.OriginalValues.Remove("RE_ACTOMIGRATORIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_ACTOMIGRATORIO", previousValue);
                }
                if (RE_ACTOMIGRATORIO != null && !RE_ACTOMIGRATORIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_ACTOMIGRATORIO.StartTracking();
                }
            }
        }
    
        private void FixupMA_ESTADO(MA_ESTADO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTOMIGRATORIOHISTORICO.Contains(this))
            {
                previousValue.RE_ACTOMIGRATORIOHISTORICO.Remove(this);
            }
    
            if (MA_ESTADO != null)
            {
                if (!MA_ESTADO.RE_ACTOMIGRATORIOHISTORICO.Contains(this))
                {
                    MA_ESTADO.RE_ACTOMIGRATORIOHISTORICO.Add(this);
                }
    
                amhi_sEstadoId = MA_ESTADO.esta_sEstadoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_ESTADO")
                    && (ChangeTracker.OriginalValues["MA_ESTADO"] == MA_ESTADO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_ESTADO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_ESTADO", previousValue);
                }
                if (MA_ESTADO != null && !MA_ESTADO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_ESTADO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTOMIGRATORIOHISTORICO.Contains(this))
            {
                previousValue.RE_ACTOMIGRATORIOHISTORICO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_ACTOMIGRATORIOHISTORICO.Contains(this))
                {
                    SE_USUARIO.RE_ACTOMIGRATORIOHISTORICO.Add(this);
                }
    
                amhi_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTOMIGRATORIOHISTORICO1.Contains(this))
            {
                previousValue.RE_ACTOMIGRATORIOHISTORICO1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_ACTOMIGRATORIOHISTORICO1.Contains(this))
                {
                    SE_USUARIO1.RE_ACTOMIGRATORIOHISTORICO1.Add(this);
                }
    
                amhi_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                amhi_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTOMIGRATORIOHISTORICO.Contains(this))
            {
                previousValue.RE_ACTOMIGRATORIOHISTORICO.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.RE_ACTOMIGRATORIOHISTORICO.Contains(this))
                {
                    SI_PARAMETRO.RE_ACTOMIGRATORIOHISTORICO.Add(this);
                }
    
                amhi_sMotivoId = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTOMIGRATORIOHISTORICO1.Contains(this))
            {
                previousValue.RE_ACTOMIGRATORIOHISTORICO1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.RE_ACTOMIGRATORIOHISTORICO1.Contains(this))
                {
                    SI_PARAMETRO1.RE_ACTOMIGRATORIOHISTORICO1.Add(this);
                }
    
                amhi_sTipoInsumoId = SI_PARAMETRO1.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }

        #endregion
    }
}
