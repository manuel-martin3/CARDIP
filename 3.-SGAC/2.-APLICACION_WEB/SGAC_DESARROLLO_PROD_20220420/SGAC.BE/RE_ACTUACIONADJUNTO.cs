//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(RE_ACTUACIONDETALLE))]
    [KnownType(typeof(SE_USUARIO))]
    public partial class RE_ACTUACIONADJUNTO: IObjectWithChangeTracker, INotifyPropertyChanged
    {

        public Boolean acad_bBloqueoAdjunto { get; set; }
        #region Primitive Properties
    
        [DataMember]
        public long acad_iActuacionAdjuntoId
        {
            get { return _acad_iActuacionAdjuntoId; }
            set
            {
                if (_acad_iActuacionAdjuntoId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'acad_iActuacionAdjuntoId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _acad_iActuacionAdjuntoId = value;
                    OnPropertyChanged("acad_iActuacionAdjuntoId");
                }
            }
        }
        private long _acad_iActuacionAdjuntoId;
    
        [DataMember]
        public long acad_iActuacionDetalleId
        {
            get { return _acad_iActuacionDetalleId; }
            set
            {
                if (_acad_iActuacionDetalleId != value)
                {
                    ChangeTracker.RecordOriginalValue("acad_iActuacionDetalleId", _acad_iActuacionDetalleId);
                    if (!IsDeserializing)
                    {
                        if (RE_ACTUACIONDETALLE != null && RE_ACTUACIONDETALLE.acde_iActuacionDetalleId != value)
                        {
                            RE_ACTUACIONDETALLE = null;
                        }
                    }
                    _acad_iActuacionDetalleId = value;
                    OnPropertyChanged("acad_iActuacionDetalleId");
                }
            }
        }
        private long _acad_iActuacionDetalleId;
    
        [DataMember]
        public short acad_sAdjuntoTipoId
        {
            get { return _acad_sAdjuntoTipoId; }
            set
            {
                if (_acad_sAdjuntoTipoId != value)
                {
                    _acad_sAdjuntoTipoId = value;
                    OnPropertyChanged("acad_sAdjuntoTipoId");
                }
            }
        }
        private short _acad_sAdjuntoTipoId;
    
        [DataMember]
        public string acad_vNombreArchivo
        {
            get { return _acad_vNombreArchivo; }
            set
            {
                if (_acad_vNombreArchivo != value)
                {
                    _acad_vNombreArchivo = value;
                    OnPropertyChanged("acad_vNombreArchivo");
                }
            }
        }
        private string _acad_vNombreArchivo;
    
        [DataMember]
        public string acad_vDescripcion
        {
            get { return _acad_vDescripcion; }
            set
            {
                if (_acad_vDescripcion != value)
                {
                    _acad_vDescripcion = value;
                    OnPropertyChanged("acad_vDescripcion");
                }
            }
        }
        private string _acad_vDescripcion;
    
        [DataMember]
        public string acad_cEstado
        {
            get { return _acad_cEstado; }
            set
            {
                if (_acad_cEstado != value)
                {
                    _acad_cEstado = value;
                    OnPropertyChanged("acad_cEstado");
                }
            }
        }
        private string _acad_cEstado;
    
        [DataMember]
        public short acad_sUsuarioCreacion
        {
            get { return _acad_sUsuarioCreacion; }
            set
            {
                if (_acad_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("acad_sUsuarioCreacion", _acad_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _acad_sUsuarioCreacion = value;
                    OnPropertyChanged("acad_sUsuarioCreacion");
                }
            }
        }
        private short _acad_sUsuarioCreacion;
    
        [DataMember]
        public string acad_vIPCreacion
        {
            get { return _acad_vIPCreacion; }
            set
            {
                if (_acad_vIPCreacion != value)
                {
                    _acad_vIPCreacion = value;
                    OnPropertyChanged("acad_vIPCreacion");
                }
            }
        }
        private string _acad_vIPCreacion;
    
        [DataMember]
        public System.DateTime acad_dFechaCreacion
        {
            get { return _acad_dFechaCreacion; }
            set
            {
                if (_acad_dFechaCreacion != value)
                {
                    _acad_dFechaCreacion = value;
                    OnPropertyChanged("acad_dFechaCreacion");
                }
            }
        }
        private System.DateTime _acad_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> acad_sUsuarioModificacion
        {
            get { return _acad_sUsuarioModificacion; }
            set
            {
                if (_acad_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("acad_sUsuarioModificacion", _acad_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _acad_sUsuarioModificacion = value;
                    OnPropertyChanged("acad_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _acad_sUsuarioModificacion;
    
        [DataMember]
        public string acad_vIPModificacion
        {
            get { return _acad_vIPModificacion; }
            set
            {
                if (_acad_vIPModificacion != value)
                {
                    _acad_vIPModificacion = value;
                    OnPropertyChanged("acad_vIPModificacion");
                }
            }
        }
        private string _acad_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> acad_dFechaModificacion
        {
            get { return _acad_dFechaModificacion; }
            set
            {
                if (_acad_dFechaModificacion != value)
                {
                    _acad_dFechaModificacion = value;
                    OnPropertyChanged("acad_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _acad_dFechaModificacion;
    
        [DataMember]
        public Nullable<int> acad_IDigitalizadoFuncionarioId
        {
            get { return _acad_IDigitalizadoFuncionarioId; }
            set
            {
                if (_acad_IDigitalizadoFuncionarioId != value)
                {
                    _acad_IDigitalizadoFuncionarioId = value;
                    OnPropertyChanged("acad_IDigitalizadoFuncionarioId");
                }
            }
        }
        private Nullable<int> _acad_IDigitalizadoFuncionarioId;
    
        [DataMember]
        public Nullable<bool> acad_bDigitalizadoCorrectaFlag
        {
            get { return _acad_bDigitalizadoCorrectaFlag; }
            set
            {
                if (_acad_bDigitalizadoCorrectaFlag != value)
                {
                    _acad_bDigitalizadoCorrectaFlag = value;
                    OnPropertyChanged("acad_bDigitalizadoCorrectaFlag");
                }
            }
        }
        private Nullable<bool> _acad_bDigitalizadoCorrectaFlag;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public RE_ACTUACIONDETALLE RE_ACTUACIONDETALLE
        {
            get { return _rE_ACTUACIONDETALLE; }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONDETALLE, value))
                {
                    var previousValue = _rE_ACTUACIONDETALLE;
                    _rE_ACTUACIONDETALLE = value;
                    FixupRE_ACTUACIONDETALLE(previousValue);
                    OnNavigationPropertyChanged("RE_ACTUACIONDETALLE");
                }
            }
        }
        private RE_ACTUACIONDETALLE _rE_ACTUACIONDETALLE;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            RE_ACTUACIONDETALLE = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupRE_ACTUACIONDETALLE(RE_ACTUACIONDETALLE previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONADJUNTO.Contains(this))
            {
                previousValue.RE_ACTUACIONADJUNTO.Remove(this);
            }
    
            if (RE_ACTUACIONDETALLE != null)
            {
                if (!RE_ACTUACIONDETALLE.RE_ACTUACIONADJUNTO.Contains(this))
                {
                    RE_ACTUACIONDETALLE.RE_ACTUACIONADJUNTO.Add(this);
                }
    
                acad_iActuacionDetalleId = RE_ACTUACIONDETALLE.acde_iActuacionDetalleId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_ACTUACIONDETALLE")
                    && (ChangeTracker.OriginalValues["RE_ACTUACIONDETALLE"] == RE_ACTUACIONDETALLE))
                {
                    ChangeTracker.OriginalValues.Remove("RE_ACTUACIONDETALLE");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_ACTUACIONDETALLE", previousValue);
                }
                if (RE_ACTUACIONDETALLE != null && !RE_ACTUACIONDETALLE.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_ACTUACIONDETALLE.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONADJUNTO.Contains(this))
            {
                previousValue.RE_ACTUACIONADJUNTO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_ACTUACIONADJUNTO.Contains(this))
                {
                    SE_USUARIO.RE_ACTUACIONADJUNTO.Add(this);
                }
    
                acad_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACIONADJUNTO1.Contains(this))
            {
                previousValue.RE_ACTUACIONADJUNTO1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_ACTUACIONADJUNTO1.Contains(this))
                {
                    SE_USUARIO1.RE_ACTUACIONADJUNTO1.Add(this);
                }
    
                acad_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                acad_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }

        #endregion
    }
}
