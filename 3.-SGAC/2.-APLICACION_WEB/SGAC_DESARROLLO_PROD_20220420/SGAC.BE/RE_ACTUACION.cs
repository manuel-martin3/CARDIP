//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AL_MOVIMIENTODETALLE))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(RE_ACTUACIONDETALLE))]
    [KnownType(typeof(RE_ACTOJUDICIAL))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    [KnownType(typeof(RE_EMPRESA))]
    [KnownType(typeof(RE_PERSONA))]
    [KnownType(typeof(RE_ACTONOTARIAL))]
    public partial class RE_ACTUACION: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long actu_iActuacionId
        {
            get { return _actu_iActuacionId; }
            set
            {
                if (_actu_iActuacionId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'actu_iActuacionId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _actu_iActuacionId = value;
                    OnPropertyChanged("actu_iActuacionId");
                }
            }
        }
        private long _actu_iActuacionId;
    
        [DataMember]
        public Nullable<short> actu_sOficinaConsularId
        {
            get { return _actu_sOficinaConsularId; }
            set
            {
                if (_actu_sOficinaConsularId != value)
                {
                    ChangeTracker.RecordOriginalValue("actu_sOficinaConsularId", _actu_sOficinaConsularId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR != null && SI_OFICINACONSULAR.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR = null;
                        }
                    }
                    _actu_sOficinaConsularId = value;
                    OnPropertyChanged("actu_sOficinaConsularId");
                }
            }
        }
        private Nullable<short> _actu_sOficinaConsularId;
    
        [DataMember]
        public double actu_FCantidad
        {
            get { return _actu_FCantidad; }
            set
            {
                if (_actu_FCantidad != value)
                {
                    _actu_FCantidad = value;
                    OnPropertyChanged("actu_FCantidad");
                }
            }
        }
        private double _actu_FCantidad;
    
        [DataMember]
        public Nullable<long> actu_iPersonaRecurrenteId
        {
            get { return _actu_iPersonaRecurrenteId; }
            set
            {
                if (_actu_iPersonaRecurrenteId != value)
                {
                    ChangeTracker.RecordOriginalValue("actu_iPersonaRecurrenteId", _actu_iPersonaRecurrenteId);
                    if (!IsDeserializing)
                    {
                        if (RE_PERSONA != null && RE_PERSONA.pers_iPersonaId != value)
                        {
                            RE_PERSONA = null;
                        }
                    }
                    _actu_iPersonaRecurrenteId = value;
                    OnPropertyChanged("actu_iPersonaRecurrenteId");
                }
            }
        }
        private Nullable<long> _actu_iPersonaRecurrenteId;
    
        [DataMember]
        public Nullable<int> actu_IFuncionarioId
        {
            get { return _actu_IFuncionarioId; }
            set
            {
                if (_actu_IFuncionarioId != value)
                {
                    _actu_IFuncionarioId = value;
                    OnPropertyChanged("actu_IFuncionarioId");
                }
            }
        }
        private Nullable<int> _actu_IFuncionarioId;
    
        [DataMember]
        public System.DateTime actu_dFechaRegistro
        {
            get { return _actu_dFechaRegistro; }
            set
            {
                if (_actu_dFechaRegistro != value)
                {
                    _actu_dFechaRegistro = value;
                    OnPropertyChanged("actu_dFechaRegistro");
                }
            }
        }
        private System.DateTime _actu_dFechaRegistro;
    
        [DataMember]
        public short actu_sEstado
        {
            get { return _actu_sEstado; }
            set
            {
                if (_actu_sEstado != value)
                {
                    _actu_sEstado = value;
                    OnPropertyChanged("actu_sEstado");
                }
            }
        }
        private short _actu_sEstado;
    
        [DataMember]
        public short actu_sUsuarioCreacion
        {
            get { return _actu_sUsuarioCreacion; }
            set
            {
                if (_actu_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("actu_sUsuarioCreacion", _actu_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _actu_sUsuarioCreacion = value;
                    OnPropertyChanged("actu_sUsuarioCreacion");
                }
            }
        }
        private short _actu_sUsuarioCreacion;
    
        [DataMember]
        public string actu_vIPCreacion
        {
            get { return _actu_vIPCreacion; }
            set
            {
                if (_actu_vIPCreacion != value)
                {
                    _actu_vIPCreacion = value;
                    OnPropertyChanged("actu_vIPCreacion");
                }
            }
        }
        private string _actu_vIPCreacion;
    
        [DataMember]
        public System.DateTime actu_dFechaCreacion
        {
            get { return _actu_dFechaCreacion; }
            set
            {
                if (_actu_dFechaCreacion != value)
                {
                    _actu_dFechaCreacion = value;
                    OnPropertyChanged("actu_dFechaCreacion");
                }
            }
        }
        private System.DateTime _actu_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> actu_sUsuarioModificacion
        {
            get { return _actu_sUsuarioModificacion; }
            set
            {
                if (_actu_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("actu_sUsuarioModificacion", _actu_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _actu_sUsuarioModificacion = value;
                    OnPropertyChanged("actu_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _actu_sUsuarioModificacion;
    
        [DataMember]
        public string actu_vIPModificacion
        {
            get { return _actu_vIPModificacion; }
            set
            {
                if (_actu_vIPModificacion != value)
                {
                    _actu_vIPModificacion = value;
                    OnPropertyChanged("actu_vIPModificacion");
                }
            }
        }
        private string _actu_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> actu_dFechaModificacion
        {
            get { return _actu_dFechaModificacion; }
            set
            {
                if (_actu_dFechaModificacion != value)
                {
                    _actu_dFechaModificacion = value;
                    OnPropertyChanged("actu_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _actu_dFechaModificacion;
    
        [DataMember]
        public Nullable<long> actu_iEmpresaRecurrenteId
        {
            get { return _actu_iEmpresaRecurrenteId; }
            set
            {
                if (_actu_iEmpresaRecurrenteId != value)
                {
                    ChangeTracker.RecordOriginalValue("actu_iEmpresaRecurrenteId", _actu_iEmpresaRecurrenteId);
                    if (!IsDeserializing)
                    {
                        if (RE_EMPRESA != null && RE_EMPRESA.empr_iEmpresaId != value)
                        {
                            RE_EMPRESA = null;
                        }
                    }
                    _actu_iEmpresaRecurrenteId = value;
                    OnPropertyChanged("actu_iEmpresaRecurrenteId");
                }
            }
        }
        private Nullable<long> _actu_iEmpresaRecurrenteId;



        [DataMember]
        public Nullable<long> actu_sCiudadItinerante
        {
            get { return _actu_sCiudadItinerante; }
            set
            {
                if (_actu_sCiudadItinerante != value)
                {
                    ChangeTracker.RecordOriginalValue("actu_sCiudadItinerante", _actu_sCiudadItinerante);
                    if (!IsDeserializing)
                    {
                        if (RE_EMPRESA != null && RE_EMPRESA.empr_iEmpresaId != value)
                        {
                            RE_EMPRESA = null;
                        }
                    }
                    _actu_sCiudadItinerante = value;
                    OnPropertyChanged("actu_iEmpresaRecurrenteId");
                }
            }
        }
        private Nullable<long> _actu_sCiudadItinerante;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTODETALLE> AL_MOVIMIENTODETALLE
        {
            get
            {
                if (_aL_MOVIMIENTODETALLE == null)
                {
                    _aL_MOVIMIENTODETALLE = new TrackableCollection<AL_MOVIMIENTODETALLE>();
                    _aL_MOVIMIENTODETALLE.CollectionChanged += FixupAL_MOVIMIENTODETALLE;
                }
                return _aL_MOVIMIENTODETALLE;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTODETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTODETALLE != null)
                    {
                        _aL_MOVIMIENTODETALLE.CollectionChanged -= FixupAL_MOVIMIENTODETALLE;
                    }
                    _aL_MOVIMIENTODETALLE = value;
                    if (_aL_MOVIMIENTODETALLE != null)
                    {
                        _aL_MOVIMIENTODETALLE.CollectionChanged += FixupAL_MOVIMIENTODETALLE;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTODETALLE");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTODETALLE> _aL_MOVIMIENTODETALLE;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONDETALLE> RE_ACTUACIONDETALLE
        {
            get
            {
                if (_rE_ACTUACIONDETALLE == null)
                {
                    _rE_ACTUACIONDETALLE = new TrackableCollection<RE_ACTUACIONDETALLE>();
                    _rE_ACTUACIONDETALLE.CollectionChanged += FixupRE_ACTUACIONDETALLE;
                }
                return _rE_ACTUACIONDETALLE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONDETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONDETALLE != null)
                    {
                        _rE_ACTUACIONDETALLE.CollectionChanged -= FixupRE_ACTUACIONDETALLE;
                    }
                    _rE_ACTUACIONDETALLE = value;
                    if (_rE_ACTUACIONDETALLE != null)
                    {
                        _rE_ACTUACIONDETALLE.CollectionChanged += FixupRE_ACTUACIONDETALLE;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONDETALLE");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONDETALLE> _rE_ACTUACIONDETALLE;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIAL> RE_ACTOJUDICIAL
        {
            get
            {
                if (_rE_ACTOJUDICIAL == null)
                {
                    _rE_ACTOJUDICIAL = new TrackableCollection<RE_ACTOJUDICIAL>();
                    _rE_ACTOJUDICIAL.CollectionChanged += FixupRE_ACTOJUDICIAL;
                }
                return _rE_ACTOJUDICIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIAL != null)
                    {
                        _rE_ACTOJUDICIAL.CollectionChanged -= FixupRE_ACTOJUDICIAL;
                    }
                    _rE_ACTOJUDICIAL = value;
                    if (_rE_ACTOJUDICIAL != null)
                    {
                        _rE_ACTOJUDICIAL.CollectionChanged += FixupRE_ACTOJUDICIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIAL> _rE_ACTOJUDICIAL;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR
        {
            get { return _sI_OFICINACONSULAR; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    var previousValue = _sI_OFICINACONSULAR;
                    _sI_OFICINACONSULAR = value;
                    FixupSI_OFICINACONSULAR(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR;
    
        [DataMember]
        public RE_EMPRESA RE_EMPRESA
        {
            get { return _rE_EMPRESA; }
            set
            {
                if (!ReferenceEquals(_rE_EMPRESA, value))
                {
                    var previousValue = _rE_EMPRESA;
                    _rE_EMPRESA = value;
                    FixupRE_EMPRESA(previousValue);
                    OnNavigationPropertyChanged("RE_EMPRESA");
                }
            }
        }
        private RE_EMPRESA _rE_EMPRESA;
    
        [DataMember]
        public RE_PERSONA RE_PERSONA
        {
            get { return _rE_PERSONA; }
            set
            {
                if (!ReferenceEquals(_rE_PERSONA, value))
                {
                    var previousValue = _rE_PERSONA;
                    _rE_PERSONA = value;
                    FixupRE_PERSONA(previousValue);
                    OnNavigationPropertyChanged("RE_PERSONA");
                }
            }
        }
        private RE_PERSONA _rE_PERSONA;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIAL> RE_ACTONOTARIAL
        {
            get
            {
                if (_rE_ACTONOTARIAL == null)
                {
                    _rE_ACTONOTARIAL = new TrackableCollection<RE_ACTONOTARIAL>();
                    _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                }
                return _rE_ACTONOTARIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged -= FixupRE_ACTONOTARIAL;
                    }
                    _rE_ACTONOTARIAL = value;
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIAL> _rE_ACTONOTARIAL;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AL_MOVIMIENTODETALLE.Clear();
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            RE_ACTUACIONDETALLE.Clear();
            RE_ACTOJUDICIAL.Clear();
            SI_OFICINACONSULAR = null;
            RE_EMPRESA = null;
            RE_PERSONA = null;
            RE_ACTONOTARIAL.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACION.Contains(this))
            {
                previousValue.RE_ACTUACION.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_ACTUACION.Contains(this))
                {
                    SE_USUARIO.RE_ACTUACION.Add(this);
                }
    
                actu_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACION1.Contains(this))
            {
                previousValue.RE_ACTUACION1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_ACTUACION1.Contains(this))
                {
                    SE_USUARIO1.RE_ACTUACION1.Add(this);
                }
    
                actu_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                actu_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(SI_OFICINACONSULAR previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACION.Contains(this))
            {
                previousValue.RE_ACTUACION.Remove(this);
            }
    
            if (SI_OFICINACONSULAR != null)
            {
                if (!SI_OFICINACONSULAR.RE_ACTUACION.Contains(this))
                {
                    SI_OFICINACONSULAR.RE_ACTUACION.Add(this);
                }
    
                actu_sOficinaConsularId = SI_OFICINACONSULAR.ofco_sOficinaConsularId;
            }
            else if (!skipKeys)
            {
                actu_sOficinaConsularId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR"] == SI_OFICINACONSULAR))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR", previousValue);
                }
                if (SI_OFICINACONSULAR != null && !SI_OFICINACONSULAR.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR.StartTracking();
                }
            }
        }
    
        private void FixupRE_EMPRESA(RE_EMPRESA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACION.Contains(this))
            {
                previousValue.RE_ACTUACION.Remove(this);
            }
    
            if (RE_EMPRESA != null)
            {
                if (!RE_EMPRESA.RE_ACTUACION.Contains(this))
                {
                    RE_EMPRESA.RE_ACTUACION.Add(this);
                }
    
                actu_iEmpresaRecurrenteId = RE_EMPRESA.empr_iEmpresaId;
            }
            else if (!skipKeys)
            {
                actu_iEmpresaRecurrenteId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_EMPRESA")
                    && (ChangeTracker.OriginalValues["RE_EMPRESA"] == RE_EMPRESA))
                {
                    ChangeTracker.OriginalValues.Remove("RE_EMPRESA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_EMPRESA", previousValue);
                }
                if (RE_EMPRESA != null && !RE_EMPRESA.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_EMPRESA.StartTracking();
                }
            }
        }
    
        private void FixupRE_PERSONA(RE_PERSONA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_ACTUACION.Contains(this))
            {
                previousValue.RE_ACTUACION.Remove(this);
            }
    
            if (RE_PERSONA != null)
            {
                if (!RE_PERSONA.RE_ACTUACION.Contains(this))
                {
                    RE_PERSONA.RE_ACTUACION.Add(this);
                }
    
                actu_iPersonaRecurrenteId = RE_PERSONA.pers_iPersonaId;
            }
            else if (!skipKeys)
            {
                actu_iPersonaRecurrenteId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RE_PERSONA")
                    && (ChangeTracker.OriginalValues["RE_PERSONA"] == RE_PERSONA))
                {
                    ChangeTracker.OriginalValues.Remove("RE_PERSONA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RE_PERSONA", previousValue);
                }
                if (RE_PERSONA != null && !RE_PERSONA.ChangeTracker.ChangeTrackingEnabled)
                {
                    RE_PERSONA.StartTracking();
                }
            }
        }
    
        private void FixupAL_MOVIMIENTODETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTODETALLE item in e.NewItems)
                {
                    item.RE_ACTUACION = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTODETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTODETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACION, this))
                    {
                        item.RE_ACTUACION = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTODETALLE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONDETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONDETALLE item in e.NewItems)
                {
                    item.RE_ACTUACION = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONDETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONDETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACION, this))
                    {
                        item.RE_ACTUACION = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONDETALLE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIAL item in e.NewItems)
                {
                    item.RE_ACTUACION = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACION, this))
                    {
                        item.RE_ACTUACION = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIAL", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.NewItems)
                {
                    item.RE_ACTUACION = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_ACTUACION, this))
                    {
                        item.RE_ACTUACION = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
        }

        #endregion
    }
}
