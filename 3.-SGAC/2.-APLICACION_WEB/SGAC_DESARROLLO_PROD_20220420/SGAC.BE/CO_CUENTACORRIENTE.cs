//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(MA_BANCO))]
    [KnownType(typeof(MA_MONEDA))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(CO_REMESA))]
    [KnownType(typeof(CO_TRANSACCION))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    public partial class CO_CUENTACORRIENTE: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short cuco_sCuentaCorrienteId
        {
            get { return _cuco_sCuentaCorrienteId; }
            set
            {
                if (_cuco_sCuentaCorrienteId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'cuco_sCuentaCorrienteId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _cuco_sCuentaCorrienteId = value;
                    OnPropertyChanged("cuco_sCuentaCorrienteId");
                }
            }
        }
        private short _cuco_sCuentaCorrienteId;
    
        [DataMember]
        public short cuco_sOficinaConsularId
        {
            get { return _cuco_sOficinaConsularId; }
            set
            {
                if (_cuco_sOficinaConsularId != value)
                {
                    ChangeTracker.RecordOriginalValue("cuco_sOficinaConsularId", _cuco_sOficinaConsularId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR != null && SI_OFICINACONSULAR.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR = null;
                        }
                    }
                    _cuco_sOficinaConsularId = value;
                    OnPropertyChanged("cuco_sOficinaConsularId");
                }
            }
        }
        private short _cuco_sOficinaConsularId;
    
        [DataMember]
        public Nullable<short> cuco_sTipoId
        {
            get { return _cuco_sTipoId; }
            set
            {
                if (_cuco_sTipoId != value)
                {
                    ChangeTracker.RecordOriginalValue("cuco_sTipoId", _cuco_sTipoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _cuco_sTipoId = value;
                    OnPropertyChanged("cuco_sTipoId");
                }
            }
        }
        private Nullable<short> _cuco_sTipoId;
    
        [DataMember]
        public short cuco_sBancoId
        {
            get { return _cuco_sBancoId; }
            set
            {
                if (_cuco_sBancoId != value)
                {
                    ChangeTracker.RecordOriginalValue("cuco_sBancoId", _cuco_sBancoId);
                    if (!IsDeserializing)
                    {
                        if (MA_BANCO != null && MA_BANCO.banc_sBancoId != value)
                        {
                            MA_BANCO = null;
                        }
                    }
                    _cuco_sBancoId = value;
                    OnPropertyChanged("cuco_sBancoId");
                }
            }
        }
        private short _cuco_sBancoId;
    
        [DataMember]
        public short cuco_sMonedaId
        {
            get { return _cuco_sMonedaId; }
            set
            {
                if (_cuco_sMonedaId != value)
                {
                    ChangeTracker.RecordOriginalValue("cuco_sMonedaId", _cuco_sMonedaId);
                    if (!IsDeserializing)
                    {
                        if (MA_MONEDA != null && MA_MONEDA.mone_sMonedaId != value)
                        {
                            MA_MONEDA = null;
                        }
                    }
                    _cuco_sMonedaId = value;
                    OnPropertyChanged("cuco_sMonedaId");
                }
            }
        }
        private short _cuco_sMonedaId;
    
        [DataMember]
        public string cuco_vNumero
        {
            get { return _cuco_vNumero; }
            set
            {
                if (_cuco_vNumero != value)
                {
                    _cuco_vNumero = value;
                    OnPropertyChanged("cuco_vNumero");
                }
            }
        }
        private string _cuco_vNumero;
    
        [DataMember]
        public string cuco_vRepresentante
        {
            get { return _cuco_vRepresentante; }
            set
            {
                if (_cuco_vRepresentante != value)
                {
                    _cuco_vRepresentante = value;
                    OnPropertyChanged("cuco_vRepresentante");
                }
            }
        }
        private string _cuco_vRepresentante;
    
        [DataMember]
        public string cuco_vSucursal
        {
            get { return _cuco_vSucursal; }
            set
            {
                if (_cuco_vSucursal != value)
                {
                    _cuco_vSucursal = value;
                    OnPropertyChanged("cuco_vSucursal");
                }
            }
        }
        private string _cuco_vSucursal;
    
        [DataMember]
        public short cuco_sSituacionId
        {
            get { return _cuco_sSituacionId; }
            set
            {
                if (_cuco_sSituacionId != value)
                {
                    ChangeTracker.RecordOriginalValue("cuco_sSituacionId", _cuco_sSituacionId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _cuco_sSituacionId = value;
                    OnPropertyChanged("cuco_sSituacionId");
                }
            }
        }
        private short _cuco_sSituacionId;
    
        [DataMember]
        public string cuco_vObservacion
        {
            get { return _cuco_vObservacion; }
            set
            {
                if (_cuco_vObservacion != value)
                {
                    _cuco_vObservacion = value;
                    OnPropertyChanged("cuco_vObservacion");
                }
            }
        }
        private string _cuco_vObservacion;
    
        [DataMember]
        public string cuco_cEstado
        {
            get { return _cuco_cEstado; }
            set
            {
                if (_cuco_cEstado != value)
                {
                    _cuco_cEstado = value;
                    OnPropertyChanged("cuco_cEstado");
                }
            }
        }
        private string _cuco_cEstado;
    
        [DataMember]
        public short cuco_sUsuarioCreacion
        {
            get { return _cuco_sUsuarioCreacion; }
            set
            {
                if (_cuco_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("cuco_sUsuarioCreacion", _cuco_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _cuco_sUsuarioCreacion = value;
                    OnPropertyChanged("cuco_sUsuarioCreacion");
                }
            }
        }
        private short _cuco_sUsuarioCreacion;
    
        [DataMember]
        public string cuco_vIPCreacion
        {
            get { return _cuco_vIPCreacion; }
            set
            {
                if (_cuco_vIPCreacion != value)
                {
                    _cuco_vIPCreacion = value;
                    OnPropertyChanged("cuco_vIPCreacion");
                }
            }
        }
        private string _cuco_vIPCreacion;
    
        [DataMember]
        public System.DateTime cuco_dFechaCreacion
        {
            get { return _cuco_dFechaCreacion; }
            set
            {
                if (_cuco_dFechaCreacion != value)
                {
                    _cuco_dFechaCreacion = value;
                    OnPropertyChanged("cuco_dFechaCreacion");
                }
            }
        }
        private System.DateTime _cuco_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> cuco_sUsuarioModificacion
        {
            get { return _cuco_sUsuarioModificacion; }
            set
            {
                if (_cuco_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("cuco_sUsuarioModificacion", _cuco_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _cuco_sUsuarioModificacion = value;
                    OnPropertyChanged("cuco_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _cuco_sUsuarioModificacion;
    
        [DataMember]
        public string cuco_vIPModificacion
        {
            get { return _cuco_vIPModificacion; }
            set
            {
                if (_cuco_vIPModificacion != value)
                {
                    _cuco_vIPModificacion = value;
                    OnPropertyChanged("cuco_vIPModificacion");
                }
            }
        }
        private string _cuco_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> cuco_dFechaModificacion
        {
            get { return _cuco_dFechaModificacion; }
            set
            {
                if (_cuco_dFechaModificacion != value)
                {
                    _cuco_dFechaModificacion = value;
                    OnPropertyChanged("cuco_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _cuco_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public MA_BANCO MA_BANCO
        {
            get { return _mA_BANCO; }
            set
            {
                if (!ReferenceEquals(_mA_BANCO, value))
                {
                    var previousValue = _mA_BANCO;
                    _mA_BANCO = value;
                    FixupMA_BANCO(previousValue);
                    OnNavigationPropertyChanged("MA_BANCO");
                }
            }
        }
        private MA_BANCO _mA_BANCO;
    
        [DataMember]
        public MA_MONEDA MA_MONEDA
        {
            get { return _mA_MONEDA; }
            set
            {
                if (!ReferenceEquals(_mA_MONEDA, value))
                {
                    var previousValue = _mA_MONEDA;
                    _mA_MONEDA = value;
                    FixupMA_MONEDA(previousValue);
                    OnNavigationPropertyChanged("MA_MONEDA");
                }
            }
        }
        private MA_MONEDA _mA_MONEDA;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public TrackableCollection<CO_REMESA> CO_REMESA
        {
            get
            {
                if (_cO_REMESA == null)
                {
                    _cO_REMESA = new TrackableCollection<CO_REMESA>();
                    _cO_REMESA.CollectionChanged += FixupCO_REMESA;
                }
                return _cO_REMESA;
            }
            set
            {
                if (!ReferenceEquals(_cO_REMESA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_REMESA != null)
                    {
                        _cO_REMESA.CollectionChanged -= FixupCO_REMESA;
                    }
                    _cO_REMESA = value;
                    if (_cO_REMESA != null)
                    {
                        _cO_REMESA.CollectionChanged += FixupCO_REMESA;
                    }
                    OnNavigationPropertyChanged("CO_REMESA");
                }
            }
        }
        private TrackableCollection<CO_REMESA> _cO_REMESA;
    
        [DataMember]
        public TrackableCollection<CO_TRANSACCION> CO_TRANSACCION
        {
            get
            {
                if (_cO_TRANSACCION == null)
                {
                    _cO_TRANSACCION = new TrackableCollection<CO_TRANSACCION>();
                    _cO_TRANSACCION.CollectionChanged += FixupCO_TRANSACCION;
                }
                return _cO_TRANSACCION;
            }
            set
            {
                if (!ReferenceEquals(_cO_TRANSACCION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_TRANSACCION != null)
                    {
                        _cO_TRANSACCION.CollectionChanged -= FixupCO_TRANSACCION;
                    }
                    _cO_TRANSACCION = value;
                    if (_cO_TRANSACCION != null)
                    {
                        _cO_TRANSACCION.CollectionChanged += FixupCO_TRANSACCION;
                    }
                    OnNavigationPropertyChanged("CO_TRANSACCION");
                }
            }
        }
        private TrackableCollection<CO_TRANSACCION> _cO_TRANSACCION;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR
        {
            get { return _sI_OFICINACONSULAR; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR, value))
                {
                    var previousValue = _sI_OFICINACONSULAR;
                    _sI_OFICINACONSULAR = value;
                    FixupSI_OFICINACONSULAR(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            MA_BANCO = null;
            MA_MONEDA = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            CO_REMESA.Clear();
            CO_TRANSACCION.Clear();
            SI_OFICINACONSULAR = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupMA_BANCO(MA_BANCO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_CUENTACORRIENTE.Contains(this))
            {
                previousValue.CO_CUENTACORRIENTE.Remove(this);
            }
    
            if (MA_BANCO != null)
            {
                if (!MA_BANCO.CO_CUENTACORRIENTE.Contains(this))
                {
                    MA_BANCO.CO_CUENTACORRIENTE.Add(this);
                }
    
                cuco_sBancoId = MA_BANCO.banc_sBancoId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_BANCO")
                    && (ChangeTracker.OriginalValues["MA_BANCO"] == MA_BANCO))
                {
                    ChangeTracker.OriginalValues.Remove("MA_BANCO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_BANCO", previousValue);
                }
                if (MA_BANCO != null && !MA_BANCO.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_BANCO.StartTracking();
                }
            }
        }
    
        private void FixupMA_MONEDA(MA_MONEDA previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_CUENTACORRIENTE.Contains(this))
            {
                previousValue.CO_CUENTACORRIENTE.Remove(this);
            }
    
            if (MA_MONEDA != null)
            {
                if (!MA_MONEDA.CO_CUENTACORRIENTE.Contains(this))
                {
                    MA_MONEDA.CO_CUENTACORRIENTE.Add(this);
                }
    
                cuco_sMonedaId = MA_MONEDA.mone_sMonedaId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_MONEDA")
                    && (ChangeTracker.OriginalValues["MA_MONEDA"] == MA_MONEDA))
                {
                    ChangeTracker.OriginalValues.Remove("MA_MONEDA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_MONEDA", previousValue);
                }
                if (MA_MONEDA != null && !MA_MONEDA.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_MONEDA.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_CUENTACORRIENTE.Contains(this))
            {
                previousValue.CO_CUENTACORRIENTE.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.CO_CUENTACORRIENTE.Contains(this))
                {
                    SE_USUARIO.CO_CUENTACORRIENTE.Add(this);
                }
    
                cuco_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_CUENTACORRIENTE1.Contains(this))
            {
                previousValue.CO_CUENTACORRIENTE1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.CO_CUENTACORRIENTE1.Contains(this))
                {
                    SE_USUARIO1.CO_CUENTACORRIENTE1.Add(this);
                }
    
                cuco_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                cuco_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_CUENTACORRIENTE.Contains(this))
            {
                previousValue.CO_CUENTACORRIENTE.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.CO_CUENTACORRIENTE.Contains(this))
                {
                    SI_PARAMETRO.CO_CUENTACORRIENTE.Add(this);
                }
    
                cuco_sSituacionId = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_CUENTACORRIENTE1.Contains(this))
            {
                previousValue.CO_CUENTACORRIENTE1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.CO_CUENTACORRIENTE1.Contains(this))
                {
                    SI_PARAMETRO1.CO_CUENTACORRIENTE1.Add(this);
                }
    
                cuco_sTipoId = SI_PARAMETRO1.para_sParametroId;
            }
            else if (!skipKeys)
            {
                cuco_sTipoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR(SI_OFICINACONSULAR previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CO_CUENTACORRIENTE.Contains(this))
            {
                previousValue.CO_CUENTACORRIENTE.Remove(this);
            }
    
            if (SI_OFICINACONSULAR != null)
            {
                if (!SI_OFICINACONSULAR.CO_CUENTACORRIENTE.Contains(this))
                {
                    SI_OFICINACONSULAR.CO_CUENTACORRIENTE.Add(this);
                }
    
                cuco_sOficinaConsularId = SI_OFICINACONSULAR.ofco_sOficinaConsularId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR"] == SI_OFICINACONSULAR))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR", previousValue);
                }
                if (SI_OFICINACONSULAR != null && !SI_OFICINACONSULAR.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR.StartTracking();
                }
            }
        }
    
        private void FixupCO_REMESA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_REMESA item in e.NewItems)
                {
                    item.CO_CUENTACORRIENTE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_REMESA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_REMESA item in e.OldItems)
                {
                    if (ReferenceEquals(item.CO_CUENTACORRIENTE, this))
                    {
                        item.CO_CUENTACORRIENTE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_REMESA", item);
                    }
                }
            }
        }
    
        private void FixupCO_TRANSACCION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_TRANSACCION item in e.NewItems)
                {
                    item.CO_CUENTACORRIENTE = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_TRANSACCION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_TRANSACCION item in e.OldItems)
                {
                    if (ReferenceEquals(item.CO_CUENTACORRIENTE, this))
                    {
                        item.CO_CUENTACORRIENTE = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_TRANSACCION", item);
                    }
                }
            }
        }

        #endregion
    }
}
