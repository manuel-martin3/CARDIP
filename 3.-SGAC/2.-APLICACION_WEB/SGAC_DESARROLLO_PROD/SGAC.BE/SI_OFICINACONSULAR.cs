//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AL_MOVIMIENTO))]
    [KnownType(typeof(AL_PEDIDO))]
    [KnownType(typeof(CL_PERFILATENCION))]
    [KnownType(typeof(CL_SERVICIO))]
    [KnownType(typeof(CL_TELEVISOR))]
    [KnownType(typeof(CL_TICKETERA))]
    [KnownType(typeof(CL_VENTANILLA))]
    [KnownType(typeof(CL_VIDEO))]
    [KnownType(typeof(CO_CUENTACORRIENTE))]
    [KnownType(typeof(CO_REMESA))]
    [KnownType(typeof(CO_TRANSACCION))]
    [KnownType(typeof(RE_ACTUACION))]
    [KnownType(typeof(RE_OFICINACONSULARFUNCIONARIO))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SE_USUARIOROL))]
    [KnownType(typeof(SI_BOVEDA))]
    [KnownType(typeof(MA_MONEDA))]
    [KnownType(typeof(SI_OFICINACONSULAR))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(SI_UBICACIONGEOGRAFICA))]
    [KnownType(typeof(SI_TIPOCAMBIO_BANCARIO))]
    [KnownType(typeof(SI_TIPOCAMBIO_CONSULAR))]
    [KnownType(typeof(RE_ACTOJUDICIALPARTICIPANTE))]
    [KnownType(typeof(RE_ASISTENCIA))]
    [KnownType(typeof(RE_ACTONOTARIAL))]
    public partial class SI_OFICINACONSULAR: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short ofco_sOficinaConsularId
        {
            get { return _ofco_sOficinaConsularId; }
            set
            {
                if (_ofco_sOficinaConsularId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ofco_sOficinaConsularId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _ofco_sOficinaConsularId = value;
                    OnPropertyChanged("ofco_sOficinaConsularId");
                }
            }
        }
        private short _ofco_sOficinaConsularId;
    
        [DataMember]
        public string ofco_vCodigo
        {
            get { return _ofco_vCodigo; }
            set
            {
                if (_ofco_vCodigo != value)
                {
                    _ofco_vCodigo = value;
                    OnPropertyChanged("ofco_vCodigo");
                }
            }
        }
        private string _ofco_vCodigo;
    
        [DataMember]
        public short ofco_sCategoriaId
        {
            get { return _ofco_sCategoriaId; }
            set
            {
                if (_ofco_sCategoriaId != value)
                {
                    ChangeTracker.RecordOriginalValue("ofco_sCategoriaId", _ofco_sCategoriaId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _ofco_sCategoriaId = value;
                    OnPropertyChanged("ofco_sCategoriaId");
                }
            }
        }
        private short _ofco_sCategoriaId;
    
        [DataMember]
        public string ofco_vNombre
        {
            get { return _ofco_vNombre; }
            set
            {
                if (_ofco_vNombre != value)
                {
                    _ofco_vNombre = value;
                    OnPropertyChanged("ofco_vNombre");
                }
            }
        }
        private string _ofco_vNombre;
    
        [DataMember]
        public string ofco_vDireccion
        {
            get { return _ofco_vDireccion; }
            set
            {
                if (_ofco_vDireccion != value)
                {
                    _ofco_vDireccion = value;
                    OnPropertyChanged("ofco_vDireccion");
                }
            }
        }
        private string _ofco_vDireccion;
    
        [DataMember]
        public string ofco_vTelefono
        {
            get { return _ofco_vTelefono; }
            set
            {
                if (_ofco_vTelefono != value)
                {
                    _ofco_vTelefono = value;
                    OnPropertyChanged("ofco_vTelefono");
                }
            }
        }
        private string _ofco_vTelefono;
    
        [DataMember]
        public string ofco_vSiglas
        {
            get { return _ofco_vSiglas; }
            set
            {
                if (_ofco_vSiglas != value)
                {
                    _ofco_vSiglas = value;
                    OnPropertyChanged("ofco_vSiglas");
                }
            }
        }
        private string _ofco_vSiglas;
    
        [DataMember]
        public string ofco_cUbigeoCodigo
        {
            get { return _ofco_cUbigeoCodigo; }
            set
            {
                if (_ofco_cUbigeoCodigo != value)
                {
                    ChangeTracker.RecordOriginalValue("ofco_cUbigeoCodigo", _ofco_cUbigeoCodigo);
                    if (!IsDeserializing)
                    {
                        if (SI_UBICACIONGEOGRAFICA != null && SI_UBICACIONGEOGRAFICA.ubge_cCodigo != value)
                        {
                            SI_UBICACIONGEOGRAFICA = null;
                        }
                    }
                    _ofco_cUbigeoCodigo = value;
                    OnPropertyChanged("ofco_cUbigeoCodigo");
                }
            }
        }
        private string _ofco_cUbigeoCodigo;
    
        [DataMember]
        public Nullable<short> ofco_sMonedaId
        {
            get { return _ofco_sMonedaId; }
            set
            {
                if (_ofco_sMonedaId != value)
                {
                    ChangeTracker.RecordOriginalValue("ofco_sMonedaId", _ofco_sMonedaId);
                    if (!IsDeserializing)
                    {
                        if (MA_MONEDA != null && MA_MONEDA.mone_sMonedaId != value)
                        {
                            MA_MONEDA = null;
                        }
                    }
                    _ofco_sMonedaId = value;
                    OnPropertyChanged("ofco_sMonedaId");
                }
            }
        }
        private Nullable<short> _ofco_sMonedaId;
    
        [DataMember]
        public Nullable<short> ofco_sPorcentajeTipoCambio
        {
            get { return _ofco_sPorcentajeTipoCambio; }
            set
            {
                if (_ofco_sPorcentajeTipoCambio != value)
                {
                    _ofco_sPorcentajeTipoCambio = value;
                    OnPropertyChanged("ofco_sPorcentajeTipoCambio");
                }
            }
        }
        private Nullable<short> _ofco_sPorcentajeTipoCambio;
    
        [DataMember]
        public string ofco_cHorarioAtencion
        {
            get { return _ofco_cHorarioAtencion; }
            set
            {
                if (_ofco_cHorarioAtencion != value)
                {
                    _ofco_cHorarioAtencion = value;
                    OnPropertyChanged("ofco_cHorarioAtencion");
                }
            }
        }
        private string _ofco_cHorarioAtencion;
    
        [DataMember]
        public double ofco_fDiferenciaHoraria
        {
            get { return _ofco_fDiferenciaHoraria; }
            set
            {
                if (_ofco_fDiferenciaHoraria != value)
                {
                    _ofco_fDiferenciaHoraria = value;
                    OnPropertyChanged("ofco_fDiferenciaHoraria");
                }
            }
        }
        private double _ofco_fDiferenciaHoraria;
    
        [DataMember]
        public short ofco_sHorarioVerano
        {
            get { return _ofco_sHorarioVerano; }
            set
            {
                if (_ofco_sHorarioVerano != value)
                {
                    _ofco_sHorarioVerano = value;
                    OnPropertyChanged("ofco_sHorarioVerano");
                }
            }
        }
        private short _ofco_sHorarioVerano;
    
        [DataMember]
        public bool ofco_bJefaturaFlag
        {
            get { return _ofco_bJefaturaFlag; }
            set
            {
                if (_ofco_bJefaturaFlag != value)
                {
                    _ofco_bJefaturaFlag = value;
                    OnPropertyChanged("ofco_bJefaturaFlag");
                }
            }
        }
        private bool _ofco_bJefaturaFlag;
    
        [DataMember]
        public bool ofco_bRemesaLimaFlag
        {
            get { return _ofco_bRemesaLimaFlag; }
            set
            {
                if (_ofco_bRemesaLimaFlag != value)
                {
                    _ofco_bRemesaLimaFlag = value;
                    OnPropertyChanged("ofco_bRemesaLimaFlag");
                }
            }
        }
        private bool _ofco_bRemesaLimaFlag;
    
        [DataMember]
        public string ofco_vDocumentosEmite
        {
            get { return _ofco_vDocumentosEmite; }
            set
            {
                if (_ofco_vDocumentosEmite != value)
                {
                    _ofco_vDocumentosEmite = value;
                    OnPropertyChanged("ofco_vDocumentosEmite");
                }
            }
        }
        private string _ofco_vDocumentosEmite;
    
        [DataMember]
        public Nullable<short> ofco_sReferenciaId
        {
            get { return _ofco_sReferenciaId; }
            set
            {
                if (_ofco_sReferenciaId != value)
                {
                    ChangeTracker.RecordOriginalValue("ofco_sReferenciaId", _ofco_sReferenciaId);
                    if (!IsDeserializing)
                    {
                        if (SI_OFICINACONSULAR2 != null && SI_OFICINACONSULAR2.ofco_sOficinaConsularId != value)
                        {
                            SI_OFICINACONSULAR2 = null;
                        }
                    }
                    _ofco_sReferenciaId = value;
                    OnPropertyChanged("ofco_sReferenciaId");
                }
            }
        }
        private Nullable<short> _ofco_sReferenciaId;
    
        [DataMember]
        public string ofco_vPrivilegiosEspeciales
        {
            get { return _ofco_vPrivilegiosEspeciales; }
            set
            {
                if (_ofco_vPrivilegiosEspeciales != value)
                {
                    _ofco_vPrivilegiosEspeciales = value;
                    OnPropertyChanged("ofco_vPrivilegiosEspeciales");
                }
            }
        }
        private string _ofco_vPrivilegiosEspeciales;
    
        [DataMember]
        public string ofco_vSitioWeb
        {
            get { return _ofco_vSitioWeb; }
            set
            {
                if (_ofco_vSitioWeb != value)
                {
                    _ofco_vSitioWeb = value;
                    OnPropertyChanged("ofco_vSitioWeb");
                }
            }
        }
        private string _ofco_vSitioWeb;
    
        [DataMember]
        public string ofco_vRangoInicialIP
        {
            get { return _ofco_vRangoInicialIP; }
            set
            {
                if (_ofco_vRangoInicialIP != value)
                {
                    _ofco_vRangoInicialIP = value;
                    OnPropertyChanged("ofco_vRangoInicialIP");
                }
            }
        }
        private string _ofco_vRangoInicialIP;
    
        [DataMember]
        public string ofco_vRangoFinIP
        {
            get { return _ofco_vRangoFinIP; }
            set
            {
                if (_ofco_vRangoFinIP != value)
                {
                    _ofco_vRangoFinIP = value;
                    OnPropertyChanged("ofco_vRangoFinIP");
                }
            }
        }
        private string _ofco_vRangoFinIP;
    
        [DataMember]
        public string ofco_cEstado
        {
            get { return _ofco_cEstado; }
            set
            {
                if (_ofco_cEstado != value)
                {
                    _ofco_cEstado = value;
                    OnPropertyChanged("ofco_cEstado");
                }
            }
        }
        private string _ofco_cEstado;
    
        [DataMember]
        public short ofco_sUsuarioCreacion
        {
            get { return _ofco_sUsuarioCreacion; }
            set
            {
                if (_ofco_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("ofco_sUsuarioCreacion", _ofco_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _ofco_sUsuarioCreacion = value;
                    OnPropertyChanged("ofco_sUsuarioCreacion");
                }
            }
        }
        private short _ofco_sUsuarioCreacion;
    
        [DataMember]
        public string ofco_vIPCreacion
        {
            get { return _ofco_vIPCreacion; }
            set
            {
                if (_ofco_vIPCreacion != value)
                {
                    _ofco_vIPCreacion = value;
                    OnPropertyChanged("ofco_vIPCreacion");
                }
            }
        }
        private string _ofco_vIPCreacion;
    
        [DataMember]
        public System.DateTime ofco_dFechaCreacion
        {
            get { return _ofco_dFechaCreacion; }
            set
            {
                if (_ofco_dFechaCreacion != value)
                {
                    _ofco_dFechaCreacion = value;
                    OnPropertyChanged("ofco_dFechaCreacion");
                }
            }
        }
        private System.DateTime _ofco_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> ofco_sUsuarioModificacion
        {
            get { return _ofco_sUsuarioModificacion; }
            set
            {
                if (_ofco_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("ofco_sUsuarioModificacion", _ofco_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _ofco_sUsuarioModificacion = value;
                    OnPropertyChanged("ofco_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _ofco_sUsuarioModificacion;
    
        [DataMember]
        public string ofco_vIPModificacion
        {
            get { return _ofco_vIPModificacion; }
            set
            {
                if (_ofco_vIPModificacion != value)
                {
                    _ofco_vIPModificacion = value;
                    OnPropertyChanged("ofco_vIPModificacion");
                }
            }
        }
        private string _ofco_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> ofco_dFechaModificacion
        {
            get { return _ofco_dFechaModificacion; }
            set
            {
                if (_ofco_dFechaModificacion != value)
                {
                    _ofco_dFechaModificacion = value;
                    OnPropertyChanged("ofco_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _ofco_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTO> AL_MOVIMIENTO
        {
            get
            {
                if (_aL_MOVIMIENTO == null)
                {
                    _aL_MOVIMIENTO = new TrackableCollection<AL_MOVIMIENTO>();
                    _aL_MOVIMIENTO.CollectionChanged += FixupAL_MOVIMIENTO;
                }
                return _aL_MOVIMIENTO;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTO != null)
                    {
                        _aL_MOVIMIENTO.CollectionChanged -= FixupAL_MOVIMIENTO;
                    }
                    _aL_MOVIMIENTO = value;
                    if (_aL_MOVIMIENTO != null)
                    {
                        _aL_MOVIMIENTO.CollectionChanged += FixupAL_MOVIMIENTO;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTO");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTO> _aL_MOVIMIENTO;
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTO> AL_MOVIMIENTO1
        {
            get
            {
                if (_aL_MOVIMIENTO1 == null)
                {
                    _aL_MOVIMIENTO1 = new TrackableCollection<AL_MOVIMIENTO>();
                    _aL_MOVIMIENTO1.CollectionChanged += FixupAL_MOVIMIENTO1;
                }
                return _aL_MOVIMIENTO1;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTO1 != null)
                    {
                        _aL_MOVIMIENTO1.CollectionChanged -= FixupAL_MOVIMIENTO1;
                    }
                    _aL_MOVIMIENTO1 = value;
                    if (_aL_MOVIMIENTO1 != null)
                    {
                        _aL_MOVIMIENTO1.CollectionChanged += FixupAL_MOVIMIENTO1;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTO1");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTO> _aL_MOVIMIENTO1;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDO> AL_PEDIDO
        {
            get
            {
                if (_aL_PEDIDO == null)
                {
                    _aL_PEDIDO = new TrackableCollection<AL_PEDIDO>();
                    _aL_PEDIDO.CollectionChanged += FixupAL_PEDIDO;
                }
                return _aL_PEDIDO;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDO != null)
                    {
                        _aL_PEDIDO.CollectionChanged -= FixupAL_PEDIDO;
                    }
                    _aL_PEDIDO = value;
                    if (_aL_PEDIDO != null)
                    {
                        _aL_PEDIDO.CollectionChanged += FixupAL_PEDIDO;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDO");
                }
            }
        }
        private TrackableCollection<AL_PEDIDO> _aL_PEDIDO;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDO> AL_PEDIDO1
        {
            get
            {
                if (_aL_PEDIDO1 == null)
                {
                    _aL_PEDIDO1 = new TrackableCollection<AL_PEDIDO>();
                    _aL_PEDIDO1.CollectionChanged += FixupAL_PEDIDO1;
                }
                return _aL_PEDIDO1;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDO1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDO1 != null)
                    {
                        _aL_PEDIDO1.CollectionChanged -= FixupAL_PEDIDO1;
                    }
                    _aL_PEDIDO1 = value;
                    if (_aL_PEDIDO1 != null)
                    {
                        _aL_PEDIDO1.CollectionChanged += FixupAL_PEDIDO1;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDO1");
                }
            }
        }
        private TrackableCollection<AL_PEDIDO> _aL_PEDIDO1;
    
        [DataMember]
        public TrackableCollection<CL_PERFILATENCION> CL_PERFILATENCION
        {
            get
            {
                if (_cL_PERFILATENCION == null)
                {
                    _cL_PERFILATENCION = new TrackableCollection<CL_PERFILATENCION>();
                    _cL_PERFILATENCION.CollectionChanged += FixupCL_PERFILATENCION;
                }
                return _cL_PERFILATENCION;
            }
            set
            {
                if (!ReferenceEquals(_cL_PERFILATENCION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_PERFILATENCION != null)
                    {
                        _cL_PERFILATENCION.CollectionChanged -= FixupCL_PERFILATENCION;
                    }
                    _cL_PERFILATENCION = value;
                    if (_cL_PERFILATENCION != null)
                    {
                        _cL_PERFILATENCION.CollectionChanged += FixupCL_PERFILATENCION;
                    }
                    OnNavigationPropertyChanged("CL_PERFILATENCION");
                }
            }
        }
        private TrackableCollection<CL_PERFILATENCION> _cL_PERFILATENCION;
    
        [DataMember]
        public TrackableCollection<CL_SERVICIO> CL_SERVICIO
        {
            get
            {
                if (_cL_SERVICIO == null)
                {
                    _cL_SERVICIO = new TrackableCollection<CL_SERVICIO>();
                    _cL_SERVICIO.CollectionChanged += FixupCL_SERVICIO;
                }
                return _cL_SERVICIO;
            }
            set
            {
                if (!ReferenceEquals(_cL_SERVICIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_SERVICIO != null)
                    {
                        _cL_SERVICIO.CollectionChanged -= FixupCL_SERVICIO;
                    }
                    _cL_SERVICIO = value;
                    if (_cL_SERVICIO != null)
                    {
                        _cL_SERVICIO.CollectionChanged += FixupCL_SERVICIO;
                    }
                    OnNavigationPropertyChanged("CL_SERVICIO");
                }
            }
        }
        private TrackableCollection<CL_SERVICIO> _cL_SERVICIO;
    
        [DataMember]
        public TrackableCollection<CL_TELEVISOR> CL_TELEVISOR
        {
            get
            {
                if (_cL_TELEVISOR == null)
                {
                    _cL_TELEVISOR = new TrackableCollection<CL_TELEVISOR>();
                    _cL_TELEVISOR.CollectionChanged += FixupCL_TELEVISOR;
                }
                return _cL_TELEVISOR;
            }
            set
            {
                if (!ReferenceEquals(_cL_TELEVISOR, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_TELEVISOR != null)
                    {
                        _cL_TELEVISOR.CollectionChanged -= FixupCL_TELEVISOR;
                    }
                    _cL_TELEVISOR = value;
                    if (_cL_TELEVISOR != null)
                    {
                        _cL_TELEVISOR.CollectionChanged += FixupCL_TELEVISOR;
                    }
                    OnNavigationPropertyChanged("CL_TELEVISOR");
                }
            }
        }
        private TrackableCollection<CL_TELEVISOR> _cL_TELEVISOR;
    
        [DataMember]
        public TrackableCollection<CL_TICKETERA> CL_TICKETERA
        {
            get
            {
                if (_cL_TICKETERA == null)
                {
                    _cL_TICKETERA = new TrackableCollection<CL_TICKETERA>();
                    _cL_TICKETERA.CollectionChanged += FixupCL_TICKETERA;
                }
                return _cL_TICKETERA;
            }
            set
            {
                if (!ReferenceEquals(_cL_TICKETERA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_TICKETERA != null)
                    {
                        _cL_TICKETERA.CollectionChanged -= FixupCL_TICKETERA;
                    }
                    _cL_TICKETERA = value;
                    if (_cL_TICKETERA != null)
                    {
                        _cL_TICKETERA.CollectionChanged += FixupCL_TICKETERA;
                    }
                    OnNavigationPropertyChanged("CL_TICKETERA");
                }
            }
        }
        private TrackableCollection<CL_TICKETERA> _cL_TICKETERA;
    
        [DataMember]
        public TrackableCollection<CL_VENTANILLA> CL_VENTANILLA
        {
            get
            {
                if (_cL_VENTANILLA == null)
                {
                    _cL_VENTANILLA = new TrackableCollection<CL_VENTANILLA>();
                    _cL_VENTANILLA.CollectionChanged += FixupCL_VENTANILLA;
                }
                return _cL_VENTANILLA;
            }
            set
            {
                if (!ReferenceEquals(_cL_VENTANILLA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_VENTANILLA != null)
                    {
                        _cL_VENTANILLA.CollectionChanged -= FixupCL_VENTANILLA;
                    }
                    _cL_VENTANILLA = value;
                    if (_cL_VENTANILLA != null)
                    {
                        _cL_VENTANILLA.CollectionChanged += FixupCL_VENTANILLA;
                    }
                    OnNavigationPropertyChanged("CL_VENTANILLA");
                }
            }
        }
        private TrackableCollection<CL_VENTANILLA> _cL_VENTANILLA;
    
        [DataMember]
        public TrackableCollection<CL_VIDEO> CL_VIDEO
        {
            get
            {
                if (_cL_VIDEO == null)
                {
                    _cL_VIDEO = new TrackableCollection<CL_VIDEO>();
                    _cL_VIDEO.CollectionChanged += FixupCL_VIDEO;
                }
                return _cL_VIDEO;
            }
            set
            {
                if (!ReferenceEquals(_cL_VIDEO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_VIDEO != null)
                    {
                        _cL_VIDEO.CollectionChanged -= FixupCL_VIDEO;
                    }
                    _cL_VIDEO = value;
                    if (_cL_VIDEO != null)
                    {
                        _cL_VIDEO.CollectionChanged += FixupCL_VIDEO;
                    }
                    OnNavigationPropertyChanged("CL_VIDEO");
                }
            }
        }
        private TrackableCollection<CL_VIDEO> _cL_VIDEO;
    
        [DataMember]
        public TrackableCollection<CO_CUENTACORRIENTE> CO_CUENTACORRIENTE
        {
            get
            {
                if (_cO_CUENTACORRIENTE == null)
                {
                    _cO_CUENTACORRIENTE = new TrackableCollection<CO_CUENTACORRIENTE>();
                    _cO_CUENTACORRIENTE.CollectionChanged += FixupCO_CUENTACORRIENTE;
                }
                return _cO_CUENTACORRIENTE;
            }
            set
            {
                if (!ReferenceEquals(_cO_CUENTACORRIENTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_CUENTACORRIENTE != null)
                    {
                        _cO_CUENTACORRIENTE.CollectionChanged -= FixupCO_CUENTACORRIENTE;
                    }
                    _cO_CUENTACORRIENTE = value;
                    if (_cO_CUENTACORRIENTE != null)
                    {
                        _cO_CUENTACORRIENTE.CollectionChanged += FixupCO_CUENTACORRIENTE;
                    }
                    OnNavigationPropertyChanged("CO_CUENTACORRIENTE");
                }
            }
        }
        private TrackableCollection<CO_CUENTACORRIENTE> _cO_CUENTACORRIENTE;
    
        [DataMember]
        public TrackableCollection<CO_REMESA> CO_REMESA
        {
            get
            {
                if (_cO_REMESA == null)
                {
                    _cO_REMESA = new TrackableCollection<CO_REMESA>();
                    _cO_REMESA.CollectionChanged += FixupCO_REMESA;
                }
                return _cO_REMESA;
            }
            set
            {
                if (!ReferenceEquals(_cO_REMESA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_REMESA != null)
                    {
                        _cO_REMESA.CollectionChanged -= FixupCO_REMESA;
                    }
                    _cO_REMESA = value;
                    if (_cO_REMESA != null)
                    {
                        _cO_REMESA.CollectionChanged += FixupCO_REMESA;
                    }
                    OnNavigationPropertyChanged("CO_REMESA");
                }
            }
        }
        private TrackableCollection<CO_REMESA> _cO_REMESA;
    
        [DataMember]
        public TrackableCollection<CO_REMESA> CO_REMESA1
        {
            get
            {
                if (_cO_REMESA1 == null)
                {
                    _cO_REMESA1 = new TrackableCollection<CO_REMESA>();
                    _cO_REMESA1.CollectionChanged += FixupCO_REMESA1;
                }
                return _cO_REMESA1;
            }
            set
            {
                if (!ReferenceEquals(_cO_REMESA1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_REMESA1 != null)
                    {
                        _cO_REMESA1.CollectionChanged -= FixupCO_REMESA1;
                    }
                    _cO_REMESA1 = value;
                    if (_cO_REMESA1 != null)
                    {
                        _cO_REMESA1.CollectionChanged += FixupCO_REMESA1;
                    }
                    OnNavigationPropertyChanged("CO_REMESA1");
                }
            }
        }
        private TrackableCollection<CO_REMESA> _cO_REMESA1;
    
        [DataMember]
        public TrackableCollection<CO_TRANSACCION> CO_TRANSACCION
        {
            get
            {
                if (_cO_TRANSACCION == null)
                {
                    _cO_TRANSACCION = new TrackableCollection<CO_TRANSACCION>();
                    _cO_TRANSACCION.CollectionChanged += FixupCO_TRANSACCION;
                }
                return _cO_TRANSACCION;
            }
            set
            {
                if (!ReferenceEquals(_cO_TRANSACCION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_TRANSACCION != null)
                    {
                        _cO_TRANSACCION.CollectionChanged -= FixupCO_TRANSACCION;
                    }
                    _cO_TRANSACCION = value;
                    if (_cO_TRANSACCION != null)
                    {
                        _cO_TRANSACCION.CollectionChanged += FixupCO_TRANSACCION;
                    }
                    OnNavigationPropertyChanged("CO_TRANSACCION");
                }
            }
        }
        private TrackableCollection<CO_TRANSACCION> _cO_TRANSACCION;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACION> RE_ACTUACION
        {
            get
            {
                if (_rE_ACTUACION == null)
                {
                    _rE_ACTUACION = new TrackableCollection<RE_ACTUACION>();
                    _rE_ACTUACION.CollectionChanged += FixupRE_ACTUACION;
                }
                return _rE_ACTUACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACION != null)
                    {
                        _rE_ACTUACION.CollectionChanged -= FixupRE_ACTUACION;
                    }
                    _rE_ACTUACION = value;
                    if (_rE_ACTUACION != null)
                    {
                        _rE_ACTUACION.CollectionChanged += FixupRE_ACTUACION;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACION");
                }
            }
        }
        private TrackableCollection<RE_ACTUACION> _rE_ACTUACION;
    
        [DataMember]
        public TrackableCollection<RE_OFICINACONSULARFUNCIONARIO> RE_OFICINACONSULARFUNCIONARIO
        {
            get
            {
                if (_rE_OFICINACONSULARFUNCIONARIO == null)
                {
                    _rE_OFICINACONSULARFUNCIONARIO = new TrackableCollection<RE_OFICINACONSULARFUNCIONARIO>();
                    _rE_OFICINACONSULARFUNCIONARIO.CollectionChanged += FixupRE_OFICINACONSULARFUNCIONARIO;
                }
                return _rE_OFICINACONSULARFUNCIONARIO;
            }
            set
            {
                if (!ReferenceEquals(_rE_OFICINACONSULARFUNCIONARIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_OFICINACONSULARFUNCIONARIO != null)
                    {
                        _rE_OFICINACONSULARFUNCIONARIO.CollectionChanged -= FixupRE_OFICINACONSULARFUNCIONARIO;
                    }
                    _rE_OFICINACONSULARFUNCIONARIO = value;
                    if (_rE_OFICINACONSULARFUNCIONARIO != null)
                    {
                        _rE_OFICINACONSULARFUNCIONARIO.CollectionChanged += FixupRE_OFICINACONSULARFUNCIONARIO;
                    }
                    OnNavigationPropertyChanged("RE_OFICINACONSULARFUNCIONARIO");
                }
            }
        }
        private TrackableCollection<RE_OFICINACONSULARFUNCIONARIO> _rE_OFICINACONSULARFUNCIONARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public TrackableCollection<SE_USUARIOROL> SE_USUARIOROL
        {
            get
            {
                if (_sE_USUARIOROL == null)
                {
                    _sE_USUARIOROL = new TrackableCollection<SE_USUARIOROL>();
                    _sE_USUARIOROL.CollectionChanged += FixupSE_USUARIOROL;
                }
                return _sE_USUARIOROL;
            }
            set
            {
                if (!ReferenceEquals(_sE_USUARIOROL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sE_USUARIOROL != null)
                    {
                        _sE_USUARIOROL.CollectionChanged -= FixupSE_USUARIOROL;
                    }
                    _sE_USUARIOROL = value;
                    if (_sE_USUARIOROL != null)
                    {
                        _sE_USUARIOROL.CollectionChanged += FixupSE_USUARIOROL;
                    }
                    OnNavigationPropertyChanged("SE_USUARIOROL");
                }
            }
        }
        private TrackableCollection<SE_USUARIOROL> _sE_USUARIOROL;
    
        [DataMember]
        public TrackableCollection<SI_BOVEDA> SI_BOVEDA
        {
            get
            {
                if (_sI_BOVEDA == null)
                {
                    _sI_BOVEDA = new TrackableCollection<SI_BOVEDA>();
                    _sI_BOVEDA.CollectionChanged += FixupSI_BOVEDA;
                }
                return _sI_BOVEDA;
            }
            set
            {
                if (!ReferenceEquals(_sI_BOVEDA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_BOVEDA != null)
                    {
                        _sI_BOVEDA.CollectionChanged -= FixupSI_BOVEDA;
                    }
                    _sI_BOVEDA = value;
                    if (_sI_BOVEDA != null)
                    {
                        _sI_BOVEDA.CollectionChanged += FixupSI_BOVEDA;
                    }
                    OnNavigationPropertyChanged("SI_BOVEDA");
                }
            }
        }
        private TrackableCollection<SI_BOVEDA> _sI_BOVEDA;
    
        [DataMember]
        public MA_MONEDA MA_MONEDA
        {
            get { return _mA_MONEDA; }
            set
            {
                if (!ReferenceEquals(_mA_MONEDA, value))
                {
                    var previousValue = _mA_MONEDA;
                    _mA_MONEDA = value;
                    FixupMA_MONEDA(previousValue);
                    OnNavigationPropertyChanged("MA_MONEDA");
                }
            }
        }
        private MA_MONEDA _mA_MONEDA;
    
        [DataMember]
        public TrackableCollection<SI_OFICINACONSULAR> SI_OFICINACONSULAR1
        {
            get
            {
                if (_sI_OFICINACONSULAR1 == null)
                {
                    _sI_OFICINACONSULAR1 = new TrackableCollection<SI_OFICINACONSULAR>();
                    _sI_OFICINACONSULAR1.CollectionChanged += FixupSI_OFICINACONSULAR1;
                }
                return _sI_OFICINACONSULAR1;
            }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_OFICINACONSULAR1 != null)
                    {
                        _sI_OFICINACONSULAR1.CollectionChanged -= FixupSI_OFICINACONSULAR1;
                    }
                    _sI_OFICINACONSULAR1 = value;
                    if (_sI_OFICINACONSULAR1 != null)
                    {
                        _sI_OFICINACONSULAR1.CollectionChanged += FixupSI_OFICINACONSULAR1;
                    }
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR1");
                }
            }
        }
        private TrackableCollection<SI_OFICINACONSULAR> _sI_OFICINACONSULAR1;
    
        [DataMember]
        public SI_OFICINACONSULAR SI_OFICINACONSULAR2
        {
            get { return _sI_OFICINACONSULAR2; }
            set
            {
                if (!ReferenceEquals(_sI_OFICINACONSULAR2, value))
                {
                    var previousValue = _sI_OFICINACONSULAR2;
                    _sI_OFICINACONSULAR2 = value;
                    FixupSI_OFICINACONSULAR2(previousValue);
                    OnNavigationPropertyChanged("SI_OFICINACONSULAR2");
                }
            }
        }
        private SI_OFICINACONSULAR _sI_OFICINACONSULAR2;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_UBICACIONGEOGRAFICA SI_UBICACIONGEOGRAFICA
        {
            get { return _sI_UBICACIONGEOGRAFICA; }
            set
            {
                if (!ReferenceEquals(_sI_UBICACIONGEOGRAFICA, value))
                {
                    var previousValue = _sI_UBICACIONGEOGRAFICA;
                    _sI_UBICACIONGEOGRAFICA = value;
                    FixupSI_UBICACIONGEOGRAFICA(previousValue);
                    OnNavigationPropertyChanged("SI_UBICACIONGEOGRAFICA");
                }
            }
        }
        private SI_UBICACIONGEOGRAFICA _sI_UBICACIONGEOGRAFICA;
    
        [DataMember]
        public TrackableCollection<SI_TIPOCAMBIO_BANCARIO> SI_TIPOCAMBIO_BANCARIO
        {
            get
            {
                if (_sI_TIPOCAMBIO_BANCARIO == null)
                {
                    _sI_TIPOCAMBIO_BANCARIO = new TrackableCollection<SI_TIPOCAMBIO_BANCARIO>();
                    _sI_TIPOCAMBIO_BANCARIO.CollectionChanged += FixupSI_TIPOCAMBIO_BANCARIO;
                }
                return _sI_TIPOCAMBIO_BANCARIO;
            }
            set
            {
                if (!ReferenceEquals(_sI_TIPOCAMBIO_BANCARIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TIPOCAMBIO_BANCARIO != null)
                    {
                        _sI_TIPOCAMBIO_BANCARIO.CollectionChanged -= FixupSI_TIPOCAMBIO_BANCARIO;
                    }
                    _sI_TIPOCAMBIO_BANCARIO = value;
                    if (_sI_TIPOCAMBIO_BANCARIO != null)
                    {
                        _sI_TIPOCAMBIO_BANCARIO.CollectionChanged += FixupSI_TIPOCAMBIO_BANCARIO;
                    }
                    OnNavigationPropertyChanged("SI_TIPOCAMBIO_BANCARIO");
                }
            }
        }
        private TrackableCollection<SI_TIPOCAMBIO_BANCARIO> _sI_TIPOCAMBIO_BANCARIO;
    
        [DataMember]
        public TrackableCollection<SI_TIPOCAMBIO_CONSULAR> SI_TIPOCAMBIO_CONSULAR
        {
            get
            {
                if (_sI_TIPOCAMBIO_CONSULAR == null)
                {
                    _sI_TIPOCAMBIO_CONSULAR = new TrackableCollection<SI_TIPOCAMBIO_CONSULAR>();
                    _sI_TIPOCAMBIO_CONSULAR.CollectionChanged += FixupSI_TIPOCAMBIO_CONSULAR;
                }
                return _sI_TIPOCAMBIO_CONSULAR;
            }
            set
            {
                if (!ReferenceEquals(_sI_TIPOCAMBIO_CONSULAR, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TIPOCAMBIO_CONSULAR != null)
                    {
                        _sI_TIPOCAMBIO_CONSULAR.CollectionChanged -= FixupSI_TIPOCAMBIO_CONSULAR;
                    }
                    _sI_TIPOCAMBIO_CONSULAR = value;
                    if (_sI_TIPOCAMBIO_CONSULAR != null)
                    {
                        _sI_TIPOCAMBIO_CONSULAR.CollectionChanged += FixupSI_TIPOCAMBIO_CONSULAR;
                    }
                    OnNavigationPropertyChanged("SI_TIPOCAMBIO_CONSULAR");
                }
            }
        }
        private TrackableCollection<SI_TIPOCAMBIO_CONSULAR> _sI_TIPOCAMBIO_CONSULAR;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> RE_ACTOJUDICIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTOJUDICIALPARTICIPANTE == null)
                {
                    _rE_ACTOJUDICIALPARTICIPANTE = new TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE>();
                    _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                }
                return _rE_ACTOJUDICIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    _rE_ACTOJUDICIALPARTICIPANTE = value;
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> _rE_ACTOJUDICIALPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ASISTENCIA> RE_ASISTENCIA
        {
            get
            {
                if (_rE_ASISTENCIA == null)
                {
                    _rE_ASISTENCIA = new TrackableCollection<RE_ASISTENCIA>();
                    _rE_ASISTENCIA.CollectionChanged += FixupRE_ASISTENCIA;
                }
                return _rE_ASISTENCIA;
            }
            set
            {
                if (!ReferenceEquals(_rE_ASISTENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ASISTENCIA != null)
                    {
                        _rE_ASISTENCIA.CollectionChanged -= FixupRE_ASISTENCIA;
                    }
                    _rE_ASISTENCIA = value;
                    if (_rE_ASISTENCIA != null)
                    {
                        _rE_ASISTENCIA.CollectionChanged += FixupRE_ASISTENCIA;
                    }
                    OnNavigationPropertyChanged("RE_ASISTENCIA");
                }
            }
        }
        private TrackableCollection<RE_ASISTENCIA> _rE_ASISTENCIA;
    
        [DataMember]
        public TrackableCollection<RE_ASISTENCIA> RE_ASISTENCIA1
        {
            get
            {
                if (_rE_ASISTENCIA1 == null)
                {
                    _rE_ASISTENCIA1 = new TrackableCollection<RE_ASISTENCIA>();
                    _rE_ASISTENCIA1.CollectionChanged += FixupRE_ASISTENCIA1;
                }
                return _rE_ASISTENCIA1;
            }
            set
            {
                if (!ReferenceEquals(_rE_ASISTENCIA1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ASISTENCIA1 != null)
                    {
                        _rE_ASISTENCIA1.CollectionChanged -= FixupRE_ASISTENCIA1;
                    }
                    _rE_ASISTENCIA1 = value;
                    if (_rE_ASISTENCIA1 != null)
                    {
                        _rE_ASISTENCIA1.CollectionChanged += FixupRE_ASISTENCIA1;
                    }
                    OnNavigationPropertyChanged("RE_ASISTENCIA1");
                }
            }
        }
        private TrackableCollection<RE_ASISTENCIA> _rE_ASISTENCIA1;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIAL> RE_ACTONOTARIAL
        {
            get
            {
                if (_rE_ACTONOTARIAL == null)
                {
                    _rE_ACTONOTARIAL = new TrackableCollection<RE_ACTONOTARIAL>();
                    _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                }
                return _rE_ACTONOTARIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged -= FixupRE_ACTONOTARIAL;
                    }
                    _rE_ACTONOTARIAL = value;
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIAL> _rE_ACTONOTARIAL;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AL_MOVIMIENTO.Clear();
            AL_MOVIMIENTO1.Clear();
            AL_PEDIDO.Clear();
            AL_PEDIDO1.Clear();
            CL_PERFILATENCION.Clear();
            CL_SERVICIO.Clear();
            CL_TELEVISOR.Clear();
            CL_TICKETERA.Clear();
            CL_VENTANILLA.Clear();
            CL_VIDEO.Clear();
            CO_CUENTACORRIENTE.Clear();
            CO_REMESA.Clear();
            CO_REMESA1.Clear();
            CO_TRANSACCION.Clear();
            RE_ACTUACION.Clear();
            RE_OFICINACONSULARFUNCIONARIO.Clear();
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SE_USUARIOROL.Clear();
            SI_BOVEDA.Clear();
            MA_MONEDA = null;
            SI_OFICINACONSULAR1.Clear();
            SI_OFICINACONSULAR2 = null;
            SI_PARAMETRO = null;
            SI_UBICACIONGEOGRAFICA = null;
            SI_TIPOCAMBIO_BANCARIO.Clear();
            SI_TIPOCAMBIO_CONSULAR.Clear();
            RE_ACTOJUDICIALPARTICIPANTE.Clear();
            RE_ASISTENCIA.Clear();
            RE_ASISTENCIA1.Clear();
            RE_ACTONOTARIAL.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_OFICINACONSULAR.Contains(this))
            {
                previousValue.SI_OFICINACONSULAR.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.SI_OFICINACONSULAR.Contains(this))
                {
                    SE_USUARIO.SI_OFICINACONSULAR.Add(this);
                }
    
                ofco_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_OFICINACONSULAR1.Contains(this))
            {
                previousValue.SI_OFICINACONSULAR1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.SI_OFICINACONSULAR1.Contains(this))
                {
                    SE_USUARIO1.SI_OFICINACONSULAR1.Add(this);
                }
    
                ofco_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                ofco_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupMA_MONEDA(MA_MONEDA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_OFICINACONSULAR.Contains(this))
            {
                previousValue.SI_OFICINACONSULAR.Remove(this);
            }
    
            if (MA_MONEDA != null)
            {
                if (!MA_MONEDA.SI_OFICINACONSULAR.Contains(this))
                {
                    MA_MONEDA.SI_OFICINACONSULAR.Add(this);
                }
    
                ofco_sMonedaId = MA_MONEDA.mone_sMonedaId;
            }
            else if (!skipKeys)
            {
                ofco_sMonedaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_MONEDA")
                    && (ChangeTracker.OriginalValues["MA_MONEDA"] == MA_MONEDA))
                {
                    ChangeTracker.OriginalValues.Remove("MA_MONEDA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_MONEDA", previousValue);
                }
                if (MA_MONEDA != null && !MA_MONEDA.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_MONEDA.StartTracking();
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR2(SI_OFICINACONSULAR previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_OFICINACONSULAR1.Contains(this))
            {
                previousValue.SI_OFICINACONSULAR1.Remove(this);
            }
    
            if (SI_OFICINACONSULAR2 != null)
            {
                if (!SI_OFICINACONSULAR2.SI_OFICINACONSULAR1.Contains(this))
                {
                    SI_OFICINACONSULAR2.SI_OFICINACONSULAR1.Add(this);
                }
    
                ofco_sReferenciaId = SI_OFICINACONSULAR2.ofco_sOficinaConsularId;
            }
            else if (!skipKeys)
            {
                ofco_sReferenciaId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_OFICINACONSULAR2")
                    && (ChangeTracker.OriginalValues["SI_OFICINACONSULAR2"] == SI_OFICINACONSULAR2))
                {
                    ChangeTracker.OriginalValues.Remove("SI_OFICINACONSULAR2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_OFICINACONSULAR2", previousValue);
                }
                if (SI_OFICINACONSULAR2 != null && !SI_OFICINACONSULAR2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_OFICINACONSULAR2.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_OFICINACONSULAR.Contains(this))
            {
                previousValue.SI_OFICINACONSULAR.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.SI_OFICINACONSULAR.Contains(this))
                {
                    SI_PARAMETRO.SI_OFICINACONSULAR.Add(this);
                }
    
                ofco_sCategoriaId = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_UBICACIONGEOGRAFICA(SI_UBICACIONGEOGRAFICA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.SI_OFICINACONSULAR.Contains(this))
            {
                previousValue.SI_OFICINACONSULAR.Remove(this);
            }
    
            if (SI_UBICACIONGEOGRAFICA != null)
            {
                if (!SI_UBICACIONGEOGRAFICA.SI_OFICINACONSULAR.Contains(this))
                {
                    SI_UBICACIONGEOGRAFICA.SI_OFICINACONSULAR.Add(this);
                }
    
                ofco_cUbigeoCodigo = SI_UBICACIONGEOGRAFICA.ubge_cCodigo;
            }
            else if (!skipKeys)
            {
                ofco_cUbigeoCodigo = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_UBICACIONGEOGRAFICA")
                    && (ChangeTracker.OriginalValues["SI_UBICACIONGEOGRAFICA"] == SI_UBICACIONGEOGRAFICA))
                {
                    ChangeTracker.OriginalValues.Remove("SI_UBICACIONGEOGRAFICA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_UBICACIONGEOGRAFICA", previousValue);
                }
                if (SI_UBICACIONGEOGRAFICA != null && !SI_UBICACIONGEOGRAFICA.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_UBICACIONGEOGRAFICA.StartTracking();
                }
            }
        }
    
        private void FixupAL_MOVIMIENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTO", item);
                    }
                }
            }
        }
    
        private void FixupAL_MOVIMIENTO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR1, this))
                    {
                        item.SI_OFICINACONSULAR1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTO1", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDO item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDO", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDO1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDO item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDO1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR1, this))
                    {
                        item.SI_OFICINACONSULAR1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDO1", item);
                    }
                }
            }
        }
    
        private void FixupCL_PERFILATENCION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_PERFILATENCION item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_PERFILATENCION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_PERFILATENCION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_PERFILATENCION", item);
                    }
                }
            }
        }
    
        private void FixupCL_SERVICIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_SERVICIO item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_SERVICIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_SERVICIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_SERVICIO", item);
                    }
                }
            }
        }
    
        private void FixupCL_TELEVISOR(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_TELEVISOR item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_TELEVISOR", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_TELEVISOR item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_TELEVISOR", item);
                    }
                }
            }
        }
    
        private void FixupCL_TICKETERA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_TICKETERA item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_TICKETERA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_TICKETERA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_TICKETERA", item);
                    }
                }
            }
        }
    
        private void FixupCL_VENTANILLA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_VENTANILLA item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_VENTANILLA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_VENTANILLA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_VENTANILLA", item);
                    }
                }
            }
        }
    
        private void FixupCL_VIDEO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_VIDEO item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_VIDEO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_VIDEO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_VIDEO", item);
                    }
                }
            }
        }
    
        private void FixupCO_CUENTACORRIENTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_CUENTACORRIENTE item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_CUENTACORRIENTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_CUENTACORRIENTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_CUENTACORRIENTE", item);
                    }
                }
            }
        }
    
        private void FixupCO_REMESA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_REMESA item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_REMESA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_REMESA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_REMESA", item);
                    }
                }
            }
        }
    
        private void FixupCO_REMESA1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_REMESA item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_REMESA1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_REMESA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR1, this))
                    {
                        item.SI_OFICINACONSULAR1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_REMESA1", item);
                    }
                }
            }
        }
    
        private void FixupCO_TRANSACCION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_TRANSACCION item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_TRANSACCION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_TRANSACCION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_TRANSACCION", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACION item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_OFICINACONSULARFUNCIONARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_OFICINACONSULARFUNCIONARIO item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_OFICINACONSULARFUNCIONARIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_OFICINACONSULARFUNCIONARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_OFICINACONSULARFUNCIONARIO", item);
                    }
                }
            }
        }
    
        private void FixupSE_USUARIOROL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SE_USUARIOROL item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SE_USUARIOROL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SE_USUARIOROL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SE_USUARIOROL", item);
                    }
                }
            }
        }
    
        private void FixupSI_BOVEDA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_BOVEDA item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_BOVEDA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_BOVEDA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_BOVEDA", item);
                    }
                }
            }
        }
    
        private void FixupSI_OFICINACONSULAR1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_OFICINACONSULAR item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_OFICINACONSULAR1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_OFICINACONSULAR item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR2, this))
                    {
                        item.SI_OFICINACONSULAR2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_OFICINACONSULAR1", item);
                    }
                }
            }
        }
    
        private void FixupSI_TIPOCAMBIO_BANCARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TIPOCAMBIO_BANCARIO item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TIPOCAMBIO_BANCARIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TIPOCAMBIO_BANCARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TIPOCAMBIO_BANCARIO", item);
                    }
                }
            }
        }
    
        private void FixupSI_TIPOCAMBIO_CONSULAR(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TIPOCAMBIO_CONSULAR item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TIPOCAMBIO_CONSULAR", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TIPOCAMBIO_CONSULAR item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TIPOCAMBIO_CONSULAR", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ASISTENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ASISTENCIA item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ASISTENCIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ASISTENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ASISTENCIA", item);
                    }
                }
            }
        }
    
        private void FixupRE_ASISTENCIA1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ASISTENCIA item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ASISTENCIA1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ASISTENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR1, this))
                    {
                        item.SI_OFICINACONSULAR1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ASISTENCIA1", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.NewItems)
                {
                    item.SI_OFICINACONSULAR = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.SI_OFICINACONSULAR, this))
                    {
                        item.SI_OFICINACONSULAR = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
        }

        #endregion
    }
}
