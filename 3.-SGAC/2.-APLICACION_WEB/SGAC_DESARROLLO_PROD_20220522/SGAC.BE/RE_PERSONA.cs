//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(RE_ACTONOTARIALPARTICIPANTE))]
    [KnownType(typeof(RE_ACTUACION))]
    [KnownType(typeof(RE_ACTUACIONPARTICIPANTE))]
    [KnownType(typeof(RE_PERSONAFILIACION))]
    [KnownType(typeof(MA_ESTADO_CIVIL))]
    [KnownType(typeof(MA_OCUPACION))]
    [KnownType(typeof(MA_PROFESION))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_CENTROPOBLADO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(SI_UBICACIONGEOGRAFICA))]
    [KnownType(typeof(RE_PERSONAFOTO))]
    [KnownType(typeof(RE_PERSONAIDENTIFICACION))]
    [KnownType(typeof(RE_PERSONARESIDENCIA))]
    [KnownType(typeof(RE_REGISTROUNICO))]
    [KnownType(typeof(RE_REPRESENTANTELEGAL))]
    [KnownType(typeof(RE_ACTOJUDICIALPARTICIPANTE))]
    [KnownType(typeof(RE_ASISTENCIA))]
    public partial class RE_PERSONA: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long pers_iPersonaId
        {
            get { return _pers_iPersonaId; }
            set
            {
                if (_pers_iPersonaId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'pers_iPersonaId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _pers_iPersonaId = value;
                    OnPropertyChanged("pers_iPersonaId");
                }
            }
        }
        private long _pers_iPersonaId;
    
        [DataMember]
        public short pers_sEstadoCivilId
        {
            get { return _pers_sEstadoCivilId; }
            set
            {
                if (_pers_sEstadoCivilId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sEstadoCivilId", _pers_sEstadoCivilId);
                    if (!IsDeserializing)
                    {
                        if (MA_ESTADO_CIVIL != null && MA_ESTADO_CIVIL.esci_sEstadoCivilId != value)
                        {
                            MA_ESTADO_CIVIL = null;
                        }
                    }
                    _pers_sEstadoCivilId = value;
                    OnPropertyChanged("pers_sEstadoCivilId");
                }
            }
        }
        private short _pers_sEstadoCivilId;
    
        [DataMember]
        public Nullable<short> pers_sProfesionId
        {
            get { return _pers_sProfesionId; }
            set
            {
                if (_pers_sProfesionId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sProfesionId", _pers_sProfesionId);
                    if (!IsDeserializing)
                    {
                        if (MA_PROFESION != null && MA_PROFESION.prof_sProfesionId != value)
                        {
                            MA_PROFESION = null;
                        }
                    }
                    _pers_sProfesionId = value;
                    OnPropertyChanged("pers_sProfesionId");
                }
            }
        }
        private Nullable<short> _pers_sProfesionId;
    
        [DataMember]
        public Nullable<short> pers_sOcupacionId
        {
            get { return _pers_sOcupacionId; }
            set
            {
                if (_pers_sOcupacionId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sOcupacionId", _pers_sOcupacionId);
                    if (!IsDeserializing)
                    {
                        if (MA_OCUPACION != null && MA_OCUPACION.ocup_sOcupacionId != value)
                        {
                            MA_OCUPACION = null;
                        }
                    }
                    _pers_sOcupacionId = value;
                    OnPropertyChanged("pers_sOcupacionId");
                }
            }
        }
        private Nullable<short> _pers_sOcupacionId;
    
        [DataMember]
        public Nullable<short> pers_sIdiomaNatalId
        {
            get { return _pers_sIdiomaNatalId; }
            set
            {
                if (_pers_sIdiomaNatalId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sIdiomaNatalId", _pers_sIdiomaNatalId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO8 != null && SI_PARAMETRO8.para_sParametroId != value)
                        {
                            SI_PARAMETRO8 = null;
                        }
                    }
                    _pers_sIdiomaNatalId = value;
                    OnPropertyChanged("pers_sIdiomaNatalId");
                }
            }
        }
        private Nullable<short> _pers_sIdiomaNatalId;
    
        [DataMember]
        public short pers_sGeneroId
        {
            get { return _pers_sGeneroId; }
            set
            {
                if (_pers_sGeneroId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sGeneroId", _pers_sGeneroId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO2 != null && SI_PARAMETRO2.para_sParametroId != value)
                        {
                            SI_PARAMETRO2 = null;
                        }
                    }
                    _pers_sGeneroId = value;
                    OnPropertyChanged("pers_sGeneroId");
                }
            }
        }
        private short _pers_sGeneroId;
    
        [DataMember]
        public Nullable<short> pers_sGradoInstruccionId
        {
            get { return _pers_sGradoInstruccionId; }
            set
            {
                if (_pers_sGradoInstruccionId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sGradoInstruccionId", _pers_sGradoInstruccionId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO3 != null && SI_PARAMETRO3.para_sParametroId != value)
                        {
                            SI_PARAMETRO3 = null;
                        }
                    }
                    _pers_sGradoInstruccionId = value;
                    OnPropertyChanged("pers_sGradoInstruccionId");
                }
            }
        }
        private Nullable<short> _pers_sGradoInstruccionId;
    
        [DataMember]
        public string pers_vApellidoPaterno
        {
            get { return _pers_vApellidoPaterno; }
            set
            {
                if (_pers_vApellidoPaterno != value)
                {
                    _pers_vApellidoPaterno = value;
                    OnPropertyChanged("pers_vApellidoPaterno");
                }
            }
        }
        private string _pers_vApellidoPaterno;
    
        [DataMember]
        public string pers_vApellidoMaterno
        {
            get { return _pers_vApellidoMaterno; }
            set
            {
                if (_pers_vApellidoMaterno != value)
                {
                    _pers_vApellidoMaterno = value;
                    OnPropertyChanged("pers_vApellidoMaterno");
                }
            }
        }
        private string _pers_vApellidoMaterno;
    
        [DataMember]
        public string pers_vNombres
        {
            get { return _pers_vNombres; }
            set
            {
                if (_pers_vNombres != value)
                {
                    _pers_vNombres = value;
                    OnPropertyChanged("pers_vNombres");
                }
            }
        }
        private string _pers_vNombres;
    
        [DataMember]
        public string pers_vCorreoElectronico
        {
            get { return _pers_vCorreoElectronico; }
            set
            {
                if (_pers_vCorreoElectronico != value)
                {
                    _pers_vCorreoElectronico = value;
                    OnPropertyChanged("pers_vCorreoElectronico");
                }
            }
        }
        private string _pers_vCorreoElectronico;
    
        [DataMember]
        public Nullable<System.DateTime> pers_dNacimientoFecha
        {
            get { return _pers_dNacimientoFecha; }
            set
            {
                if (_pers_dNacimientoFecha != value)
                {
                    _pers_dNacimientoFecha = value;
                    OnPropertyChanged("pers_dNacimientoFecha");
                }
            }
        }
        private Nullable<System.DateTime> _pers_dNacimientoFecha;
    
        [DataMember]
        public short pers_sPersonaTipoId
        {
            get { return _pers_sPersonaTipoId; }
            set
            {
                if (_pers_sPersonaTipoId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sPersonaTipoId", _pers_sPersonaTipoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _pers_sPersonaTipoId = value;
                    OnPropertyChanged("pers_sPersonaTipoId");
                }
            }
        }
        private short _pers_sPersonaTipoId;
    
        [DataMember]
        public string pers_cNacimientoLugar
        {
            get { return _pers_cNacimientoLugar; }
            set
            {
                if (_pers_cNacimientoLugar != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_cNacimientoLugar", _pers_cNacimientoLugar);
                    if (!IsDeserializing)
                    {
                        if (SI_UBICACIONGEOGRAFICA != null && SI_UBICACIONGEOGRAFICA.ubge_cCodigo != value)
                        {
                            SI_UBICACIONGEOGRAFICA = null;
                        }
                    }
                    _pers_cNacimientoLugar = value;
                    OnPropertyChanged("pers_cNacimientoLugar");
                }
            }
        }
        private string _pers_cNacimientoLugar;
    
        [DataMember]
        public string pers_vObservaciones
        {
            get { return _pers_vObservaciones; }
            set
            {
                if (_pers_vObservaciones != value)
                {
                    _pers_vObservaciones = value;
                    OnPropertyChanged("pers_vObservaciones");
                }
            }
        }
        private string _pers_vObservaciones;
    
        [DataMember]
        public Nullable<short> pers_sNacionalidadId
        {
            get { return _pers_sNacionalidadId; }
            set
            {
                if (_pers_sNacionalidadId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sNacionalidadId", _pers_sNacionalidadId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO4 != null && SI_PARAMETRO4.para_sParametroId != value)
                        {
                            SI_PARAMETRO4 = null;
                        }
                    }
                    _pers_sNacionalidadId = value;
                    OnPropertyChanged("pers_sNacionalidadId");
                }
            }
        }
        private Nullable<short> _pers_sNacionalidadId;
    
        [DataMember]
        public string pers_vEstatura
        {
            get { return _pers_vEstatura; }
            set
            {
                if (_pers_vEstatura != value)
                {
                    _pers_vEstatura = value;
                    OnPropertyChanged("pers_vEstatura");
                }
            }
        }
        private string _pers_vEstatura;
    
        [DataMember]
        public Nullable<short> pers_sColorTezId
        {
            get { return _pers_sColorTezId; }
            set
            {
                if (_pers_sColorTezId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sColorTezId", _pers_sColorTezId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO7 != null && SI_PARAMETRO7.para_sParametroId != value)
                        {
                            SI_PARAMETRO7 = null;
                        }
                    }
                    _pers_sColorTezId = value;
                    OnPropertyChanged("pers_sColorTezId");
                }
            }
        }
        private Nullable<short> _pers_sColorTezId;
    
        [DataMember]
        public Nullable<short> pers_sColorOjosId
        {
            get { return _pers_sColorOjosId; }
            set
            {
                if (_pers_sColorOjosId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sColorOjosId", _pers_sColorOjosId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO5 != null && SI_PARAMETRO5.para_sParametroId != value)
                        {
                            SI_PARAMETRO5 = null;
                        }
                    }
                    _pers_sColorOjosId = value;
                    OnPropertyChanged("pers_sColorOjosId");
                }
            }
        }
        private Nullable<short> _pers_sColorOjosId;
    
        [DataMember]
        public Nullable<short> pers_sColorCabelloId
        {
            get { return _pers_sColorCabelloId; }
            set
            {
                if (_pers_sColorCabelloId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sColorCabelloId", _pers_sColorCabelloId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _pers_sColorCabelloId = value;
                    OnPropertyChanged("pers_sColorCabelloId");
                }
            }
        }
        private Nullable<short> _pers_sColorCabelloId;
    
        [DataMember]
        public Nullable<short> pers_sGrupoSanguineoId
        {
            get { return _pers_sGrupoSanguineoId; }
            set
            {
                if (_pers_sGrupoSanguineoId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sGrupoSanguineoId", _pers_sGrupoSanguineoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO6 != null && SI_PARAMETRO6.para_sParametroId != value)
                        {
                            SI_PARAMETRO6 = null;
                        }
                    }
                    _pers_sGrupoSanguineoId = value;
                    OnPropertyChanged("pers_sGrupoSanguineoId");
                }
            }
        }
        private Nullable<short> _pers_sGrupoSanguineoId;
    
        [DataMember]
        public string pers_vSenasParticulares
        {
            get { return _pers_vSenasParticulares; }
            set
            {
                if (_pers_vSenasParticulares != value)
                {
                    _pers_vSenasParticulares = value;
                    OnPropertyChanged("pers_vSenasParticulares");
                }
            }
        }
        private string _pers_vSenasParticulares;
    
        [DataMember]
        public Nullable<bool> pers_bFallecidoFlag
        {
            get { return _pers_bFallecidoFlag; }
            set
            {
                if (_pers_bFallecidoFlag != value)
                {
                    _pers_bFallecidoFlag = value;
                    OnPropertyChanged("pers_bFallecidoFlag");
                }
            }
        }
        private Nullable<bool> _pers_bFallecidoFlag;
    
        [DataMember]
        public Nullable<System.DateTime> pers_dFechaDefuncion
        {
            get { return _pers_dFechaDefuncion; }
            set
            {
                if (_pers_dFechaDefuncion != value)
                {
                    _pers_dFechaDefuncion = value;
                    OnPropertyChanged("pers_dFechaDefuncion");
                }
            }
        }
        private Nullable<System.DateTime> _pers_dFechaDefuncion;
    
        [DataMember]
        public string pers_cUbigeoDefuncion
        {
            get { return _pers_cUbigeoDefuncion; }
            set
            {
                if (_pers_cUbigeoDefuncion != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_cUbigeoDefuncion", _pers_cUbigeoDefuncion);
                    if (!IsDeserializing)
                    {
                        if (SI_UBICACIONGEOGRAFICA1 != null && SI_UBICACIONGEOGRAFICA1.ubge_cCodigo != value)
                        {
                            SI_UBICACIONGEOGRAFICA1 = null;
                        }
                    }
                    _pers_cUbigeoDefuncion = value;
                    OnPropertyChanged("pers_cUbigeoDefuncion");
                }
            }
        }
        private string _pers_cUbigeoDefuncion;
    
        [DataMember]
        public string pers_vApellidoCasada
        {
            get { return _pers_vApellidoCasada; }
            set
            {
                if (_pers_vApellidoCasada != value)
                {
                    _pers_vApellidoCasada = value;
                    OnPropertyChanged("pers_vApellidoCasada");
                }
            }
        }
        private string _pers_vApellidoCasada;
    
        [DataMember]
        public string pers_cEstado
        {
            get { return _pers_cEstado; }
            set
            {
                if (_pers_cEstado != value)
                {
                    _pers_cEstado = value;
                    OnPropertyChanged("pers_cEstado");
                }
            }
        }
        private string _pers_cEstado;
    
        [DataMember]
        public short pers_sUsuarioCreacion
        {
            get { return _pers_sUsuarioCreacion; }
            set
            {
                if (_pers_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sUsuarioCreacion", _pers_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                        if (SE_USUARIO2 != null && SE_USUARIO2.usua_sUsuarioId != value)
                        {
                            SE_USUARIO2 = null;
                        }
                    }
                    _pers_sUsuarioCreacion = value;
                    OnPropertyChanged("pers_sUsuarioCreacion");
                }
            }
        }
        private short _pers_sUsuarioCreacion;
    
        [DataMember]
        public string pers_vIPCreacion
        {
            get { return _pers_vIPCreacion; }
            set
            {
                if (_pers_vIPCreacion != value)
                {
                    _pers_vIPCreacion = value;
                    OnPropertyChanged("pers_vIPCreacion");
                }
            }
        }
        private string _pers_vIPCreacion;
    
        [DataMember]
        public System.DateTime pers_dFechaCreacion
        {
            get { return _pers_dFechaCreacion; }
            set
            {
                if (_pers_dFechaCreacion != value)
                {
                    _pers_dFechaCreacion = value;
                    OnPropertyChanged("pers_dFechaCreacion");
                }
            }
        }
        private System.DateTime _pers_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> pers_sUsuarioModificacion
        {
            get { return _pers_sUsuarioModificacion; }
            set
            {
                if (_pers_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_sUsuarioModificacion", _pers_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                        if (SE_USUARIO3 != null && SE_USUARIO3.usua_sUsuarioId != value)
                        {
                            SE_USUARIO3 = null;
                        }
                    }
                    _pers_sUsuarioModificacion = value;
                    OnPropertyChanged("pers_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _pers_sUsuarioModificacion;
    
        [DataMember]
        public string pers_vIPModificacion
        {
            get { return _pers_vIPModificacion; }
            set
            {
                if (_pers_vIPModificacion != value)
                {
                    _pers_vIPModificacion = value;
                    OnPropertyChanged("pers_vIPModificacion");
                }
            }
        }
        private string _pers_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> pers_dFechaModificacion
        {
            get { return _pers_dFechaModificacion; }
            set
            {
                if (_pers_dFechaModificacion != value)
                {
                    _pers_dFechaModificacion = value;
                    OnPropertyChanged("pers_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _pers_dFechaModificacion;
    
        [DataMember]
        public Nullable<short> pers_sPeso
        {
            get { return _pers_sPeso; }
            set
            {
                if (_pers_sPeso != value)
                {
                    _pers_sPeso = value;
                    OnPropertyChanged("pers_sPeso");
                }
            }
        }
        private Nullable<short> _pers_sPeso;
    
        [DataMember]
        public Nullable<short> pers_sOcurrenciaTipoId
        {
            get { return _pers_sOcurrenciaTipoId; }
            set
            {
                if (_pers_sOcurrenciaTipoId != value)
                {
                    _pers_sOcurrenciaTipoId = value;
                    OnPropertyChanged("pers_sOcurrenciaTipoId");
                }
            }
        }
        private Nullable<short> _pers_sOcurrenciaTipoId;
    
        [DataMember]
        public Nullable<int> pers_IOcurrenciaCentroPobladoId
        {
            get { return _pers_IOcurrenciaCentroPobladoId; }
            set
            {
                if (_pers_IOcurrenciaCentroPobladoId != value)
                {
                    ChangeTracker.RecordOriginalValue("pers_IOcurrenciaCentroPobladoId", _pers_IOcurrenciaCentroPobladoId);
                    if (!IsDeserializing)
                    {
                        if (SI_CENTROPOBLADO != null && SI_CENTROPOBLADO.cepo_ICentroPobladoId != value)
                        {
                            SI_CENTROPOBLADO = null;
                        }
                    }
                    _pers_IOcurrenciaCentroPobladoId = value;
                    OnPropertyChanged("pers_IOcurrenciaCentroPobladoId");
                }
            }
        }
        private Nullable<int> _pers_IOcurrenciaCentroPobladoId;
    
        [DataMember]
        public string pers_vLugarNacimiento
        {
            get { return _pers_vLugarNacimiento; }
            set
            {
                if (_pers_vLugarNacimiento != value)
                {
                    _pers_vLugarNacimiento = value;
                    OnPropertyChanged("pers_vLugarNacimiento");
                }
            }
        }
        private string _pers_vLugarNacimiento;

        [DataMember]
        public Int16 pers_sPaisId
        {
            get { return _pers_sPaisId; }
            set
            {
                if (_pers_sPaisId != value)
                {
                    _pers_sPaisId = value;
                    OnPropertyChanged("pers_sPaisId");
                }
            }
        }
        public Int16 _pers_sPaisId;
 


        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALPARTICIPANTE> RE_ACTONOTARIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTONOTARIALPARTICIPANTE == null)
                {
                    _rE_ACTONOTARIALPARTICIPANTE = new TrackableCollection<RE_ACTONOTARIALPARTICIPANTE>();
                    _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged += FixupRE_ACTONOTARIALPARTICIPANTE;
                }
                return _rE_ACTONOTARIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALPARTICIPANTE != null)
                    {
                        _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTONOTARIALPARTICIPANTE;
                    }
                    _rE_ACTONOTARIALPARTICIPANTE = value;
                    if (_rE_ACTONOTARIALPARTICIPANTE != null)
                    {
                        _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged += FixupRE_ACTONOTARIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALPARTICIPANTE> _rE_ACTONOTARIALPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACION> RE_ACTUACION
        {
            get
            {
                if (_rE_ACTUACION == null)
                {
                    _rE_ACTUACION = new TrackableCollection<RE_ACTUACION>();
                    _rE_ACTUACION.CollectionChanged += FixupRE_ACTUACION;
                }
                return _rE_ACTUACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACION != null)
                    {
                        _rE_ACTUACION.CollectionChanged -= FixupRE_ACTUACION;
                    }
                    _rE_ACTUACION = value;
                    if (_rE_ACTUACION != null)
                    {
                        _rE_ACTUACION.CollectionChanged += FixupRE_ACTUACION;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACION");
                }
            }
        }
        private TrackableCollection<RE_ACTUACION> _rE_ACTUACION;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONPARTICIPANTE> RE_ACTUACIONPARTICIPANTE
        {
            get
            {
                if (_rE_ACTUACIONPARTICIPANTE == null)
                {
                    _rE_ACTUACIONPARTICIPANTE = new TrackableCollection<RE_ACTUACIONPARTICIPANTE>();
                    _rE_ACTUACIONPARTICIPANTE.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE;
                }
                return _rE_ACTUACIONPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONPARTICIPANTE != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE.CollectionChanged -= FixupRE_ACTUACIONPARTICIPANTE;
                    }
                    _rE_ACTUACIONPARTICIPANTE = value;
                    if (_rE_ACTUACIONPARTICIPANTE != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONPARTICIPANTE> _rE_ACTUACIONPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_PERSONAFILIACION> RE_PERSONAFILIACION
        {
            get
            {
                if (_rE_PERSONAFILIACION == null)
                {
                    _rE_PERSONAFILIACION = new TrackableCollection<RE_PERSONAFILIACION>();
                    _rE_PERSONAFILIACION.CollectionChanged += FixupRE_PERSONAFILIACION;
                }
                return _rE_PERSONAFILIACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONAFILIACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONAFILIACION != null)
                    {
                        _rE_PERSONAFILIACION.CollectionChanged -= FixupRE_PERSONAFILIACION;
                    }
                    _rE_PERSONAFILIACION = value;
                    if (_rE_PERSONAFILIACION != null)
                    {
                        _rE_PERSONAFILIACION.CollectionChanged += FixupRE_PERSONAFILIACION;
                    }
                    OnNavigationPropertyChanged("RE_PERSONAFILIACION");
                }
            }
        }
        private TrackableCollection<RE_PERSONAFILIACION> _rE_PERSONAFILIACION;
    
        [DataMember]
        public MA_ESTADO_CIVIL MA_ESTADO_CIVIL
        {
            get { return _mA_ESTADO_CIVIL; }
            set
            {
                if (!ReferenceEquals(_mA_ESTADO_CIVIL, value))
                {
                    var previousValue = _mA_ESTADO_CIVIL;
                    _mA_ESTADO_CIVIL = value;
                    FixupMA_ESTADO_CIVIL(previousValue);
                    OnNavigationPropertyChanged("MA_ESTADO_CIVIL");
                }
            }
        }
        private MA_ESTADO_CIVIL _mA_ESTADO_CIVIL;
    
        [DataMember]
        public MA_OCUPACION MA_OCUPACION
        {
            get { return _mA_OCUPACION; }
            set
            {
                if (!ReferenceEquals(_mA_OCUPACION, value))
                {
                    var previousValue = _mA_OCUPACION;
                    _mA_OCUPACION = value;
                    FixupMA_OCUPACION(previousValue);
                    OnNavigationPropertyChanged("MA_OCUPACION");
                }
            }
        }
        private MA_OCUPACION _mA_OCUPACION;
    
        [DataMember]
        public MA_PROFESION MA_PROFESION
        {
            get { return _mA_PROFESION; }
            set
            {
                if (!ReferenceEquals(_mA_PROFESION, value))
                {
                    var previousValue = _mA_PROFESION;
                    _mA_PROFESION = value;
                    FixupMA_PROFESION(previousValue);
                    OnNavigationPropertyChanged("MA_PROFESION");
                }
            }
        }
        private MA_PROFESION _mA_PROFESION;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO2
        {
            get { return _sE_USUARIO2; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO2, value))
                {
                    var previousValue = _sE_USUARIO2;
                    _sE_USUARIO2 = value;
                    FixupSE_USUARIO2(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO2");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO2;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO3
        {
            get { return _sE_USUARIO3; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO3, value))
                {
                    var previousValue = _sE_USUARIO3;
                    _sE_USUARIO3 = value;
                    FixupSE_USUARIO3(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO3");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO3;
    
        [DataMember]
        public SI_CENTROPOBLADO SI_CENTROPOBLADO
        {
            get { return _sI_CENTROPOBLADO; }
            set
            {
                if (!ReferenceEquals(_sI_CENTROPOBLADO, value))
                {
                    var previousValue = _sI_CENTROPOBLADO;
                    _sI_CENTROPOBLADO = value;
                    FixupSI_CENTROPOBLADO(previousValue);
                    OnNavigationPropertyChanged("SI_CENTROPOBLADO");
                }
            }
        }
        private SI_CENTROPOBLADO _sI_CENTROPOBLADO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO2
        {
            get { return _sI_PARAMETRO2; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO2, value))
                {
                    var previousValue = _sI_PARAMETRO2;
                    _sI_PARAMETRO2 = value;
                    FixupSI_PARAMETRO2(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO2");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO2;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO3
        {
            get { return _sI_PARAMETRO3; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO3, value))
                {
                    var previousValue = _sI_PARAMETRO3;
                    _sI_PARAMETRO3 = value;
                    FixupSI_PARAMETRO3(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO3");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO3;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO4
        {
            get { return _sI_PARAMETRO4; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO4, value))
                {
                    var previousValue = _sI_PARAMETRO4;
                    _sI_PARAMETRO4 = value;
                    FixupSI_PARAMETRO4(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO4");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO4;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO5
        {
            get { return _sI_PARAMETRO5; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO5, value))
                {
                    var previousValue = _sI_PARAMETRO5;
                    _sI_PARAMETRO5 = value;
                    FixupSI_PARAMETRO5(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO5");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO5;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO6
        {
            get { return _sI_PARAMETRO6; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO6, value))
                {
                    var previousValue = _sI_PARAMETRO6;
                    _sI_PARAMETRO6 = value;
                    FixupSI_PARAMETRO6(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO6");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO6;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO7
        {
            get { return _sI_PARAMETRO7; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO7, value))
                {
                    var previousValue = _sI_PARAMETRO7;
                    _sI_PARAMETRO7 = value;
                    FixupSI_PARAMETRO7(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO7");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO7;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO8
        {
            get { return _sI_PARAMETRO8; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO8, value))
                {
                    var previousValue = _sI_PARAMETRO8;
                    _sI_PARAMETRO8 = value;
                    FixupSI_PARAMETRO8(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO8");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO8;
    
        [DataMember]
        public SI_UBICACIONGEOGRAFICA SI_UBICACIONGEOGRAFICA
        {
            get { return _sI_UBICACIONGEOGRAFICA; }
            set
            {
                if (!ReferenceEquals(_sI_UBICACIONGEOGRAFICA, value))
                {
                    var previousValue = _sI_UBICACIONGEOGRAFICA;
                    _sI_UBICACIONGEOGRAFICA = value;
                    FixupSI_UBICACIONGEOGRAFICA(previousValue);
                    OnNavigationPropertyChanged("SI_UBICACIONGEOGRAFICA");
                }
            }
        }
        private SI_UBICACIONGEOGRAFICA _sI_UBICACIONGEOGRAFICA;
    
        [DataMember]
        public SI_UBICACIONGEOGRAFICA SI_UBICACIONGEOGRAFICA1
        {
            get { return _sI_UBICACIONGEOGRAFICA1; }
            set
            {
                if (!ReferenceEquals(_sI_UBICACIONGEOGRAFICA1, value))
                {
                    var previousValue = _sI_UBICACIONGEOGRAFICA1;
                    _sI_UBICACIONGEOGRAFICA1 = value;
                    FixupSI_UBICACIONGEOGRAFICA1(previousValue);
                    OnNavigationPropertyChanged("SI_UBICACIONGEOGRAFICA1");
                }
            }
        }
        private SI_UBICACIONGEOGRAFICA _sI_UBICACIONGEOGRAFICA1;
    
        [DataMember]
        public TrackableCollection<RE_PERSONAFOTO> RE_PERSONAFOTO
        {
            get
            {
                if (_rE_PERSONAFOTO == null)
                {
                    _rE_PERSONAFOTO = new TrackableCollection<RE_PERSONAFOTO>();
                    _rE_PERSONAFOTO.CollectionChanged += FixupRE_PERSONAFOTO;
                }
                return _rE_PERSONAFOTO;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONAFOTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONAFOTO != null)
                    {
                        _rE_PERSONAFOTO.CollectionChanged -= FixupRE_PERSONAFOTO;
                    }
                    _rE_PERSONAFOTO = value;
                    if (_rE_PERSONAFOTO != null)
                    {
                        _rE_PERSONAFOTO.CollectionChanged += FixupRE_PERSONAFOTO;
                    }
                    OnNavigationPropertyChanged("RE_PERSONAFOTO");
                }
            }
        }
        private TrackableCollection<RE_PERSONAFOTO> _rE_PERSONAFOTO;
    
        [DataMember]
        public TrackableCollection<RE_PERSONAIDENTIFICACION> RE_PERSONAIDENTIFICACION
        {
            get
            {
                if (_rE_PERSONAIDENTIFICACION == null)
                {
                    _rE_PERSONAIDENTIFICACION = new TrackableCollection<RE_PERSONAIDENTIFICACION>();
                    _rE_PERSONAIDENTIFICACION.CollectionChanged += FixupRE_PERSONAIDENTIFICACION;
                }
                return _rE_PERSONAIDENTIFICACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONAIDENTIFICACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONAIDENTIFICACION != null)
                    {
                        _rE_PERSONAIDENTIFICACION.CollectionChanged -= FixupRE_PERSONAIDENTIFICACION;
                    }
                    _rE_PERSONAIDENTIFICACION = value;
                    if (_rE_PERSONAIDENTIFICACION != null)
                    {
                        _rE_PERSONAIDENTIFICACION.CollectionChanged += FixupRE_PERSONAIDENTIFICACION;
                    }
                    OnNavigationPropertyChanged("RE_PERSONAIDENTIFICACION");
                }
            }
        }
        private TrackableCollection<RE_PERSONAIDENTIFICACION> _rE_PERSONAIDENTIFICACION;
    
        [DataMember]
        public TrackableCollection<RE_PERSONARESIDENCIA> RE_PERSONARESIDENCIA
        {
            get
            {
                if (_rE_PERSONARESIDENCIA == null)
                {
                    _rE_PERSONARESIDENCIA = new TrackableCollection<RE_PERSONARESIDENCIA>();
                    _rE_PERSONARESIDENCIA.CollectionChanged += FixupRE_PERSONARESIDENCIA;
                }
                return _rE_PERSONARESIDENCIA;
            }
            set
            {
                if (!ReferenceEquals(_rE_PERSONARESIDENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_PERSONARESIDENCIA != null)
                    {
                        _rE_PERSONARESIDENCIA.CollectionChanged -= FixupRE_PERSONARESIDENCIA;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (RE_PERSONARESIDENCIA item in _rE_PERSONARESIDENCIA)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _rE_PERSONARESIDENCIA = value;
                    if (_rE_PERSONARESIDENCIA != null)
                    {
                        _rE_PERSONARESIDENCIA.CollectionChanged += FixupRE_PERSONARESIDENCIA;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (RE_PERSONARESIDENCIA item in _rE_PERSONARESIDENCIA)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("RE_PERSONARESIDENCIA");
                }
            }
        }
        private TrackableCollection<RE_PERSONARESIDENCIA> _rE_PERSONARESIDENCIA;
    
        [DataMember]
        public TrackableCollection<RE_REGISTROUNICO> RE_REGISTROUNICO
        {
            get
            {
                if (_rE_REGISTROUNICO == null)
                {
                    _rE_REGISTROUNICO = new TrackableCollection<RE_REGISTROUNICO>();
                    _rE_REGISTROUNICO.CollectionChanged += FixupRE_REGISTROUNICO;
                }
                return _rE_REGISTROUNICO;
            }
            set
            {
                if (!ReferenceEquals(_rE_REGISTROUNICO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REGISTROUNICO != null)
                    {
                        _rE_REGISTROUNICO.CollectionChanged -= FixupRE_REGISTROUNICO;
                    }
                    _rE_REGISTROUNICO = value;
                    if (_rE_REGISTROUNICO != null)
                    {
                        _rE_REGISTROUNICO.CollectionChanged += FixupRE_REGISTROUNICO;
                    }
                    OnNavigationPropertyChanged("RE_REGISTROUNICO");
                }
            }
        }
        private TrackableCollection<RE_REGISTROUNICO> _rE_REGISTROUNICO;
    
        [DataMember]
        public TrackableCollection<RE_REPRESENTANTELEGAL> RE_REPRESENTANTELEGAL
        {
            get
            {
                if (_rE_REPRESENTANTELEGAL == null)
                {
                    _rE_REPRESENTANTELEGAL = new TrackableCollection<RE_REPRESENTANTELEGAL>();
                    _rE_REPRESENTANTELEGAL.CollectionChanged += FixupRE_REPRESENTANTELEGAL;
                }
                return _rE_REPRESENTANTELEGAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_REPRESENTANTELEGAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REPRESENTANTELEGAL != null)
                    {
                        _rE_REPRESENTANTELEGAL.CollectionChanged -= FixupRE_REPRESENTANTELEGAL;
                    }
                    _rE_REPRESENTANTELEGAL = value;
                    if (_rE_REPRESENTANTELEGAL != null)
                    {
                        _rE_REPRESENTANTELEGAL.CollectionChanged += FixupRE_REPRESENTANTELEGAL;
                    }
                    OnNavigationPropertyChanged("RE_REPRESENTANTELEGAL");
                }
            }
        }
        private TrackableCollection<RE_REPRESENTANTELEGAL> _rE_REPRESENTANTELEGAL;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> RE_ACTOJUDICIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTOJUDICIALPARTICIPANTE == null)
                {
                    _rE_ACTOJUDICIALPARTICIPANTE = new TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE>();
                    _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                }
                return _rE_ACTOJUDICIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    _rE_ACTOJUDICIALPARTICIPANTE = value;
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> _rE_ACTOJUDICIALPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ASISTENCIA> RE_ASISTENCIA
        {
            get
            {
                if (_rE_ASISTENCIA == null)
                {
                    _rE_ASISTENCIA = new TrackableCollection<RE_ASISTENCIA>();
                    _rE_ASISTENCIA.CollectionChanged += FixupRE_ASISTENCIA;
                }
                return _rE_ASISTENCIA;
            }
            set
            {
                if (!ReferenceEquals(_rE_ASISTENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ASISTENCIA != null)
                    {
                        _rE_ASISTENCIA.CollectionChanged -= FixupRE_ASISTENCIA;
                    }
                    _rE_ASISTENCIA = value;
                    if (_rE_ASISTENCIA != null)
                    {
                        _rE_ASISTENCIA.CollectionChanged += FixupRE_ASISTENCIA;
                    }
                    OnNavigationPropertyChanged("RE_ASISTENCIA");
                }
            }
        }
        private TrackableCollection<RE_ASISTENCIA> _rE_ASISTENCIA;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            RE_ACTONOTARIALPARTICIPANTE.Clear();
            RE_ACTUACION.Clear();
            RE_ACTUACIONPARTICIPANTE.Clear();
            RE_PERSONAFILIACION.Clear();
            MA_ESTADO_CIVIL = null;
            MA_OCUPACION = null;
            MA_PROFESION = null;
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SE_USUARIO2 = null;
            SE_USUARIO3 = null;
            SI_CENTROPOBLADO = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            SI_PARAMETRO2 = null;
            SI_PARAMETRO3 = null;
            SI_PARAMETRO4 = null;
            SI_PARAMETRO5 = null;
            SI_PARAMETRO6 = null;
            SI_PARAMETRO7 = null;
            SI_PARAMETRO8 = null;
            SI_UBICACIONGEOGRAFICA = null;
            SI_UBICACIONGEOGRAFICA1 = null;
            RE_PERSONAFOTO.Clear();
            RE_PERSONAIDENTIFICACION.Clear();
            RE_PERSONARESIDENCIA.Clear();
            RE_REGISTROUNICO.Clear();
            RE_REPRESENTANTELEGAL.Clear();
            RE_ACTOJUDICIALPARTICIPANTE.Clear();
            RE_ASISTENCIA.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupMA_ESTADO_CIVIL(MA_ESTADO_CIVIL previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA.Contains(this))
            {
                previousValue.RE_PERSONA.Remove(this);
            }
    
            if (MA_ESTADO_CIVIL != null)
            {
                if (!MA_ESTADO_CIVIL.RE_PERSONA.Contains(this))
                {
                    MA_ESTADO_CIVIL.RE_PERSONA.Add(this);
                }
    
                pers_sEstadoCivilId = MA_ESTADO_CIVIL.esci_sEstadoCivilId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_ESTADO_CIVIL")
                    && (ChangeTracker.OriginalValues["MA_ESTADO_CIVIL"] == MA_ESTADO_CIVIL))
                {
                    ChangeTracker.OriginalValues.Remove("MA_ESTADO_CIVIL");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_ESTADO_CIVIL", previousValue);
                }
                if (MA_ESTADO_CIVIL != null && !MA_ESTADO_CIVIL.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_ESTADO_CIVIL.StartTracking();
                }
            }
        }
    
        private void FixupMA_OCUPACION(MA_OCUPACION previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA.Contains(this))
            {
                previousValue.RE_PERSONA.Remove(this);
            }
    
            if (MA_OCUPACION != null)
            {
                if (!MA_OCUPACION.RE_PERSONA.Contains(this))
                {
                    MA_OCUPACION.RE_PERSONA.Add(this);
                }
    
                pers_sOcupacionId = MA_OCUPACION.ocup_sOcupacionId;
            }
            else if (!skipKeys)
            {
                pers_sOcupacionId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_OCUPACION")
                    && (ChangeTracker.OriginalValues["MA_OCUPACION"] == MA_OCUPACION))
                {
                    ChangeTracker.OriginalValues.Remove("MA_OCUPACION");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_OCUPACION", previousValue);
                }
                if (MA_OCUPACION != null && !MA_OCUPACION.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_OCUPACION.StartTracking();
                }
            }
        }
    
        private void FixupMA_PROFESION(MA_PROFESION previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA.Contains(this))
            {
                previousValue.RE_PERSONA.Remove(this);
            }
    
            if (MA_PROFESION != null)
            {
                if (!MA_PROFESION.RE_PERSONA.Contains(this))
                {
                    MA_PROFESION.RE_PERSONA.Add(this);
                }
    
                pers_sProfesionId = MA_PROFESION.prof_sProfesionId;
            }
            else if (!skipKeys)
            {
                pers_sProfesionId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MA_PROFESION")
                    && (ChangeTracker.OriginalValues["MA_PROFESION"] == MA_PROFESION))
                {
                    ChangeTracker.OriginalValues.Remove("MA_PROFESION");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MA_PROFESION", previousValue);
                }
                if (MA_PROFESION != null && !MA_PROFESION.ChangeTracker.ChangeTrackingEnabled)
                {
                    MA_PROFESION.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA.Contains(this))
            {
                previousValue.RE_PERSONA.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_PERSONA.Contains(this))
                {
                    SE_USUARIO.RE_PERSONA.Add(this);
                }
    
                pers_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA1.Contains(this))
            {
                previousValue.RE_PERSONA1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_PERSONA1.Contains(this))
                {
                    SE_USUARIO1.RE_PERSONA1.Add(this);
                }
    
                pers_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                pers_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO2(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA2.Contains(this))
            {
                previousValue.RE_PERSONA2.Remove(this);
            }
    
            if (SE_USUARIO2 != null)
            {
                if (!SE_USUARIO2.RE_PERSONA2.Contains(this))
                {
                    SE_USUARIO2.RE_PERSONA2.Add(this);
                }
    
                pers_sUsuarioCreacion = SE_USUARIO2.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO2")
                    && (ChangeTracker.OriginalValues["SE_USUARIO2"] == SE_USUARIO2))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO2", previousValue);
                }
                if (SE_USUARIO2 != null && !SE_USUARIO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO2.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO3(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA3.Contains(this))
            {
                previousValue.RE_PERSONA3.Remove(this);
            }
    
            if (SE_USUARIO3 != null)
            {
                if (!SE_USUARIO3.RE_PERSONA3.Contains(this))
                {
                    SE_USUARIO3.RE_PERSONA3.Add(this);
                }
    
                pers_sUsuarioModificacion = SE_USUARIO3.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                pers_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO3")
                    && (ChangeTracker.OriginalValues["SE_USUARIO3"] == SE_USUARIO3))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO3", previousValue);
                }
                if (SE_USUARIO3 != null && !SE_USUARIO3.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO3.StartTracking();
                }
            }
        }
    
        private void FixupSI_CENTROPOBLADO(SI_CENTROPOBLADO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA.Contains(this))
            {
                previousValue.RE_PERSONA.Remove(this);
            }
    
            if (SI_CENTROPOBLADO != null)
            {
                if (!SI_CENTROPOBLADO.RE_PERSONA.Contains(this))
                {
                    SI_CENTROPOBLADO.RE_PERSONA.Add(this);
                }
    
                pers_IOcurrenciaCentroPobladoId = SI_CENTROPOBLADO.cepo_ICentroPobladoId;
            }
            else if (!skipKeys)
            {
                pers_IOcurrenciaCentroPobladoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_CENTROPOBLADO")
                    && (ChangeTracker.OriginalValues["SI_CENTROPOBLADO"] == SI_CENTROPOBLADO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_CENTROPOBLADO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_CENTROPOBLADO", previousValue);
                }
                if (SI_CENTROPOBLADO != null && !SI_CENTROPOBLADO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_CENTROPOBLADO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA.Contains(this))
            {
                previousValue.RE_PERSONA.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.RE_PERSONA.Contains(this))
                {
                    SI_PARAMETRO.RE_PERSONA.Add(this);
                }
    
                pers_sPersonaTipoId = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA1.Contains(this))
            {
                previousValue.RE_PERSONA1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.RE_PERSONA1.Contains(this))
                {
                    SI_PARAMETRO1.RE_PERSONA1.Add(this);
                }
    
                pers_sColorCabelloId = SI_PARAMETRO1.para_sParametroId;
            }
            else if (!skipKeys)
            {
                pers_sColorCabelloId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO2(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA2.Contains(this))
            {
                previousValue.RE_PERSONA2.Remove(this);
            }
    
            if (SI_PARAMETRO2 != null)
            {
                if (!SI_PARAMETRO2.RE_PERSONA2.Contains(this))
                {
                    SI_PARAMETRO2.RE_PERSONA2.Add(this);
                }
    
                pers_sGeneroId = SI_PARAMETRO2.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO2")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO2"] == SI_PARAMETRO2))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO2", previousValue);
                }
                if (SI_PARAMETRO2 != null && !SI_PARAMETRO2.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO2.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO3(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA3.Contains(this))
            {
                previousValue.RE_PERSONA3.Remove(this);
            }
    
            if (SI_PARAMETRO3 != null)
            {
                if (!SI_PARAMETRO3.RE_PERSONA3.Contains(this))
                {
                    SI_PARAMETRO3.RE_PERSONA3.Add(this);
                }
    
                pers_sGradoInstruccionId = SI_PARAMETRO3.para_sParametroId;
            }
            else if (!skipKeys)
            {
                pers_sGradoInstruccionId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO3")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO3"] == SI_PARAMETRO3))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO3");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO3", previousValue);
                }
                if (SI_PARAMETRO3 != null && !SI_PARAMETRO3.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO3.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO4(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA4.Contains(this))
            {
                previousValue.RE_PERSONA4.Remove(this);
            }
    
            if (SI_PARAMETRO4 != null)
            {
                if (!SI_PARAMETRO4.RE_PERSONA4.Contains(this))
                {
                    SI_PARAMETRO4.RE_PERSONA4.Add(this);
                }
    
                pers_sNacionalidadId = SI_PARAMETRO4.para_sParametroId;
            }
            else if (!skipKeys)
            {
                pers_sNacionalidadId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO4")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO4"] == SI_PARAMETRO4))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO4");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO4", previousValue);
                }
                if (SI_PARAMETRO4 != null && !SI_PARAMETRO4.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO4.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO5(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA5.Contains(this))
            {
                previousValue.RE_PERSONA5.Remove(this);
            }
    
            if (SI_PARAMETRO5 != null)
            {
                if (!SI_PARAMETRO5.RE_PERSONA5.Contains(this))
                {
                    SI_PARAMETRO5.RE_PERSONA5.Add(this);
                }
    
                pers_sColorOjosId = SI_PARAMETRO5.para_sParametroId;
            }
            else if (!skipKeys)
            {
                pers_sColorOjosId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO5")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO5"] == SI_PARAMETRO5))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO5");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO5", previousValue);
                }
                if (SI_PARAMETRO5 != null && !SI_PARAMETRO5.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO5.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO6(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA6.Contains(this))
            {
                previousValue.RE_PERSONA6.Remove(this);
            }
    
            if (SI_PARAMETRO6 != null)
            {
                if (!SI_PARAMETRO6.RE_PERSONA6.Contains(this))
                {
                    SI_PARAMETRO6.RE_PERSONA6.Add(this);
                }
    
                pers_sGrupoSanguineoId = SI_PARAMETRO6.para_sParametroId;
            }
            else if (!skipKeys)
            {
                pers_sGrupoSanguineoId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO6")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO6"] == SI_PARAMETRO6))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO6");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO6", previousValue);
                }
                if (SI_PARAMETRO6 != null && !SI_PARAMETRO6.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO6.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO7(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA7.Contains(this))
            {
                previousValue.RE_PERSONA7.Remove(this);
            }
    
            if (SI_PARAMETRO7 != null)
            {
                if (!SI_PARAMETRO7.RE_PERSONA7.Contains(this))
                {
                    SI_PARAMETRO7.RE_PERSONA7.Add(this);
                }
    
                pers_sColorTezId = SI_PARAMETRO7.para_sParametroId;
            }
            else if (!skipKeys)
            {
                pers_sColorTezId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO7")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO7"] == SI_PARAMETRO7))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO7");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO7", previousValue);
                }
                if (SI_PARAMETRO7 != null && !SI_PARAMETRO7.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO7.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO8(SI_PARAMETRO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA8.Contains(this))
            {
                previousValue.RE_PERSONA8.Remove(this);
            }
    
            if (SI_PARAMETRO8 != null)
            {
                if (!SI_PARAMETRO8.RE_PERSONA8.Contains(this))
                {
                    SI_PARAMETRO8.RE_PERSONA8.Add(this);
                }
    
                pers_sIdiomaNatalId = SI_PARAMETRO8.para_sParametroId;
            }
            else if (!skipKeys)
            {
                pers_sIdiomaNatalId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO8")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO8"] == SI_PARAMETRO8))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO8");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO8", previousValue);
                }
                if (SI_PARAMETRO8 != null && !SI_PARAMETRO8.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO8.StartTracking();
                }
            }
        }
    
        private void FixupSI_UBICACIONGEOGRAFICA(SI_UBICACIONGEOGRAFICA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA.Contains(this))
            {
                previousValue.RE_PERSONA.Remove(this);
            }
    
            if (SI_UBICACIONGEOGRAFICA != null)
            {
                if (!SI_UBICACIONGEOGRAFICA.RE_PERSONA.Contains(this))
                {
                    SI_UBICACIONGEOGRAFICA.RE_PERSONA.Add(this);
                }
    
                pers_cNacimientoLugar = SI_UBICACIONGEOGRAFICA.ubge_cCodigo;
            }
            else if (!skipKeys)
            {
                pers_cNacimientoLugar = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_UBICACIONGEOGRAFICA")
                    && (ChangeTracker.OriginalValues["SI_UBICACIONGEOGRAFICA"] == SI_UBICACIONGEOGRAFICA))
                {
                    ChangeTracker.OriginalValues.Remove("SI_UBICACIONGEOGRAFICA");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_UBICACIONGEOGRAFICA", previousValue);
                }
                if (SI_UBICACIONGEOGRAFICA != null && !SI_UBICACIONGEOGRAFICA.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_UBICACIONGEOGRAFICA.StartTracking();
                }
            }
        }
    
        private void FixupSI_UBICACIONGEOGRAFICA1(SI_UBICACIONGEOGRAFICA previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_PERSONA1.Contains(this))
            {
                previousValue.RE_PERSONA1.Remove(this);
            }
    
            if (SI_UBICACIONGEOGRAFICA1 != null)
            {
                if (!SI_UBICACIONGEOGRAFICA1.RE_PERSONA1.Contains(this))
                {
                    SI_UBICACIONGEOGRAFICA1.RE_PERSONA1.Add(this);
                }
    
                pers_cUbigeoDefuncion = SI_UBICACIONGEOGRAFICA1.ubge_cCodigo;
            }
            else if (!skipKeys)
            {
                pers_cUbigeoDefuncion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_UBICACIONGEOGRAFICA1")
                    && (ChangeTracker.OriginalValues["SI_UBICACIONGEOGRAFICA1"] == SI_UBICACIONGEOGRAFICA1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_UBICACIONGEOGRAFICA1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_UBICACIONGEOGRAFICA1", previousValue);
                }
                if (SI_UBICACIONGEOGRAFICA1 != null && !SI_UBICACIONGEOGRAFICA1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_UBICACIONGEOGRAFICA1.StartTracking();
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALPARTICIPANTE item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACION item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONAFILIACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONAFILIACION item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONAFILIACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONAFILIACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONAFILIACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONAFOTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONAFOTO item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONAFOTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONAFOTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONAFOTO", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONAIDENTIFICACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONAIDENTIFICACION item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONAIDENTIFICACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONAIDENTIFICACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONAIDENTIFICACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_PERSONARESIDENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_PERSONARESIDENCIA item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_PERSONARESIDENCIA", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_PERSONARESIDENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_PERSONARESIDENCIA", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }
    
        private void FixupRE_REGISTROUNICO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REGISTROUNICO item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REGISTROUNICO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REGISTROUNICO item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REGISTROUNICO", item);
                    }
                }
            }
        }
    
        private void FixupRE_REPRESENTANTELEGAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REPRESENTANTELEGAL item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REPRESENTANTELEGAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REPRESENTANTELEGAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REPRESENTANTELEGAL", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ASISTENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ASISTENCIA item in e.NewItems)
                {
                    item.RE_PERSONA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ASISTENCIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ASISTENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_PERSONA, this))
                    {
                        item.RE_PERSONA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ASISTENCIA", item);
                    }
                }
            }
        }

        #endregion
    }
}
