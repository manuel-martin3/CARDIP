//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AL_INSUMO))]
    [KnownType(typeof(AL_INSUMOHISTORICO))]
    [KnownType(typeof(AL_MOVIMIENTO))]
    [KnownType(typeof(AL_MOVIMIENTODETALLE))]
    [KnownType(typeof(AL_PEDIDO))]
    [KnownType(typeof(AL_PEDIDOHISTORICO))]
    [KnownType(typeof(CL_TICKET))]
    [KnownType(typeof(CO_REMESA))]
    [KnownType(typeof(CO_REMESADETALLE))]
    [KnownType(typeof(RE_ACTOMIGRATORIO))]
    [KnownType(typeof(RE_ACTUACIONDETALLE))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_TARIFARIO))]
    [KnownType(typeof(RE_ACTOJUDICIAL))]
    [KnownType(typeof(RE_ACTOMIGRATORIOHISTORICO))]
    [KnownType(typeof(RE_ACTOJUDICIALNOTIFICACION))]
    [KnownType(typeof(RE_ACTOJUDICIALPARTICIPANTE))]
    [KnownType(typeof(RE_ACTAJUDICIAL))]
    [KnownType(typeof(RE_ASISTENCIA))]
    [KnownType(typeof(RE_ACTONOTARIAL))]
    public partial class MA_ESTADO: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public short esta_sEstadoId
        {
            get { return _esta_sEstadoId; }
            set
            {
                if (_esta_sEstadoId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'esta_sEstadoId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _esta_sEstadoId = value;
                    OnPropertyChanged("esta_sEstadoId");
                }
            }
        }
        private short _esta_sEstadoId;
    
        [DataMember]
        public string esta_vDescripcionCorta
        {
            get { return _esta_vDescripcionCorta; }
            set
            {
                if (_esta_vDescripcionCorta != value)
                {
                    _esta_vDescripcionCorta = value;
                    OnPropertyChanged("esta_vDescripcionCorta");
                }
            }
        }
        private string _esta_vDescripcionCorta;
    
        [DataMember]
        public string esta_vDescripcionLarga
        {
            get { return _esta_vDescripcionLarga; }
            set
            {
                if (_esta_vDescripcionLarga != value)
                {
                    _esta_vDescripcionLarga = value;
                    OnPropertyChanged("esta_vDescripcionLarga");
                }
            }
        }
        private string _esta_vDescripcionLarga;
    
        [DataMember]
        public string esta_vGrupo
        {
            get { return _esta_vGrupo; }
            set
            {
                if (_esta_vGrupo != value)
                {
                    _esta_vGrupo = value;
                    OnPropertyChanged("esta_vGrupo");
                }
            }
        }
        private string _esta_vGrupo;
    
        [DataMember]
        public string esta_cEstado
        {
            get { return _esta_cEstado; }
            set
            {
                if (_esta_cEstado != value)
                {
                    _esta_cEstado = value;
                    OnPropertyChanged("esta_cEstado");
                }
            }
        }
        private string _esta_cEstado;
    
        [DataMember]
        public short esta_sUsuarioCreacion
        {
            get { return _esta_sUsuarioCreacion; }
            set
            {
                if (_esta_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("esta_sUsuarioCreacion", _esta_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _esta_sUsuarioCreacion = value;
                    OnPropertyChanged("esta_sUsuarioCreacion");
                }
            }
        }
        private short _esta_sUsuarioCreacion;
    
        [DataMember]
        public string esta_vIPCreacion
        {
            get { return _esta_vIPCreacion; }
            set
            {
                if (_esta_vIPCreacion != value)
                {
                    _esta_vIPCreacion = value;
                    OnPropertyChanged("esta_vIPCreacion");
                }
            }
        }
        private string _esta_vIPCreacion;
    
        [DataMember]
        public System.DateTime esta_dFechaCreacion
        {
            get { return _esta_dFechaCreacion; }
            set
            {
                if (_esta_dFechaCreacion != value)
                {
                    _esta_dFechaCreacion = value;
                    OnPropertyChanged("esta_dFechaCreacion");
                }
            }
        }
        private System.DateTime _esta_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> esta_sUsuarioModificacion
        {
            get { return _esta_sUsuarioModificacion; }
            set
            {
                if (_esta_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("esta_sUsuarioModificacion", _esta_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _esta_sUsuarioModificacion = value;
                    OnPropertyChanged("esta_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _esta_sUsuarioModificacion;
    
        [DataMember]
        public string esta_vIPModificacion
        {
            get { return _esta_vIPModificacion; }
            set
            {
                if (_esta_vIPModificacion != value)
                {
                    _esta_vIPModificacion = value;
                    OnPropertyChanged("esta_vIPModificacion");
                }
            }
        }
        private string _esta_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> esta_dFechaModificacion
        {
            get { return _esta_dFechaModificacion; }
            set
            {
                if (_esta_dFechaModificacion != value)
                {
                    _esta_dFechaModificacion = value;
                    OnPropertyChanged("esta_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _esta_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AL_INSUMO> AL_INSUMO
        {
            get
            {
                if (_aL_INSUMO == null)
                {
                    _aL_INSUMO = new TrackableCollection<AL_INSUMO>();
                    _aL_INSUMO.CollectionChanged += FixupAL_INSUMO;
                }
                return _aL_INSUMO;
            }
            set
            {
                if (!ReferenceEquals(_aL_INSUMO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_INSUMO != null)
                    {
                        _aL_INSUMO.CollectionChanged -= FixupAL_INSUMO;
                    }
                    _aL_INSUMO = value;
                    if (_aL_INSUMO != null)
                    {
                        _aL_INSUMO.CollectionChanged += FixupAL_INSUMO;
                    }
                    OnNavigationPropertyChanged("AL_INSUMO");
                }
            }
        }
        private TrackableCollection<AL_INSUMO> _aL_INSUMO;
    
        [DataMember]
        public TrackableCollection<AL_INSUMOHISTORICO> AL_INSUMOHISTORICO
        {
            get
            {
                if (_aL_INSUMOHISTORICO == null)
                {
                    _aL_INSUMOHISTORICO = new TrackableCollection<AL_INSUMOHISTORICO>();
                    _aL_INSUMOHISTORICO.CollectionChanged += FixupAL_INSUMOHISTORICO;
                }
                return _aL_INSUMOHISTORICO;
            }
            set
            {
                if (!ReferenceEquals(_aL_INSUMOHISTORICO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_INSUMOHISTORICO != null)
                    {
                        _aL_INSUMOHISTORICO.CollectionChanged -= FixupAL_INSUMOHISTORICO;
                    }
                    _aL_INSUMOHISTORICO = value;
                    if (_aL_INSUMOHISTORICO != null)
                    {
                        _aL_INSUMOHISTORICO.CollectionChanged += FixupAL_INSUMOHISTORICO;
                    }
                    OnNavigationPropertyChanged("AL_INSUMOHISTORICO");
                }
            }
        }
        private TrackableCollection<AL_INSUMOHISTORICO> _aL_INSUMOHISTORICO;
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTO> AL_MOVIMIENTO
        {
            get
            {
                if (_aL_MOVIMIENTO == null)
                {
                    _aL_MOVIMIENTO = new TrackableCollection<AL_MOVIMIENTO>();
                    _aL_MOVIMIENTO.CollectionChanged += FixupAL_MOVIMIENTO;
                }
                return _aL_MOVIMIENTO;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTO != null)
                    {
                        _aL_MOVIMIENTO.CollectionChanged -= FixupAL_MOVIMIENTO;
                    }
                    _aL_MOVIMIENTO = value;
                    if (_aL_MOVIMIENTO != null)
                    {
                        _aL_MOVIMIENTO.CollectionChanged += FixupAL_MOVIMIENTO;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTO");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTO> _aL_MOVIMIENTO;
    
        [DataMember]
        public TrackableCollection<AL_MOVIMIENTODETALLE> AL_MOVIMIENTODETALLE
        {
            get
            {
                if (_aL_MOVIMIENTODETALLE == null)
                {
                    _aL_MOVIMIENTODETALLE = new TrackableCollection<AL_MOVIMIENTODETALLE>();
                    _aL_MOVIMIENTODETALLE.CollectionChanged += FixupAL_MOVIMIENTODETALLE;
                }
                return _aL_MOVIMIENTODETALLE;
            }
            set
            {
                if (!ReferenceEquals(_aL_MOVIMIENTODETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_MOVIMIENTODETALLE != null)
                    {
                        _aL_MOVIMIENTODETALLE.CollectionChanged -= FixupAL_MOVIMIENTODETALLE;
                    }
                    _aL_MOVIMIENTODETALLE = value;
                    if (_aL_MOVIMIENTODETALLE != null)
                    {
                        _aL_MOVIMIENTODETALLE.CollectionChanged += FixupAL_MOVIMIENTODETALLE;
                    }
                    OnNavigationPropertyChanged("AL_MOVIMIENTODETALLE");
                }
            }
        }
        private TrackableCollection<AL_MOVIMIENTODETALLE> _aL_MOVIMIENTODETALLE;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDO> AL_PEDIDO
        {
            get
            {
                if (_aL_PEDIDO == null)
                {
                    _aL_PEDIDO = new TrackableCollection<AL_PEDIDO>();
                    _aL_PEDIDO.CollectionChanged += FixupAL_PEDIDO;
                }
                return _aL_PEDIDO;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDO != null)
                    {
                        _aL_PEDIDO.CollectionChanged -= FixupAL_PEDIDO;
                    }
                    _aL_PEDIDO = value;
                    if (_aL_PEDIDO != null)
                    {
                        _aL_PEDIDO.CollectionChanged += FixupAL_PEDIDO;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDO");
                }
            }
        }
        private TrackableCollection<AL_PEDIDO> _aL_PEDIDO;
    
        [DataMember]
        public TrackableCollection<AL_PEDIDOHISTORICO> AL_PEDIDOHISTORICO
        {
            get
            {
                if (_aL_PEDIDOHISTORICO == null)
                {
                    _aL_PEDIDOHISTORICO = new TrackableCollection<AL_PEDIDOHISTORICO>();
                    _aL_PEDIDOHISTORICO.CollectionChanged += FixupAL_PEDIDOHISTORICO;
                }
                return _aL_PEDIDOHISTORICO;
            }
            set
            {
                if (!ReferenceEquals(_aL_PEDIDOHISTORICO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_aL_PEDIDOHISTORICO != null)
                    {
                        _aL_PEDIDOHISTORICO.CollectionChanged -= FixupAL_PEDIDOHISTORICO;
                    }
                    _aL_PEDIDOHISTORICO = value;
                    if (_aL_PEDIDOHISTORICO != null)
                    {
                        _aL_PEDIDOHISTORICO.CollectionChanged += FixupAL_PEDIDOHISTORICO;
                    }
                    OnNavigationPropertyChanged("AL_PEDIDOHISTORICO");
                }
            }
        }
        private TrackableCollection<AL_PEDIDOHISTORICO> _aL_PEDIDOHISTORICO;
    
        [DataMember]
        public TrackableCollection<CL_TICKET> CL_TICKET
        {
            get
            {
                if (_cL_TICKET == null)
                {
                    _cL_TICKET = new TrackableCollection<CL_TICKET>();
                    _cL_TICKET.CollectionChanged += FixupCL_TICKET;
                }
                return _cL_TICKET;
            }
            set
            {
                if (!ReferenceEquals(_cL_TICKET, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cL_TICKET != null)
                    {
                        _cL_TICKET.CollectionChanged -= FixupCL_TICKET;
                    }
                    _cL_TICKET = value;
                    if (_cL_TICKET != null)
                    {
                        _cL_TICKET.CollectionChanged += FixupCL_TICKET;
                    }
                    OnNavigationPropertyChanged("CL_TICKET");
                }
            }
        }
        private TrackableCollection<CL_TICKET> _cL_TICKET;
    
        [DataMember]
        public TrackableCollection<CO_REMESA> CO_REMESA
        {
            get
            {
                if (_cO_REMESA == null)
                {
                    _cO_REMESA = new TrackableCollection<CO_REMESA>();
                    _cO_REMESA.CollectionChanged += FixupCO_REMESA;
                }
                return _cO_REMESA;
            }
            set
            {
                if (!ReferenceEquals(_cO_REMESA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_REMESA != null)
                    {
                        _cO_REMESA.CollectionChanged -= FixupCO_REMESA;
                    }
                    _cO_REMESA = value;
                    if (_cO_REMESA != null)
                    {
                        _cO_REMESA.CollectionChanged += FixupCO_REMESA;
                    }
                    OnNavigationPropertyChanged("CO_REMESA");
                }
            }
        }
        private TrackableCollection<CO_REMESA> _cO_REMESA;
    
        [DataMember]
        public TrackableCollection<CO_REMESADETALLE> CO_REMESADETALLE
        {
            get
            {
                if (_cO_REMESADETALLE == null)
                {
                    _cO_REMESADETALLE = new TrackableCollection<CO_REMESADETALLE>();
                    _cO_REMESADETALLE.CollectionChanged += FixupCO_REMESADETALLE;
                }
                return _cO_REMESADETALLE;
            }
            set
            {
                if (!ReferenceEquals(_cO_REMESADETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cO_REMESADETALLE != null)
                    {
                        _cO_REMESADETALLE.CollectionChanged -= FixupCO_REMESADETALLE;
                    }
                    _cO_REMESADETALLE = value;
                    if (_cO_REMESADETALLE != null)
                    {
                        _cO_REMESADETALLE.CollectionChanged += FixupCO_REMESADETALLE;
                    }
                    OnNavigationPropertyChanged("CO_REMESADETALLE");
                }
            }
        }
        private TrackableCollection<CO_REMESADETALLE> _cO_REMESADETALLE;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIO> RE_ACTOMIGRATORIO
        {
            get
            {
                if (_rE_ACTOMIGRATORIO == null)
                {
                    _rE_ACTOMIGRATORIO = new TrackableCollection<RE_ACTOMIGRATORIO>();
                    _rE_ACTOMIGRATORIO.CollectionChanged += FixupRE_ACTOMIGRATORIO;
                }
                return _rE_ACTOMIGRATORIO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIO != null)
                    {
                        _rE_ACTOMIGRATORIO.CollectionChanged -= FixupRE_ACTOMIGRATORIO;
                    }
                    _rE_ACTOMIGRATORIO = value;
                    if (_rE_ACTOMIGRATORIO != null)
                    {
                        _rE_ACTOMIGRATORIO.CollectionChanged += FixupRE_ACTOMIGRATORIO;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIO");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIO> _rE_ACTOMIGRATORIO;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONDETALLE> RE_ACTUACIONDETALLE
        {
            get
            {
                if (_rE_ACTUACIONDETALLE == null)
                {
                    _rE_ACTUACIONDETALLE = new TrackableCollection<RE_ACTUACIONDETALLE>();
                    _rE_ACTUACIONDETALLE.CollectionChanged += FixupRE_ACTUACIONDETALLE;
                }
                return _rE_ACTUACIONDETALLE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONDETALLE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONDETALLE != null)
                    {
                        _rE_ACTUACIONDETALLE.CollectionChanged -= FixupRE_ACTUACIONDETALLE;
                    }
                    _rE_ACTUACIONDETALLE = value;
                    if (_rE_ACTUACIONDETALLE != null)
                    {
                        _rE_ACTUACIONDETALLE.CollectionChanged += FixupRE_ACTUACIONDETALLE;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONDETALLE");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONDETALLE> _rE_ACTUACIONDETALLE;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public TrackableCollection<SI_TARIFARIO> SI_TARIFARIO
        {
            get
            {
                if (_sI_TARIFARIO == null)
                {
                    _sI_TARIFARIO = new TrackableCollection<SI_TARIFARIO>();
                    _sI_TARIFARIO.CollectionChanged += FixupSI_TARIFARIO;
                }
                return _sI_TARIFARIO;
            }
            set
            {
                if (!ReferenceEquals(_sI_TARIFARIO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sI_TARIFARIO != null)
                    {
                        _sI_TARIFARIO.CollectionChanged -= FixupSI_TARIFARIO;
                    }
                    _sI_TARIFARIO = value;
                    if (_sI_TARIFARIO != null)
                    {
                        _sI_TARIFARIO.CollectionChanged += FixupSI_TARIFARIO;
                    }
                    OnNavigationPropertyChanged("SI_TARIFARIO");
                }
            }
        }
        private TrackableCollection<SI_TARIFARIO> _sI_TARIFARIO;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIAL> RE_ACTOJUDICIAL
        {
            get
            {
                if (_rE_ACTOJUDICIAL == null)
                {
                    _rE_ACTOJUDICIAL = new TrackableCollection<RE_ACTOJUDICIAL>();
                    _rE_ACTOJUDICIAL.CollectionChanged += FixupRE_ACTOJUDICIAL;
                }
                return _rE_ACTOJUDICIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIAL != null)
                    {
                        _rE_ACTOJUDICIAL.CollectionChanged -= FixupRE_ACTOJUDICIAL;
                    }
                    _rE_ACTOJUDICIAL = value;
                    if (_rE_ACTOJUDICIAL != null)
                    {
                        _rE_ACTOJUDICIAL.CollectionChanged += FixupRE_ACTOJUDICIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIAL> _rE_ACTOJUDICIAL;
    
        [DataMember]
        public TrackableCollection<RE_ACTOMIGRATORIOHISTORICO> RE_ACTOMIGRATORIOHISTORICO
        {
            get
            {
                if (_rE_ACTOMIGRATORIOHISTORICO == null)
                {
                    _rE_ACTOMIGRATORIOHISTORICO = new TrackableCollection<RE_ACTOMIGRATORIOHISTORICO>();
                    _rE_ACTOMIGRATORIOHISTORICO.CollectionChanged += FixupRE_ACTOMIGRATORIOHISTORICO;
                }
                return _rE_ACTOMIGRATORIOHISTORICO;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOMIGRATORIOHISTORICO, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOMIGRATORIOHISTORICO != null)
                    {
                        _rE_ACTOMIGRATORIOHISTORICO.CollectionChanged -= FixupRE_ACTOMIGRATORIOHISTORICO;
                    }
                    _rE_ACTOMIGRATORIOHISTORICO = value;
                    if (_rE_ACTOMIGRATORIOHISTORICO != null)
                    {
                        _rE_ACTOMIGRATORIOHISTORICO.CollectionChanged += FixupRE_ACTOMIGRATORIOHISTORICO;
                    }
                    OnNavigationPropertyChanged("RE_ACTOMIGRATORIOHISTORICO");
                }
            }
        }
        private TrackableCollection<RE_ACTOMIGRATORIOHISTORICO> _rE_ACTOMIGRATORIOHISTORICO;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALNOTIFICACION> RE_ACTOJUDICIALNOTIFICACION
        {
            get
            {
                if (_rE_ACTOJUDICIALNOTIFICACION == null)
                {
                    _rE_ACTOJUDICIALNOTIFICACION = new TrackableCollection<RE_ACTOJUDICIALNOTIFICACION>();
                    _rE_ACTOJUDICIALNOTIFICACION.CollectionChanged += FixupRE_ACTOJUDICIALNOTIFICACION;
                }
                return _rE_ACTOJUDICIALNOTIFICACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALNOTIFICACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALNOTIFICACION != null)
                    {
                        _rE_ACTOJUDICIALNOTIFICACION.CollectionChanged -= FixupRE_ACTOJUDICIALNOTIFICACION;
                    }
                    _rE_ACTOJUDICIALNOTIFICACION = value;
                    if (_rE_ACTOJUDICIALNOTIFICACION != null)
                    {
                        _rE_ACTOJUDICIALNOTIFICACION.CollectionChanged += FixupRE_ACTOJUDICIALNOTIFICACION;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALNOTIFICACION");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALNOTIFICACION> _rE_ACTOJUDICIALNOTIFICACION;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> RE_ACTOJUDICIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTOJUDICIALPARTICIPANTE == null)
                {
                    _rE_ACTOJUDICIALPARTICIPANTE = new TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE>();
                    _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                }
                return _rE_ACTOJUDICIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    _rE_ACTOJUDICIALPARTICIPANTE = value;
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> _rE_ACTOJUDICIALPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ACTAJUDICIAL> RE_ACTAJUDICIAL
        {
            get
            {
                if (_rE_ACTAJUDICIAL == null)
                {
                    _rE_ACTAJUDICIAL = new TrackableCollection<RE_ACTAJUDICIAL>();
                    _rE_ACTAJUDICIAL.CollectionChanged += FixupRE_ACTAJUDICIAL;
                }
                return _rE_ACTAJUDICIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTAJUDICIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTAJUDICIAL != null)
                    {
                        _rE_ACTAJUDICIAL.CollectionChanged -= FixupRE_ACTAJUDICIAL;
                    }
                    _rE_ACTAJUDICIAL = value;
                    if (_rE_ACTAJUDICIAL != null)
                    {
                        _rE_ACTAJUDICIAL.CollectionChanged += FixupRE_ACTAJUDICIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTAJUDICIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTAJUDICIAL> _rE_ACTAJUDICIAL;
    
        [DataMember]
        public TrackableCollection<RE_ASISTENCIA> RE_ASISTENCIA
        {
            get
            {
                if (_rE_ASISTENCIA == null)
                {
                    _rE_ASISTENCIA = new TrackableCollection<RE_ASISTENCIA>();
                    _rE_ASISTENCIA.CollectionChanged += FixupRE_ASISTENCIA;
                }
                return _rE_ASISTENCIA;
            }
            set
            {
                if (!ReferenceEquals(_rE_ASISTENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ASISTENCIA != null)
                    {
                        _rE_ASISTENCIA.CollectionChanged -= FixupRE_ASISTENCIA;
                    }
                    _rE_ASISTENCIA = value;
                    if (_rE_ASISTENCIA != null)
                    {
                        _rE_ASISTENCIA.CollectionChanged += FixupRE_ASISTENCIA;
                    }
                    OnNavigationPropertyChanged("RE_ASISTENCIA");
                }
            }
        }
        private TrackableCollection<RE_ASISTENCIA> _rE_ASISTENCIA;
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIAL> RE_ACTONOTARIAL
        {
            get
            {
                if (_rE_ACTONOTARIAL == null)
                {
                    _rE_ACTONOTARIAL = new TrackableCollection<RE_ACTONOTARIAL>();
                    _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                }
                return _rE_ACTONOTARIAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged -= FixupRE_ACTONOTARIAL;
                    }
                    _rE_ACTONOTARIAL = value;
                    if (_rE_ACTONOTARIAL != null)
                    {
                        _rE_ACTONOTARIAL.CollectionChanged += FixupRE_ACTONOTARIAL;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIAL");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIAL> _rE_ACTONOTARIAL;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AL_INSUMO.Clear();
            AL_INSUMOHISTORICO.Clear();
            AL_MOVIMIENTO.Clear();
            AL_MOVIMIENTODETALLE.Clear();
            AL_PEDIDO.Clear();
            AL_PEDIDOHISTORICO.Clear();
            CL_TICKET.Clear();
            CO_REMESA.Clear();
            CO_REMESADETALLE.Clear();
            RE_ACTOMIGRATORIO.Clear();
            RE_ACTUACIONDETALLE.Clear();
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_TARIFARIO.Clear();
            RE_ACTOJUDICIAL.Clear();
            RE_ACTOMIGRATORIOHISTORICO.Clear();
            RE_ACTOJUDICIALNOTIFICACION.Clear();
            RE_ACTOJUDICIALPARTICIPANTE.Clear();
            RE_ACTAJUDICIAL.Clear();
            RE_ASISTENCIA.Clear();
            RE_ACTONOTARIAL.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MA_ESTADO.Contains(this))
            {
                previousValue.MA_ESTADO.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.MA_ESTADO.Contains(this))
                {
                    SE_USUARIO.MA_ESTADO.Add(this);
                }
    
                esta_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MA_ESTADO1.Contains(this))
            {
                previousValue.MA_ESTADO1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.MA_ESTADO1.Contains(this))
                {
                    SE_USUARIO1.MA_ESTADO1.Add(this);
                }
    
                esta_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                esta_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupAL_INSUMO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_INSUMO item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_INSUMO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_INSUMO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_INSUMO", item);
                    }
                }
            }
        }
    
        private void FixupAL_INSUMOHISTORICO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_INSUMOHISTORICO item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_INSUMOHISTORICO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_INSUMOHISTORICO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_INSUMOHISTORICO", item);
                    }
                }
            }
        }
    
        private void FixupAL_MOVIMIENTO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTO", item);
                    }
                }
            }
        }
    
        private void FixupAL_MOVIMIENTODETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_MOVIMIENTODETALLE item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_MOVIMIENTODETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_MOVIMIENTODETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_MOVIMIENTODETALLE", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDO item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDO", item);
                    }
                }
            }
        }
    
        private void FixupAL_PEDIDOHISTORICO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AL_PEDIDOHISTORICO item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AL_PEDIDOHISTORICO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AL_PEDIDOHISTORICO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AL_PEDIDOHISTORICO", item);
                    }
                }
            }
        }
    
        private void FixupCL_TICKET(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CL_TICKET item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CL_TICKET", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CL_TICKET item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CL_TICKET", item);
                    }
                }
            }
        }
    
        private void FixupCO_REMESA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_REMESA item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_REMESA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_REMESA item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_REMESA", item);
                    }
                }
            }
        }
    
        private void FixupCO_REMESADETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CO_REMESADETALLE item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CO_REMESADETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CO_REMESADETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CO_REMESADETALLE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONDETALLE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONDETALLE item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONDETALLE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONDETALLE item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONDETALLE", item);
                    }
                }
            }
        }
    
        private void FixupSI_TARIFARIO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SI_TARIFARIO item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SI_TARIFARIO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SI_TARIFARIO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SI_TARIFARIO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIAL item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIAL", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOMIGRATORIOHISTORICO(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOMIGRATORIOHISTORICO item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOMIGRATORIOHISTORICO", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOMIGRATORIOHISTORICO item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOMIGRATORIOHISTORICO", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALNOTIFICACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALNOTIFICACION item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALNOTIFICACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALNOTIFICACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALNOTIFICACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTAJUDICIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTAJUDICIAL item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTAJUDICIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTAJUDICIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTAJUDICIAL", item);
                    }
                }
            }
        }
    
        private void FixupRE_ASISTENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ASISTENCIA item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ASISTENCIA", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ASISTENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ASISTENCIA", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTONOTARIAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.NewItems)
                {
                    item.MA_ESTADO = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.MA_ESTADO, this))
                    {
                        item.MA_ESTADO = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIAL", item);
                    }
                }
            }
        }

        #endregion
    }
}
