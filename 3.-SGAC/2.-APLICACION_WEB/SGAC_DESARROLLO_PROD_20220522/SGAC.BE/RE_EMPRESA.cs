//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace SGAC.BE
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(RE_ACTONOTARIALPARTICIPANTE))]
    [KnownType(typeof(SE_USUARIO))]
    [KnownType(typeof(SI_PARAMETRO))]
    [KnownType(typeof(RE_EMPRESARESIDENCIA))]
    [KnownType(typeof(RE_REPRESENTANTELEGAL))]
    [KnownType(typeof(RE_ACTUACIONPARTICIPANTE))]
    [KnownType(typeof(RE_ACTUACION))]
    [KnownType(typeof(RE_ACTOJUDICIALPARTICIPANTE))]
    public partial class RE_EMPRESA: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long empr_iEmpresaId
        {
            get { return _empr_iEmpresaId; }
            set
            {
                if (_empr_iEmpresaId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'empr_iEmpresaId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _empr_iEmpresaId = value;
                    OnPropertyChanged("empr_iEmpresaId");
                }
            }
        }
        private long _empr_iEmpresaId;
    
        [DataMember]
        public short empr_sTipoEmpresaId
        {
            get { return _empr_sTipoEmpresaId; }
            set
            {
                if (_empr_sTipoEmpresaId != value)
                {
                    ChangeTracker.RecordOriginalValue("empr_sTipoEmpresaId", _empr_sTipoEmpresaId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO != null && SI_PARAMETRO.para_sParametroId != value)
                        {
                            SI_PARAMETRO = null;
                        }
                    }
                    _empr_sTipoEmpresaId = value;
                    OnPropertyChanged("empr_sTipoEmpresaId");
                }
            }
        }
        private short _empr_sTipoEmpresaId;
    
        [DataMember]
        public short empr_sTipoDocumentoId
        {
            get { return _empr_sTipoDocumentoId; }
            set
            {
                if (_empr_sTipoDocumentoId != value)
                {
                    ChangeTracker.RecordOriginalValue("empr_sTipoDocumentoId", _empr_sTipoDocumentoId);
                    if (!IsDeserializing)
                    {
                        if (SI_PARAMETRO1 != null && SI_PARAMETRO1.para_sParametroId != value)
                        {
                            SI_PARAMETRO1 = null;
                        }
                    }
                    _empr_sTipoDocumentoId = value;
                    OnPropertyChanged("empr_sTipoDocumentoId");
                }
            }
        }
        private short _empr_sTipoDocumentoId;
    
        [DataMember]
        public string empr_vRazonSocial
        {
            get { return _empr_vRazonSocial; }
            set
            {
                if (_empr_vRazonSocial != value)
                {
                    _empr_vRazonSocial = value;
                    OnPropertyChanged("empr_vRazonSocial");
                }
            }
        }
        private string _empr_vRazonSocial;
    
        [DataMember]
        public string empr_vNumeroDocumento
        {
            get { return _empr_vNumeroDocumento; }
            set
            {
                if (_empr_vNumeroDocumento != value)
                {
                    _empr_vNumeroDocumento = value;
                    OnPropertyChanged("empr_vNumeroDocumento");
                }
            }
        }
        private string _empr_vNumeroDocumento;
    
        [DataMember]
        public string empr_vActividadComercial
        {
            get { return _empr_vActividadComercial; }
            set
            {
                if (_empr_vActividadComercial != value)
                {
                    _empr_vActividadComercial = value;
                    OnPropertyChanged("empr_vActividadComercial");
                }
            }
        }
        private string _empr_vActividadComercial;
    
        [DataMember]
        public string empr_vTelefono
        {
            get { return _empr_vTelefono; }
            set
            {
                if (_empr_vTelefono != value)
                {
                    _empr_vTelefono = value;
                    OnPropertyChanged("empr_vTelefono");
                }
            }
        }
        private string _empr_vTelefono;
    
        [DataMember]
        public string empr_vCorreo
        {
            get { return _empr_vCorreo; }
            set
            {
                if (_empr_vCorreo != value)
                {
                    _empr_vCorreo = value;
                    OnPropertyChanged("empr_vCorreo");
                }
            }
        }
        private string _empr_vCorreo;
    
        [DataMember]
        public string empr_cEstado
        {
            get { return _empr_cEstado; }
            set
            {
                if (_empr_cEstado != value)
                {
                    _empr_cEstado = value;
                    OnPropertyChanged("empr_cEstado");
                }
            }
        }
        private string _empr_cEstado;
    
        [DataMember]
        public short empr_sUsuarioCreacion
        {
            get { return _empr_sUsuarioCreacion; }
            set
            {
                if (_empr_sUsuarioCreacion != value)
                {
                    ChangeTracker.RecordOriginalValue("empr_sUsuarioCreacion", _empr_sUsuarioCreacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO != null && SE_USUARIO.usua_sUsuarioId != value)
                        {
                            SE_USUARIO = null;
                        }
                    }
                    _empr_sUsuarioCreacion = value;
                    OnPropertyChanged("empr_sUsuarioCreacion");
                }
            }
        }
        private short _empr_sUsuarioCreacion;
    
        [DataMember]
        public string empr_vIPCreacion
        {
            get { return _empr_vIPCreacion; }
            set
            {
                if (_empr_vIPCreacion != value)
                {
                    _empr_vIPCreacion = value;
                    OnPropertyChanged("empr_vIPCreacion");
                }
            }
        }
        private string _empr_vIPCreacion;
    
        [DataMember]
        public System.DateTime empr_dFechaCreacion
        {
            get { return _empr_dFechaCreacion; }
            set
            {
                if (_empr_dFechaCreacion != value)
                {
                    _empr_dFechaCreacion = value;
                    OnPropertyChanged("empr_dFechaCreacion");
                }
            }
        }
        private System.DateTime _empr_dFechaCreacion;
    
        [DataMember]
        public Nullable<short> empr_sUsuarioModificacion
        {
            get { return _empr_sUsuarioModificacion; }
            set
            {
                if (_empr_sUsuarioModificacion != value)
                {
                    ChangeTracker.RecordOriginalValue("empr_sUsuarioModificacion", _empr_sUsuarioModificacion);
                    if (!IsDeserializing)
                    {
                        if (SE_USUARIO1 != null && SE_USUARIO1.usua_sUsuarioId != value)
                        {
                            SE_USUARIO1 = null;
                        }
                    }
                    _empr_sUsuarioModificacion = value;
                    OnPropertyChanged("empr_sUsuarioModificacion");
                }
            }
        }
        private Nullable<short> _empr_sUsuarioModificacion;
    
        [DataMember]
        public string empr_vIPModificacion
        {
            get { return _empr_vIPModificacion; }
            set
            {
                if (_empr_vIPModificacion != value)
                {
                    _empr_vIPModificacion = value;
                    OnPropertyChanged("empr_vIPModificacion");
                }
            }
        }
        private string _empr_vIPModificacion;
    
        [DataMember]
        public Nullable<System.DateTime> empr_dFechaModificacion
        {
            get { return _empr_dFechaModificacion; }
            set
            {
                if (_empr_dFechaModificacion != value)
                {
                    _empr_dFechaModificacion = value;
                    OnPropertyChanged("empr_dFechaModificacion");
                }
            }
        }
        private Nullable<System.DateTime> _empr_dFechaModificacion;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<RE_ACTONOTARIALPARTICIPANTE> RE_ACTONOTARIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTONOTARIALPARTICIPANTE == null)
                {
                    _rE_ACTONOTARIALPARTICIPANTE = new TrackableCollection<RE_ACTONOTARIALPARTICIPANTE>();
                    _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged += FixupRE_ACTONOTARIALPARTICIPANTE;
                }
                return _rE_ACTONOTARIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTONOTARIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTONOTARIALPARTICIPANTE != null)
                    {
                        _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTONOTARIALPARTICIPANTE;
                    }
                    _rE_ACTONOTARIALPARTICIPANTE = value;
                    if (_rE_ACTONOTARIALPARTICIPANTE != null)
                    {
                        _rE_ACTONOTARIALPARTICIPANTE.CollectionChanged += FixupRE_ACTONOTARIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTONOTARIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTONOTARIALPARTICIPANTE> _rE_ACTONOTARIALPARTICIPANTE;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO
        {
            get { return _sE_USUARIO; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO, value))
                {
                    var previousValue = _sE_USUARIO;
                    _sE_USUARIO = value;
                    FixupSE_USUARIO(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO;
    
        [DataMember]
        public SE_USUARIO SE_USUARIO1
        {
            get { return _sE_USUARIO1; }
            set
            {
                if (!ReferenceEquals(_sE_USUARIO1, value))
                {
                    var previousValue = _sE_USUARIO1;
                    _sE_USUARIO1 = value;
                    FixupSE_USUARIO1(previousValue);
                    OnNavigationPropertyChanged("SE_USUARIO1");
                }
            }
        }
        private SE_USUARIO _sE_USUARIO1;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO
        {
            get { return _sI_PARAMETRO; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO, value))
                {
                    var previousValue = _sI_PARAMETRO;
                    _sI_PARAMETRO = value;
                    FixupSI_PARAMETRO(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO;
    
        [DataMember]
        public SI_PARAMETRO SI_PARAMETRO1
        {
            get { return _sI_PARAMETRO1; }
            set
            {
                if (!ReferenceEquals(_sI_PARAMETRO1, value))
                {
                    var previousValue = _sI_PARAMETRO1;
                    _sI_PARAMETRO1 = value;
                    FixupSI_PARAMETRO1(previousValue);
                    OnNavigationPropertyChanged("SI_PARAMETRO1");
                }
            }
        }
        private SI_PARAMETRO _sI_PARAMETRO1;
    
        [DataMember]
        public TrackableCollection<RE_EMPRESARESIDENCIA> RE_EMPRESARESIDENCIA
        {
            get
            {
                if (_rE_EMPRESARESIDENCIA == null)
                {
                    _rE_EMPRESARESIDENCIA = new TrackableCollection<RE_EMPRESARESIDENCIA>();
                    _rE_EMPRESARESIDENCIA.CollectionChanged += FixupRE_EMPRESARESIDENCIA;
                }
                return _rE_EMPRESARESIDENCIA;
            }
            set
            {
                if (!ReferenceEquals(_rE_EMPRESARESIDENCIA, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_EMPRESARESIDENCIA != null)
                    {
                        _rE_EMPRESARESIDENCIA.CollectionChanged -= FixupRE_EMPRESARESIDENCIA;
                        // This is the principal end in an association that performs cascade deletes.
                        // Remove the cascade delete event handler for any entities in the current collection.
                        foreach (RE_EMPRESARESIDENCIA item in _rE_EMPRESARESIDENCIA)
                        {
                            ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                        }
                    }
                    _rE_EMPRESARESIDENCIA = value;
                    if (_rE_EMPRESARESIDENCIA != null)
                    {
                        _rE_EMPRESARESIDENCIA.CollectionChanged += FixupRE_EMPRESARESIDENCIA;
                        // This is the principal end in an association that performs cascade deletes.
                        // Add the cascade delete event handler for any entities that are already in the new collection.
                        foreach (RE_EMPRESARESIDENCIA item in _rE_EMPRESARESIDENCIA)
                        {
                            ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                        }
                    }
                    OnNavigationPropertyChanged("RE_EMPRESARESIDENCIA");
                }
            }
        }
        private TrackableCollection<RE_EMPRESARESIDENCIA> _rE_EMPRESARESIDENCIA;
    
        [DataMember]
        public TrackableCollection<RE_REPRESENTANTELEGAL> RE_REPRESENTANTELEGAL
        {
            get
            {
                if (_rE_REPRESENTANTELEGAL == null)
                {
                    _rE_REPRESENTANTELEGAL = new TrackableCollection<RE_REPRESENTANTELEGAL>();
                    _rE_REPRESENTANTELEGAL.CollectionChanged += FixupRE_REPRESENTANTELEGAL;
                }
                return _rE_REPRESENTANTELEGAL;
            }
            set
            {
                if (!ReferenceEquals(_rE_REPRESENTANTELEGAL, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_REPRESENTANTELEGAL != null)
                    {
                        _rE_REPRESENTANTELEGAL.CollectionChanged -= FixupRE_REPRESENTANTELEGAL;
                    }
                    _rE_REPRESENTANTELEGAL = value;
                    if (_rE_REPRESENTANTELEGAL != null)
                    {
                        _rE_REPRESENTANTELEGAL.CollectionChanged += FixupRE_REPRESENTANTELEGAL;
                    }
                    OnNavigationPropertyChanged("RE_REPRESENTANTELEGAL");
                }
            }
        }
        private TrackableCollection<RE_REPRESENTANTELEGAL> _rE_REPRESENTANTELEGAL;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACIONPARTICIPANTE> RE_ACTUACIONPARTICIPANTE
        {
            get
            {
                if (_rE_ACTUACIONPARTICIPANTE == null)
                {
                    _rE_ACTUACIONPARTICIPANTE = new TrackableCollection<RE_ACTUACIONPARTICIPANTE>();
                    _rE_ACTUACIONPARTICIPANTE.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE;
                }
                return _rE_ACTUACIONPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACIONPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACIONPARTICIPANTE != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE.CollectionChanged -= FixupRE_ACTUACIONPARTICIPANTE;
                    }
                    _rE_ACTUACIONPARTICIPANTE = value;
                    if (_rE_ACTUACIONPARTICIPANTE != null)
                    {
                        _rE_ACTUACIONPARTICIPANTE.CollectionChanged += FixupRE_ACTUACIONPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACIONPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTUACIONPARTICIPANTE> _rE_ACTUACIONPARTICIPANTE;
    
        [DataMember]
        public TrackableCollection<RE_ACTUACION> RE_ACTUACION
        {
            get
            {
                if (_rE_ACTUACION == null)
                {
                    _rE_ACTUACION = new TrackableCollection<RE_ACTUACION>();
                    _rE_ACTUACION.CollectionChanged += FixupRE_ACTUACION;
                }
                return _rE_ACTUACION;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTUACION, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTUACION != null)
                    {
                        _rE_ACTUACION.CollectionChanged -= FixupRE_ACTUACION;
                    }
                    _rE_ACTUACION = value;
                    if (_rE_ACTUACION != null)
                    {
                        _rE_ACTUACION.CollectionChanged += FixupRE_ACTUACION;
                    }
                    OnNavigationPropertyChanged("RE_ACTUACION");
                }
            }
        }
        private TrackableCollection<RE_ACTUACION> _rE_ACTUACION;
    
        [DataMember]
        public TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> RE_ACTOJUDICIALPARTICIPANTE
        {
            get
            {
                if (_rE_ACTOJUDICIALPARTICIPANTE == null)
                {
                    _rE_ACTOJUDICIALPARTICIPANTE = new TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE>();
                    _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                }
                return _rE_ACTOJUDICIALPARTICIPANTE;
            }
            set
            {
                if (!ReferenceEquals(_rE_ACTOJUDICIALPARTICIPANTE, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged -= FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    _rE_ACTOJUDICIALPARTICIPANTE = value;
                    if (_rE_ACTOJUDICIALPARTICIPANTE != null)
                    {
                        _rE_ACTOJUDICIALPARTICIPANTE.CollectionChanged += FixupRE_ACTOJUDICIALPARTICIPANTE;
                    }
                    OnNavigationPropertyChanged("RE_ACTOJUDICIALPARTICIPANTE");
                }
            }
        }
        private TrackableCollection<RE_ACTOJUDICIALPARTICIPANTE> _rE_ACTOJUDICIALPARTICIPANTE;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
    
    
    
    		private Int16 _sOficinaConsularId;
    	[DataMember]
        public Int16 OficinaConsularId
        {
            get
            {
    			return _sOficinaConsularId;
    		}
    		set
    		{
    			_sOficinaConsularId = value;
    		}
    	}
    	private Int16 _sDiferenciaHoraria;
    	[DataMember]
        public Int16 DiferenciaHoraria
        {
            get
            {
    			return _sDiferenciaHoraria;
    		}
    		set
    		{
    			_sDiferenciaHoraria = value;
    		}
    	}
    	private Int16 _sHorarioVerano;
    	[DataMember]
        public Int16 HorarioVerano
        {
            get
            {
    			return _sHorarioVerano;
    		}
    		set
    		{
    			_sHorarioVerano = value;
    		}
    	}
    
    
    
    
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            RE_ACTONOTARIALPARTICIPANTE.Clear();
            SE_USUARIO = null;
            SE_USUARIO1 = null;
            SI_PARAMETRO = null;
            SI_PARAMETRO1 = null;
            RE_EMPRESARESIDENCIA.Clear();
            RE_REPRESENTANTELEGAL.Clear();
            RE_ACTUACIONPARTICIPANTE.Clear();
            RE_ACTUACION.Clear();
            RE_ACTOJUDICIALPARTICIPANTE.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupSE_USUARIO(SE_USUARIO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_EMPRESA.Contains(this))
            {
                previousValue.RE_EMPRESA.Remove(this);
            }
    
            if (SE_USUARIO != null)
            {
                if (!SE_USUARIO.RE_EMPRESA.Contains(this))
                {
                    SE_USUARIO.RE_EMPRESA.Add(this);
                }
    
                empr_sUsuarioCreacion = SE_USUARIO.usua_sUsuarioId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO")
                    && (ChangeTracker.OriginalValues["SE_USUARIO"] == SE_USUARIO))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO", previousValue);
                }
                if (SE_USUARIO != null && !SE_USUARIO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO.StartTracking();
                }
            }
        }
    
        private void FixupSE_USUARIO1(SE_USUARIO previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_EMPRESA1.Contains(this))
            {
                previousValue.RE_EMPRESA1.Remove(this);
            }
    
            if (SE_USUARIO1 != null)
            {
                if (!SE_USUARIO1.RE_EMPRESA1.Contains(this))
                {
                    SE_USUARIO1.RE_EMPRESA1.Add(this);
                }
    
                empr_sUsuarioModificacion = SE_USUARIO1.usua_sUsuarioId;
            }
            else if (!skipKeys)
            {
                empr_sUsuarioModificacion = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SE_USUARIO1")
                    && (ChangeTracker.OriginalValues["SE_USUARIO1"] == SE_USUARIO1))
                {
                    ChangeTracker.OriginalValues.Remove("SE_USUARIO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SE_USUARIO1", previousValue);
                }
                if (SE_USUARIO1 != null && !SE_USUARIO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SE_USUARIO1.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_EMPRESA.Contains(this))
            {
                previousValue.RE_EMPRESA.Remove(this);
            }
    
            if (SI_PARAMETRO != null)
            {
                if (!SI_PARAMETRO.RE_EMPRESA.Contains(this))
                {
                    SI_PARAMETRO.RE_EMPRESA.Add(this);
                }
    
                empr_sTipoEmpresaId = SI_PARAMETRO.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO"] == SI_PARAMETRO))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO", previousValue);
                }
                if (SI_PARAMETRO != null && !SI_PARAMETRO.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO.StartTracking();
                }
            }
        }
    
        private void FixupSI_PARAMETRO1(SI_PARAMETRO previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RE_EMPRESA1.Contains(this))
            {
                previousValue.RE_EMPRESA1.Remove(this);
            }
    
            if (SI_PARAMETRO1 != null)
            {
                if (!SI_PARAMETRO1.RE_EMPRESA1.Contains(this))
                {
                    SI_PARAMETRO1.RE_EMPRESA1.Add(this);
                }
    
                empr_sTipoDocumentoId = SI_PARAMETRO1.para_sParametroId;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("SI_PARAMETRO1")
                    && (ChangeTracker.OriginalValues["SI_PARAMETRO1"] == SI_PARAMETRO1))
                {
                    ChangeTracker.OriginalValues.Remove("SI_PARAMETRO1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("SI_PARAMETRO1", previousValue);
                }
                if (SI_PARAMETRO1 != null && !SI_PARAMETRO1.ChangeTracker.ChangeTrackingEnabled)
                {
                    SI_PARAMETRO1.StartTracking();
                }
            }
        }
    
        private void FixupRE_ACTONOTARIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTONOTARIALPARTICIPANTE item in e.NewItems)
                {
                    item.RE_EMPRESA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTONOTARIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTONOTARIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_EMPRESA, this))
                    {
                        item.RE_EMPRESA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTONOTARIALPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_EMPRESARESIDENCIA(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_EMPRESARESIDENCIA item in e.NewItems)
                {
                    item.RE_EMPRESA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_EMPRESARESIDENCIA", item);
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Update the event listener to refer to the new dependent.
                    ChangeTracker.ObjectStateChanging += item.HandleCascadeDelete;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_EMPRESARESIDENCIA item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_EMPRESA, this))
                    {
                        item.RE_EMPRESA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_EMPRESARESIDENCIA", item);
                        // Delete the dependent end of this identifying association. If the current state is Added,
                        // allow the relationship to be changed without causing the dependent to be deleted.
                        if (item.ChangeTracker.State != ObjectState.Added)
                        {
                            item.MarkAsDeleted();
                        }
                    }
                    // This is the principal end in an association that performs cascade deletes.
                    // Remove the previous dependent from the event listener.
                    ChangeTracker.ObjectStateChanging -= item.HandleCascadeDelete;
                }
            }
        }
    
        private void FixupRE_REPRESENTANTELEGAL(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_REPRESENTANTELEGAL item in e.NewItems)
                {
                    item.RE_EMPRESA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_REPRESENTANTELEGAL", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_REPRESENTANTELEGAL item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_EMPRESA, this))
                    {
                        item.RE_EMPRESA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_REPRESENTANTELEGAL", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACIONPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.NewItems)
                {
                    item.RE_EMPRESA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACIONPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACIONPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_EMPRESA, this))
                    {
                        item.RE_EMPRESA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACIONPARTICIPANTE", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTUACION(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTUACION item in e.NewItems)
                {
                    item.RE_EMPRESA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTUACION", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTUACION item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_EMPRESA, this))
                    {
                        item.RE_EMPRESA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTUACION", item);
                    }
                }
            }
        }
    
        private void FixupRE_ACTOJUDICIALPARTICIPANTE(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.NewItems)
                {
                    item.RE_EMPRESA = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RE_ACTOJUDICIALPARTICIPANTE item in e.OldItems)
                {
                    if (ReferenceEquals(item.RE_EMPRESA, this))
                    {
                        item.RE_EMPRESA = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RE_ACTOJUDICIALPARTICIPANTE", item);
                    }
                }
            }
        }

        #endregion
    }
}
